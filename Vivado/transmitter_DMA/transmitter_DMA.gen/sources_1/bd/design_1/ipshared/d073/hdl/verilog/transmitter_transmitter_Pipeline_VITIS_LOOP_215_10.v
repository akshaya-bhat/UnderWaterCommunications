// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module transmitter_transmitter_Pipeline_VITIS_LOOP_215_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dataPulseShapedI_V_address0,
        dataPulseShapedI_V_ce0,
        dataPulseShapedI_V_q0,
        real_output_address0,
        real_output_ce0,
        real_output_we0,
        real_output_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] dataPulseShapedI_V_address0;
output   dataPulseShapedI_V_ce0;
input  [15:0] dataPulseShapedI_V_q0;
output  [12:0] real_output_address0;
output   real_output_ce0;
output   real_output_we0;
output  [15:0] real_output_d0;

reg ap_idle;
reg dataPulseShapedI_V_ce0;
reg real_output_ce0;
reg real_output_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln215_reg_416;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] icmp_ln215_fu_124_p2;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln215_fu_136_p1;
reg   [63:0] zext_ln215_reg_420;
reg   [63:0] zext_ln215_reg_420_pp0_iter1_reg;
reg   [63:0] zext_ln215_reg_420_pp0_iter2_reg;
reg  signed [15:0] modI_V_reg_430;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] p_Result_5_reg_436;
wire   [0:0] icmp_ln1040_fu_181_p2;
reg   [0:0] icmp_ln1040_reg_441;
reg   [0:0] icmp_ln1040_reg_441_pp0_iter2_reg;
wire   [16:0] tmp_V_2_fu_192_p3;
reg   [16:0] tmp_V_2_reg_446;
wire   [31:0] sub_ln1049_fu_229_p2;
reg   [31:0] sub_ln1049_reg_454;
wire   [16:0] trunc_ln1049_fu_235_p1;
reg   [16:0] trunc_ln1049_reg_461;
wire   [4:0] trunc_ln1052_fu_239_p1;
reg   [4:0] trunc_ln1052_reg_466;
wire   [1:0] or_ln_fu_334_p3;
reg   [1:0] or_ln_reg_471;
wire   [0:0] icmp_ln1063_fu_342_p2;
reg   [0:0] icmp_ln1063_reg_476;
reg   [15:0] trunc_ln5_reg_481;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
reg   [12:0] i_fu_86;
wire   [12:0] add_ln215_fu_130_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_i_1;
wire   [30:0] shl_ln1_fu_146_p3;
wire   [30:0] r_V_1_fu_154_p2;
wire  signed [16:0] sext_ln813_fu_178_p1;
wire   [16:0] tmp_V_fu_186_p2;
reg   [16:0] p_Result_s_fu_199_p4;
wire   [17:0] p_Result_6_fu_209_p3;
wire  signed [31:0] sext_ln1198_fu_217_p1;
reg   [31:0] l_fu_221_p3;
wire   [31:0] lsb_index_fu_243_p2;
wire   [30:0] tmp_fu_248_p4;
wire   [4:0] sub_ln1052_fu_264_p2;
wire   [16:0] zext_ln1052_fu_269_p1;
wire   [16:0] lshr_ln1052_fu_273_p2;
wire   [16:0] p_Result_4_fu_279_p2;
wire   [0:0] icmp_ln1051_fu_258_p2;
wire   [0:0] icmp_ln1052_fu_284_p2;
wire   [0:0] tmp_1_fu_296_p3;
wire   [16:0] add_ln1054_fu_310_p2;
wire   [0:0] p_Result_3_fu_315_p3;
wire   [0:0] xor_ln1054_fu_304_p2;
wire   [0:0] and_ln1054_fu_322_p2;
wire   [0:0] a_fu_290_p2;
wire   [0:0] or_ln1054_fu_328_p2;
wire   [31:0] add_ln1063_fu_348_p2;
wire   [16:0] add_ln1063cast_fu_353_p1;
wire   [31:0] sub_ln1064_fu_362_p2;
wire   [16:0] sub_ln1064cast_fu_367_p1;
wire   [16:0] lshr_ln1063_fu_357_p2;
wire   [16:0] shl_ln1064_fu_371_p2;
wire   [16:0] m_1_fu_376_p3;
wire   [16:0] zext_ln1066_fu_383_p1;
wire   [16:0] m_2_fu_386_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

transmitter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln215_fu_124_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_86 <= add_ln215_fu_130_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_86 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1040_reg_441 <= icmp_ln1040_fu_181_p2;
        icmp_ln1040_reg_441_pp0_iter2_reg <= icmp_ln1040_reg_441;
        icmp_ln215_reg_416 <= icmp_ln215_fu_124_p2;
        sub_ln1049_reg_454 <= sub_ln1049_fu_229_p2;
        tmp_V_2_reg_446 <= tmp_V_2_fu_192_p3;
        trunc_ln1049_reg_461 <= trunc_ln1049_fu_235_p1;
        trunc_ln1052_reg_466 <= trunc_ln1052_fu_239_p1;
        zext_ln215_reg_420_pp0_iter1_reg[12 : 0] <= zext_ln215_reg_420[12 : 0];
        zext_ln215_reg_420_pp0_iter2_reg[12 : 0] <= zext_ln215_reg_420_pp0_iter1_reg[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1040_reg_441 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1063_reg_476 <= icmp_ln1063_fu_342_p2;
        or_ln_reg_471[0] <= or_ln_fu_334_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln215_reg_416 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        modI_V_reg_430 <= {{r_V_1_fu_154_p2[30:15]}};
        p_Result_5_reg_436 <= r_V_1_fu_154_p2[32'd30];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1040_reg_441 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln5_reg_481 <= {{m_2_fu_386_p2[16:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln215_fu_124_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln215_reg_420[12 : 0] <= zext_ln215_fu_136_p1[12 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln215_reg_416 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataPulseShapedI_V_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        real_output_ce0 = 1'b1;
    end else begin
        real_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        real_output_we0 = 1'b1;
    end else begin
        real_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_290_p2 = (icmp_ln1052_fu_284_p2 & icmp_ln1051_fu_258_p2);

assign add_ln1054_fu_310_p2 = ($signed(trunc_ln1049_reg_461) + $signed(17'd131019));

assign add_ln1063_fu_348_p2 = ($signed(sub_ln1049_reg_454) + $signed(32'd4294967242));

assign add_ln1063cast_fu_353_p1 = add_ln1063_fu_348_p2[16:0];

assign add_ln215_fu_130_p2 = (ap_sig_allocacmp_i_1 + 13'd1);

assign and_ln1054_fu_322_p2 = (xor_ln1054_fu_304_p2 & p_Result_3_fu_315_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign dataPulseShapedI_V_address0 = zext_ln215_fu_136_p1;

assign icmp_ln1040_fu_181_p2 = ((modI_V_reg_430 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1051_fu_258_p2 = (($signed(tmp_fu_248_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1052_fu_284_p2 = ((p_Result_4_fu_279_p2 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln1063_fu_342_p2 = (($signed(lsb_index_fu_243_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_124_p2 = ((ap_sig_allocacmp_i_1 == 13'd5248) ? 1'b1 : 1'b0);


always @ (sext_ln1198_fu_217_p1) begin
    if (sext_ln1198_fu_217_p1[0] == 1'b1) begin
        l_fu_221_p3 = 32'd0;
    end else if (sext_ln1198_fu_217_p1[1] == 1'b1) begin
        l_fu_221_p3 = 32'd1;
    end else if (sext_ln1198_fu_217_p1[2] == 1'b1) begin
        l_fu_221_p3 = 32'd2;
    end else if (sext_ln1198_fu_217_p1[3] == 1'b1) begin
        l_fu_221_p3 = 32'd3;
    end else if (sext_ln1198_fu_217_p1[4] == 1'b1) begin
        l_fu_221_p3 = 32'd4;
    end else if (sext_ln1198_fu_217_p1[5] == 1'b1) begin
        l_fu_221_p3 = 32'd5;
    end else if (sext_ln1198_fu_217_p1[6] == 1'b1) begin
        l_fu_221_p3 = 32'd6;
    end else if (sext_ln1198_fu_217_p1[7] == 1'b1) begin
        l_fu_221_p3 = 32'd7;
    end else if (sext_ln1198_fu_217_p1[8] == 1'b1) begin
        l_fu_221_p3 = 32'd8;
    end else if (sext_ln1198_fu_217_p1[9] == 1'b1) begin
        l_fu_221_p3 = 32'd9;
    end else if (sext_ln1198_fu_217_p1[10] == 1'b1) begin
        l_fu_221_p3 = 32'd10;
    end else if (sext_ln1198_fu_217_p1[11] == 1'b1) begin
        l_fu_221_p3 = 32'd11;
    end else if (sext_ln1198_fu_217_p1[12] == 1'b1) begin
        l_fu_221_p3 = 32'd12;
    end else if (sext_ln1198_fu_217_p1[13] == 1'b1) begin
        l_fu_221_p3 = 32'd13;
    end else if (sext_ln1198_fu_217_p1[14] == 1'b1) begin
        l_fu_221_p3 = 32'd14;
    end else if (sext_ln1198_fu_217_p1[15] == 1'b1) begin
        l_fu_221_p3 = 32'd15;
    end else if (sext_ln1198_fu_217_p1[16] == 1'b1) begin
        l_fu_221_p3 = 32'd16;
    end else if (sext_ln1198_fu_217_p1[17] == 1'b1) begin
        l_fu_221_p3 = 32'd17;
    end else if (sext_ln1198_fu_217_p1[18] == 1'b1) begin
        l_fu_221_p3 = 32'd18;
    end else if (sext_ln1198_fu_217_p1[19] == 1'b1) begin
        l_fu_221_p3 = 32'd19;
    end else if (sext_ln1198_fu_217_p1[20] == 1'b1) begin
        l_fu_221_p3 = 32'd20;
    end else if (sext_ln1198_fu_217_p1[21] == 1'b1) begin
        l_fu_221_p3 = 32'd21;
    end else if (sext_ln1198_fu_217_p1[22] == 1'b1) begin
        l_fu_221_p3 = 32'd22;
    end else if (sext_ln1198_fu_217_p1[23] == 1'b1) begin
        l_fu_221_p3 = 32'd23;
    end else if (sext_ln1198_fu_217_p1[24] == 1'b1) begin
        l_fu_221_p3 = 32'd24;
    end else if (sext_ln1198_fu_217_p1[25] == 1'b1) begin
        l_fu_221_p3 = 32'd25;
    end else if (sext_ln1198_fu_217_p1[26] == 1'b1) begin
        l_fu_221_p3 = 32'd26;
    end else if (sext_ln1198_fu_217_p1[27] == 1'b1) begin
        l_fu_221_p3 = 32'd27;
    end else if (sext_ln1198_fu_217_p1[28] == 1'b1) begin
        l_fu_221_p3 = 32'd28;
    end else if (sext_ln1198_fu_217_p1[29] == 1'b1) begin
        l_fu_221_p3 = 32'd29;
    end else if (sext_ln1198_fu_217_p1[30] == 1'b1) begin
        l_fu_221_p3 = 32'd30;
    end else if (sext_ln1198_fu_217_p1[31] == 1'b1) begin
        l_fu_221_p3 = 32'd31;
    end else begin
        l_fu_221_p3 = 32'd32;
    end
end

assign lsb_index_fu_243_p2 = ($signed(sub_ln1049_reg_454) + $signed(32'd4294967243));

assign lshr_ln1052_fu_273_p2 = 17'd131071 >> zext_ln1052_fu_269_p1;

assign lshr_ln1063_fu_357_p2 = tmp_V_2_reg_446 >> add_ln1063cast_fu_353_p1;

assign m_1_fu_376_p3 = ((icmp_ln1063_reg_476[0:0] == 1'b1) ? lshr_ln1063_fu_357_p2 : shl_ln1064_fu_371_p2);

assign m_2_fu_386_p2 = (m_1_fu_376_p3 + zext_ln1066_fu_383_p1);

assign or_ln1054_fu_328_p2 = (and_ln1054_fu_322_p2 | a_fu_290_p2);

assign or_ln_fu_334_p3 = {{1'd0}, {or_ln1054_fu_328_p2}};

assign p_Result_3_fu_315_p3 = tmp_V_2_reg_446[add_ln1054_fu_310_p2];

assign p_Result_4_fu_279_p2 = (tmp_V_2_reg_446 & lshr_ln1052_fu_273_p2);

assign p_Result_6_fu_209_p3 = {{1'd1}, {p_Result_s_fu_199_p4}};

integer ap_tvar_int_0;

always @ (tmp_V_2_fu_192_p3) begin
    for (ap_tvar_int_0 = 17 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 16 - 0) begin
            p_Result_s_fu_199_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_199_p4[ap_tvar_int_0] = tmp_V_2_fu_192_p3[16 - ap_tvar_int_0];
        end
    end
end

assign r_V_1_fu_154_p2 = (31'd0 - shl_ln1_fu_146_p3);

assign real_output_address0 = zext_ln215_reg_420_pp0_iter2_reg;

assign real_output_d0 = ((icmp_ln1040_reg_441_pp0_iter2_reg[0:0] == 1'b1) ? 16'd0 : trunc_ln5_reg_481);

assign sext_ln1198_fu_217_p1 = $signed(p_Result_6_fu_209_p3);

assign sext_ln813_fu_178_p1 = modI_V_reg_430;

assign shl_ln1064_fu_371_p2 = tmp_V_2_reg_446 << sub_ln1064cast_fu_367_p1;

assign shl_ln1_fu_146_p3 = {{dataPulseShapedI_V_q0}, {15'd0}};

assign sub_ln1049_fu_229_p2 = (32'd17 - l_fu_221_p3);

assign sub_ln1052_fu_264_p2 = (5'd7 - trunc_ln1052_reg_466);

assign sub_ln1064_fu_362_p2 = (32'd54 - sub_ln1049_reg_454);

assign sub_ln1064cast_fu_367_p1 = sub_ln1064_fu_362_p2[16:0];

assign tmp_1_fu_296_p3 = lsb_index_fu_243_p2[32'd31];

assign tmp_V_2_fu_192_p3 = ((p_Result_5_reg_436[0:0] == 1'b1) ? tmp_V_fu_186_p2 : sext_ln813_fu_178_p1);

assign tmp_V_fu_186_p2 = ($signed(17'd0) - $signed(sext_ln813_fu_178_p1));

assign tmp_fu_248_p4 = {{lsb_index_fu_243_p2[31:1]}};

assign trunc_ln1049_fu_235_p1 = sub_ln1049_fu_229_p2[16:0];

assign trunc_ln1052_fu_239_p1 = sub_ln1049_fu_229_p2[4:0];

assign xor_ln1054_fu_304_p2 = (tmp_1_fu_296_p3 ^ 1'd1);

assign zext_ln1052_fu_269_p1 = sub_ln1052_fu_264_p2;

assign zext_ln1066_fu_383_p1 = or_ln_reg_471;

assign zext_ln215_fu_136_p1 = ap_sig_allocacmp_i_1;

always @ (posedge ap_clk) begin
    zext_ln215_reg_420[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln215_reg_420_pp0_iter1_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln215_reg_420_pp0_iter2_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    or_ln_reg_471[1] <= 1'b0;
end

endmodule //transmitter_transmitter_Pipeline_VITIS_LOOP_215_10
