// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_111_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        filt_1_I_V_address0,
        filt_1_I_V_ce0,
        filt_1_I_V_q0,
        filt_1_I_V_address1,
        filt_1_I_V_ce1,
        filt_1_I_V_q1,
        filt_1_I_V_8_address0,
        filt_1_I_V_8_ce0,
        filt_1_I_V_8_q0,
        filt_1_I_V_8_address1,
        filt_1_I_V_8_ce1,
        filt_1_I_V_8_q1,
        filt_2_I_V_address0,
        filt_2_I_V_ce0,
        filt_2_I_V_we0,
        filt_2_I_V_d0,
        filt_1_Q_V_address0,
        filt_1_Q_V_ce0,
        filt_1_Q_V_q0,
        filt_1_Q_V_address1,
        filt_1_Q_V_ce1,
        filt_1_Q_V_q1,
        filt_1_Q_V_8_address0,
        filt_1_Q_V_8_ce0,
        filt_1_Q_V_8_q0,
        filt_1_Q_V_8_address1,
        filt_1_Q_V_8_ce1,
        filt_1_Q_V_8_q1,
        filt_2_Q_V_address0,
        filt_2_Q_V_ce0,
        filt_2_Q_V_we0,
        filt_2_Q_V_d0,
        filt_1_I_V_9_address0,
        filt_1_I_V_9_ce0,
        filt_1_I_V_9_q0,
        filt_1_I_V_9_address1,
        filt_1_I_V_9_ce1,
        filt_1_I_V_9_q1,
        filt_1_I_V_10_address0,
        filt_1_I_V_10_ce0,
        filt_1_I_V_10_q0,
        filt_1_I_V_10_address1,
        filt_1_I_V_10_ce1,
        filt_1_I_V_10_q1,
        filt_2_I_V_1_address0,
        filt_2_I_V_1_ce0,
        filt_2_I_V_1_we0,
        filt_2_I_V_1_d0,
        filt_1_Q_V_9_address0,
        filt_1_Q_V_9_ce0,
        filt_1_Q_V_9_q0,
        filt_1_Q_V_9_address1,
        filt_1_Q_V_9_ce1,
        filt_1_Q_V_9_q1,
        filt_1_Q_V_10_address0,
        filt_1_Q_V_10_ce0,
        filt_1_Q_V_10_q0,
        filt_1_Q_V_10_address1,
        filt_1_Q_V_10_ce1,
        filt_1_Q_V_10_q1,
        filt_2_Q_V_1_address0,
        filt_2_Q_V_1_ce0,
        filt_2_Q_V_1_we0,
        filt_2_Q_V_1_d0,
        filt_1_I_V_11_address0,
        filt_1_I_V_11_ce0,
        filt_1_I_V_11_q0,
        filt_1_I_V_11_address1,
        filt_1_I_V_11_ce1,
        filt_1_I_V_11_q1,
        filt_1_I_V_12_address0,
        filt_1_I_V_12_ce0,
        filt_1_I_V_12_q0,
        filt_1_I_V_12_address1,
        filt_1_I_V_12_ce1,
        filt_1_I_V_12_q1,
        filt_2_I_V_2_address0,
        filt_2_I_V_2_ce0,
        filt_2_I_V_2_we0,
        filt_2_I_V_2_d0,
        filt_1_Q_V_11_address0,
        filt_1_Q_V_11_ce0,
        filt_1_Q_V_11_q0,
        filt_1_Q_V_11_address1,
        filt_1_Q_V_11_ce1,
        filt_1_Q_V_11_q1,
        filt_1_Q_V_12_address0,
        filt_1_Q_V_12_ce0,
        filt_1_Q_V_12_q0,
        filt_1_Q_V_12_address1,
        filt_1_Q_V_12_ce1,
        filt_1_Q_V_12_q1,
        filt_2_Q_V_2_address0,
        filt_2_Q_V_2_ce0,
        filt_2_Q_V_2_we0,
        filt_2_Q_V_2_d0,
        filt_1_I_V_13_address0,
        filt_1_I_V_13_ce0,
        filt_1_I_V_13_q0,
        filt_1_I_V_13_address1,
        filt_1_I_V_13_ce1,
        filt_1_I_V_13_q1,
        filt_1_I_V_14_address0,
        filt_1_I_V_14_ce0,
        filt_1_I_V_14_q0,
        filt_1_I_V_14_address1,
        filt_1_I_V_14_ce1,
        filt_1_I_V_14_q1,
        filt_2_I_V_3_address0,
        filt_2_I_V_3_ce0,
        filt_2_I_V_3_we0,
        filt_2_I_V_3_d0,
        filt_1_Q_V_13_address0,
        filt_1_Q_V_13_ce0,
        filt_1_Q_V_13_q0,
        filt_1_Q_V_13_address1,
        filt_1_Q_V_13_ce1,
        filt_1_Q_V_13_q1,
        filt_1_Q_V_14_address0,
        filt_1_Q_V_14_ce0,
        filt_1_Q_V_14_q0,
        filt_1_Q_V_14_address1,
        filt_1_Q_V_14_ce1,
        filt_1_Q_V_14_q1,
        filt_2_Q_V_3_address0,
        filt_2_Q_V_3_ce0,
        filt_2_Q_V_3_we0,
        filt_2_Q_V_3_d0,
        filt_2_I_V_4_address0,
        filt_2_I_V_4_ce0,
        filt_2_I_V_4_we0,
        filt_2_I_V_4_d0,
        filt_2_Q_V_4_address0,
        filt_2_Q_V_4_ce0,
        filt_2_Q_V_4_we0,
        filt_2_Q_V_4_d0,
        filt_2_I_V_5_address0,
        filt_2_I_V_5_ce0,
        filt_2_I_V_5_we0,
        filt_2_I_V_5_d0,
        filt_2_Q_V_5_address0,
        filt_2_Q_V_5_ce0,
        filt_2_Q_V_5_we0,
        filt_2_Q_V_5_d0,
        filt_2_I_V_6_address0,
        filt_2_I_V_6_ce0,
        filt_2_I_V_6_we0,
        filt_2_I_V_6_d0,
        filt_2_Q_V_6_address0,
        filt_2_Q_V_6_ce0,
        filt_2_Q_V_6_we0,
        filt_2_Q_V_6_d0,
        filt_2_I_V_7_address0,
        filt_2_I_V_7_ce0,
        filt_2_I_V_7_we0,
        filt_2_I_V_7_d0,
        filt_2_Q_V_7_address0,
        filt_2_Q_V_7_ce0,
        filt_2_Q_V_7_we0,
        filt_2_Q_V_7_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] filt_1_I_V_address0;
output   filt_1_I_V_ce0;
input  [17:0] filt_1_I_V_q0;
output  [3:0] filt_1_I_V_address1;
output   filt_1_I_V_ce1;
input  [17:0] filt_1_I_V_q1;
output  [3:0] filt_1_I_V_8_address0;
output   filt_1_I_V_8_ce0;
input  [17:0] filt_1_I_V_8_q0;
output  [3:0] filt_1_I_V_8_address1;
output   filt_1_I_V_8_ce1;
input  [17:0] filt_1_I_V_8_q1;
output  [2:0] filt_2_I_V_address0;
output   filt_2_I_V_ce0;
output   filt_2_I_V_we0;
output  [17:0] filt_2_I_V_d0;
output  [3:0] filt_1_Q_V_address0;
output   filt_1_Q_V_ce0;
input  [17:0] filt_1_Q_V_q0;
output  [3:0] filt_1_Q_V_address1;
output   filt_1_Q_V_ce1;
input  [17:0] filt_1_Q_V_q1;
output  [3:0] filt_1_Q_V_8_address0;
output   filt_1_Q_V_8_ce0;
input  [17:0] filt_1_Q_V_8_q0;
output  [3:0] filt_1_Q_V_8_address1;
output   filt_1_Q_V_8_ce1;
input  [17:0] filt_1_Q_V_8_q1;
output  [2:0] filt_2_Q_V_address0;
output   filt_2_Q_V_ce0;
output   filt_2_Q_V_we0;
output  [17:0] filt_2_Q_V_d0;
output  [3:0] filt_1_I_V_9_address0;
output   filt_1_I_V_9_ce0;
input  [17:0] filt_1_I_V_9_q0;
output  [3:0] filt_1_I_V_9_address1;
output   filt_1_I_V_9_ce1;
input  [17:0] filt_1_I_V_9_q1;
output  [3:0] filt_1_I_V_10_address0;
output   filt_1_I_V_10_ce0;
input  [17:0] filt_1_I_V_10_q0;
output  [3:0] filt_1_I_V_10_address1;
output   filt_1_I_V_10_ce1;
input  [17:0] filt_1_I_V_10_q1;
output  [2:0] filt_2_I_V_1_address0;
output   filt_2_I_V_1_ce0;
output   filt_2_I_V_1_we0;
output  [17:0] filt_2_I_V_1_d0;
output  [3:0] filt_1_Q_V_9_address0;
output   filt_1_Q_V_9_ce0;
input  [17:0] filt_1_Q_V_9_q0;
output  [3:0] filt_1_Q_V_9_address1;
output   filt_1_Q_V_9_ce1;
input  [17:0] filt_1_Q_V_9_q1;
output  [3:0] filt_1_Q_V_10_address0;
output   filt_1_Q_V_10_ce0;
input  [17:0] filt_1_Q_V_10_q0;
output  [3:0] filt_1_Q_V_10_address1;
output   filt_1_Q_V_10_ce1;
input  [17:0] filt_1_Q_V_10_q1;
output  [2:0] filt_2_Q_V_1_address0;
output   filt_2_Q_V_1_ce0;
output   filt_2_Q_V_1_we0;
output  [17:0] filt_2_Q_V_1_d0;
output  [3:0] filt_1_I_V_11_address0;
output   filt_1_I_V_11_ce0;
input  [17:0] filt_1_I_V_11_q0;
output  [3:0] filt_1_I_V_11_address1;
output   filt_1_I_V_11_ce1;
input  [17:0] filt_1_I_V_11_q1;
output  [3:0] filt_1_I_V_12_address0;
output   filt_1_I_V_12_ce0;
input  [17:0] filt_1_I_V_12_q0;
output  [3:0] filt_1_I_V_12_address1;
output   filt_1_I_V_12_ce1;
input  [17:0] filt_1_I_V_12_q1;
output  [2:0] filt_2_I_V_2_address0;
output   filt_2_I_V_2_ce0;
output   filt_2_I_V_2_we0;
output  [17:0] filt_2_I_V_2_d0;
output  [3:0] filt_1_Q_V_11_address0;
output   filt_1_Q_V_11_ce0;
input  [17:0] filt_1_Q_V_11_q0;
output  [3:0] filt_1_Q_V_11_address1;
output   filt_1_Q_V_11_ce1;
input  [17:0] filt_1_Q_V_11_q1;
output  [3:0] filt_1_Q_V_12_address0;
output   filt_1_Q_V_12_ce0;
input  [17:0] filt_1_Q_V_12_q0;
output  [3:0] filt_1_Q_V_12_address1;
output   filt_1_Q_V_12_ce1;
input  [17:0] filt_1_Q_V_12_q1;
output  [2:0] filt_2_Q_V_2_address0;
output   filt_2_Q_V_2_ce0;
output   filt_2_Q_V_2_we0;
output  [17:0] filt_2_Q_V_2_d0;
output  [3:0] filt_1_I_V_13_address0;
output   filt_1_I_V_13_ce0;
input  [17:0] filt_1_I_V_13_q0;
output  [3:0] filt_1_I_V_13_address1;
output   filt_1_I_V_13_ce1;
input  [17:0] filt_1_I_V_13_q1;
output  [3:0] filt_1_I_V_14_address0;
output   filt_1_I_V_14_ce0;
input  [17:0] filt_1_I_V_14_q0;
output  [3:0] filt_1_I_V_14_address1;
output   filt_1_I_V_14_ce1;
input  [17:0] filt_1_I_V_14_q1;
output  [2:0] filt_2_I_V_3_address0;
output   filt_2_I_V_3_ce0;
output   filt_2_I_V_3_we0;
output  [17:0] filt_2_I_V_3_d0;
output  [3:0] filt_1_Q_V_13_address0;
output   filt_1_Q_V_13_ce0;
input  [17:0] filt_1_Q_V_13_q0;
output  [3:0] filt_1_Q_V_13_address1;
output   filt_1_Q_V_13_ce1;
input  [17:0] filt_1_Q_V_13_q1;
output  [3:0] filt_1_Q_V_14_address0;
output   filt_1_Q_V_14_ce0;
input  [17:0] filt_1_Q_V_14_q0;
output  [3:0] filt_1_Q_V_14_address1;
output   filt_1_Q_V_14_ce1;
input  [17:0] filt_1_Q_V_14_q1;
output  [2:0] filt_2_Q_V_3_address0;
output   filt_2_Q_V_3_ce0;
output   filt_2_Q_V_3_we0;
output  [17:0] filt_2_Q_V_3_d0;
output  [2:0] filt_2_I_V_4_address0;
output   filt_2_I_V_4_ce0;
output   filt_2_I_V_4_we0;
output  [17:0] filt_2_I_V_4_d0;
output  [2:0] filt_2_Q_V_4_address0;
output   filt_2_Q_V_4_ce0;
output   filt_2_Q_V_4_we0;
output  [17:0] filt_2_Q_V_4_d0;
output  [2:0] filt_2_I_V_5_address0;
output   filt_2_I_V_5_ce0;
output   filt_2_I_V_5_we0;
output  [17:0] filt_2_I_V_5_d0;
output  [2:0] filt_2_Q_V_5_address0;
output   filt_2_Q_V_5_ce0;
output   filt_2_Q_V_5_we0;
output  [17:0] filt_2_Q_V_5_d0;
output  [2:0] filt_2_I_V_6_address0;
output   filt_2_I_V_6_ce0;
output   filt_2_I_V_6_we0;
output  [17:0] filt_2_I_V_6_d0;
output  [2:0] filt_2_Q_V_6_address0;
output   filt_2_Q_V_6_ce0;
output   filt_2_Q_V_6_we0;
output  [17:0] filt_2_Q_V_6_d0;
output  [2:0] filt_2_I_V_7_address0;
output   filt_2_I_V_7_ce0;
output   filt_2_I_V_7_we0;
output  [17:0] filt_2_I_V_7_d0;
output  [2:0] filt_2_Q_V_7_address0;
output   filt_2_Q_V_7_ce0;
output   filt_2_Q_V_7_we0;
output  [17:0] filt_2_Q_V_7_d0;

reg ap_idle;
reg filt_1_I_V_ce0;
reg filt_1_I_V_ce1;
reg filt_1_I_V_8_ce0;
reg filt_1_I_V_8_ce1;
reg filt_2_I_V_ce0;
reg filt_2_I_V_we0;
reg filt_1_Q_V_ce0;
reg filt_1_Q_V_ce1;
reg filt_1_Q_V_8_ce0;
reg filt_1_Q_V_8_ce1;
reg filt_2_Q_V_ce0;
reg filt_2_Q_V_we0;
reg filt_1_I_V_9_ce0;
reg filt_1_I_V_9_ce1;
reg filt_1_I_V_10_ce0;
reg filt_1_I_V_10_ce1;
reg filt_2_I_V_1_ce0;
reg filt_2_I_V_1_we0;
reg filt_1_Q_V_9_ce0;
reg filt_1_Q_V_9_ce1;
reg filt_1_Q_V_10_ce0;
reg filt_1_Q_V_10_ce1;
reg filt_2_Q_V_1_ce0;
reg filt_2_Q_V_1_we0;
reg filt_1_I_V_11_ce0;
reg filt_1_I_V_11_ce1;
reg filt_1_I_V_12_ce0;
reg filt_1_I_V_12_ce1;
reg filt_2_I_V_2_ce0;
reg filt_2_I_V_2_we0;
reg filt_1_Q_V_11_ce0;
reg filt_1_Q_V_11_ce1;
reg filt_1_Q_V_12_ce0;
reg filt_1_Q_V_12_ce1;
reg filt_2_Q_V_2_ce0;
reg filt_2_Q_V_2_we0;
reg filt_1_I_V_13_ce0;
reg filt_1_I_V_13_ce1;
reg filt_1_I_V_14_ce0;
reg filt_1_I_V_14_ce1;
reg filt_2_I_V_3_ce0;
reg filt_2_I_V_3_we0;
reg filt_1_Q_V_13_ce0;
reg filt_1_Q_V_13_ce1;
reg filt_1_Q_V_14_ce0;
reg filt_1_Q_V_14_ce1;
reg filt_2_Q_V_3_ce0;
reg filt_2_Q_V_3_we0;
reg filt_2_I_V_4_ce0;
reg filt_2_I_V_4_we0;
reg filt_2_Q_V_4_ce0;
reg filt_2_Q_V_4_we0;
reg filt_2_I_V_5_ce0;
reg filt_2_I_V_5_we0;
reg filt_2_Q_V_5_ce0;
reg filt_2_Q_V_5_we0;
reg filt_2_I_V_6_ce0;
reg filt_2_I_V_6_we0;
reg filt_2_Q_V_6_ce0;
reg filt_2_Q_V_6_we0;
reg filt_2_I_V_7_ce0;
reg filt_2_I_V_7_we0;
reg filt_2_Q_V_7_ce0;
reg filt_2_Q_V_7_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln111_fu_722_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] lshr_ln5_reg_941;
reg   [2:0] lshr_ln5_reg_941_pp0_iter1_reg;
wire   [17:0] add_ln813_18_fu_805_p2;
reg   [17:0] add_ln813_18_reg_1096;
wire   [17:0] add_ln813_19_fu_811_p2;
reg   [17:0] add_ln813_19_reg_1101;
wire   [17:0] add_ln813_20_fu_817_p2;
reg   [17:0] add_ln813_20_reg_1106;
wire   [17:0] add_ln813_21_fu_823_p2;
reg   [17:0] add_ln813_21_reg_1111;
wire   [17:0] add_ln813_22_fu_829_p2;
reg   [17:0] add_ln813_22_reg_1116;
wire   [17:0] add_ln813_23_fu_835_p2;
reg   [17:0] add_ln813_23_reg_1121;
wire   [17:0] add_ln813_24_fu_841_p2;
reg   [17:0] add_ln813_24_reg_1126;
wire   [17:0] add_ln813_25_fu_847_p2;
reg   [17:0] add_ln813_25_reg_1131;
wire   [17:0] add_ln813_26_fu_853_p2;
reg   [17:0] add_ln813_26_reg_1136;
wire   [17:0] add_ln813_27_fu_859_p2;
reg   [17:0] add_ln813_27_reg_1141;
wire   [17:0] add_ln813_28_fu_865_p2;
reg   [17:0] add_ln813_28_reg_1146;
wire   [17:0] add_ln813_29_fu_871_p2;
reg   [17:0] add_ln813_29_reg_1151;
wire   [17:0] add_ln813_30_fu_877_p2;
reg   [17:0] add_ln813_30_reg_1156;
wire   [17:0] add_ln813_31_fu_883_p2;
reg   [17:0] add_ln813_31_reg_1161;
wire   [17:0] add_ln813_32_fu_889_p2;
reg   [17:0] add_ln813_32_reg_1166;
wire   [17:0] add_ln813_33_fu_895_p2;
reg   [17:0] add_ln813_33_reg_1171;
wire   [63:0] zext_ln813_2_fu_738_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln813_fu_774_p1;
wire   [63:0] zext_ln113_fu_901_p1;
reg   [6:0] i_4_fu_102;
wire   [6:0] add_ln111_fu_794_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i;
wire   [3:0] lshr_ln813_1_fu_728_p4;
wire   [3:0] or_ln813_fu_768_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln111_fu_722_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_4_fu_102 <= add_ln111_fu_794_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_4_fu_102 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln813_18_reg_1096 <= add_ln813_18_fu_805_p2;
        add_ln813_19_reg_1101 <= add_ln813_19_fu_811_p2;
        add_ln813_20_reg_1106 <= add_ln813_20_fu_817_p2;
        add_ln813_21_reg_1111 <= add_ln813_21_fu_823_p2;
        add_ln813_22_reg_1116 <= add_ln813_22_fu_829_p2;
        add_ln813_23_reg_1121 <= add_ln813_23_fu_835_p2;
        add_ln813_24_reg_1126 <= add_ln813_24_fu_841_p2;
        add_ln813_25_reg_1131 <= add_ln813_25_fu_847_p2;
        add_ln813_26_reg_1136 <= add_ln813_26_fu_853_p2;
        add_ln813_27_reg_1141 <= add_ln813_27_fu_859_p2;
        add_ln813_28_reg_1146 <= add_ln813_28_fu_865_p2;
        add_ln813_29_reg_1151 <= add_ln813_29_fu_871_p2;
        add_ln813_30_reg_1156 <= add_ln813_30_fu_877_p2;
        add_ln813_31_reg_1161 <= add_ln813_31_fu_883_p2;
        add_ln813_32_reg_1166 <= add_ln813_32_fu_889_p2;
        add_ln813_33_reg_1171 <= add_ln813_33_fu_895_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        lshr_ln5_reg_941_pp0_iter1_reg <= lshr_ln5_reg_941;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_722_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln5_reg_941 <= {{ap_sig_allocacmp_i[6:4]}};
    end
end

always @ (*) begin
    if (((icmp_ln111_fu_722_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 7'd0;
    end else begin
        ap_sig_allocacmp_i = i_4_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_10_ce0 = 1'b1;
    end else begin
        filt_1_I_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_10_ce1 = 1'b1;
    end else begin
        filt_1_I_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_11_ce0 = 1'b1;
    end else begin
        filt_1_I_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_11_ce1 = 1'b1;
    end else begin
        filt_1_I_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_12_ce0 = 1'b1;
    end else begin
        filt_1_I_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_12_ce1 = 1'b1;
    end else begin
        filt_1_I_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_13_ce0 = 1'b1;
    end else begin
        filt_1_I_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_13_ce1 = 1'b1;
    end else begin
        filt_1_I_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_14_ce0 = 1'b1;
    end else begin
        filt_1_I_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_14_ce1 = 1'b1;
    end else begin
        filt_1_I_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_8_ce0 = 1'b1;
    end else begin
        filt_1_I_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_8_ce1 = 1'b1;
    end else begin
        filt_1_I_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_9_ce0 = 1'b1;
    end else begin
        filt_1_I_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_9_ce1 = 1'b1;
    end else begin
        filt_1_I_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_ce0 = 1'b1;
    end else begin
        filt_1_I_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_I_V_ce1 = 1'b1;
    end else begin
        filt_1_I_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_10_ce0 = 1'b1;
    end else begin
        filt_1_Q_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_10_ce1 = 1'b1;
    end else begin
        filt_1_Q_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_11_ce0 = 1'b1;
    end else begin
        filt_1_Q_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_11_ce1 = 1'b1;
    end else begin
        filt_1_Q_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_12_ce0 = 1'b1;
    end else begin
        filt_1_Q_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_12_ce1 = 1'b1;
    end else begin
        filt_1_Q_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_13_ce0 = 1'b1;
    end else begin
        filt_1_Q_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_13_ce1 = 1'b1;
    end else begin
        filt_1_Q_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_14_ce0 = 1'b1;
    end else begin
        filt_1_Q_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_14_ce1 = 1'b1;
    end else begin
        filt_1_Q_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_8_ce0 = 1'b1;
    end else begin
        filt_1_Q_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_8_ce1 = 1'b1;
    end else begin
        filt_1_Q_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_9_ce0 = 1'b1;
    end else begin
        filt_1_Q_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_9_ce1 = 1'b1;
    end else begin
        filt_1_Q_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_ce0 = 1'b1;
    end else begin
        filt_1_Q_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_1_Q_V_ce1 = 1'b1;
    end else begin
        filt_1_Q_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_1_ce0 = 1'b1;
    end else begin
        filt_2_I_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_1_we0 = 1'b1;
    end else begin
        filt_2_I_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_2_ce0 = 1'b1;
    end else begin
        filt_2_I_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_2_we0 = 1'b1;
    end else begin
        filt_2_I_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_3_ce0 = 1'b1;
    end else begin
        filt_2_I_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_3_we0 = 1'b1;
    end else begin
        filt_2_I_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_4_ce0 = 1'b1;
    end else begin
        filt_2_I_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_4_we0 = 1'b1;
    end else begin
        filt_2_I_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_5_ce0 = 1'b1;
    end else begin
        filt_2_I_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_5_we0 = 1'b1;
    end else begin
        filt_2_I_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_6_ce0 = 1'b1;
    end else begin
        filt_2_I_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_6_we0 = 1'b1;
    end else begin
        filt_2_I_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_7_ce0 = 1'b1;
    end else begin
        filt_2_I_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_7_we0 = 1'b1;
    end else begin
        filt_2_I_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_ce0 = 1'b1;
    end else begin
        filt_2_I_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_I_V_we0 = 1'b1;
    end else begin
        filt_2_I_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_1_ce0 = 1'b1;
    end else begin
        filt_2_Q_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_1_we0 = 1'b1;
    end else begin
        filt_2_Q_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_2_ce0 = 1'b1;
    end else begin
        filt_2_Q_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_2_we0 = 1'b1;
    end else begin
        filt_2_Q_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_3_ce0 = 1'b1;
    end else begin
        filt_2_Q_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_3_we0 = 1'b1;
    end else begin
        filt_2_Q_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_4_ce0 = 1'b1;
    end else begin
        filt_2_Q_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_4_we0 = 1'b1;
    end else begin
        filt_2_Q_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_5_ce0 = 1'b1;
    end else begin
        filt_2_Q_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_5_we0 = 1'b1;
    end else begin
        filt_2_Q_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_6_ce0 = 1'b1;
    end else begin
        filt_2_Q_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_6_we0 = 1'b1;
    end else begin
        filt_2_Q_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_7_ce0 = 1'b1;
    end else begin
        filt_2_Q_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_7_we0 = 1'b1;
    end else begin
        filt_2_Q_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_ce0 = 1'b1;
    end else begin
        filt_2_Q_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_2_Q_V_we0 = 1'b1;
    end else begin
        filt_2_Q_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln111_fu_794_p2 = (ap_sig_allocacmp_i + 7'd16);

assign add_ln813_18_fu_805_p2 = (filt_1_I_V_8_q1 + filt_1_I_V_q1);

assign add_ln813_19_fu_811_p2 = (filt_1_Q_V_8_q1 + filt_1_Q_V_q1);

assign add_ln813_20_fu_817_p2 = (filt_1_I_V_10_q1 + filt_1_I_V_9_q1);

assign add_ln813_21_fu_823_p2 = (filt_1_Q_V_10_q1 + filt_1_Q_V_9_q1);

assign add_ln813_22_fu_829_p2 = (filt_1_I_V_12_q1 + filt_1_I_V_11_q1);

assign add_ln813_23_fu_835_p2 = (filt_1_Q_V_12_q1 + filt_1_Q_V_11_q1);

assign add_ln813_24_fu_841_p2 = (filt_1_I_V_14_q1 + filt_1_I_V_13_q1);

assign add_ln813_25_fu_847_p2 = (filt_1_Q_V_14_q1 + filt_1_Q_V_13_q1);

assign add_ln813_26_fu_853_p2 = (filt_1_I_V_8_q0 + filt_1_I_V_q0);

assign add_ln813_27_fu_859_p2 = (filt_1_Q_V_8_q0 + filt_1_Q_V_q0);

assign add_ln813_28_fu_865_p2 = (filt_1_I_V_10_q0 + filt_1_I_V_9_q0);

assign add_ln813_29_fu_871_p2 = (filt_1_Q_V_10_q0 + filt_1_Q_V_9_q0);

assign add_ln813_30_fu_877_p2 = (filt_1_I_V_12_q0 + filt_1_I_V_11_q0);

assign add_ln813_31_fu_883_p2 = (filt_1_Q_V_12_q0 + filt_1_Q_V_11_q0);

assign add_ln813_32_fu_889_p2 = (filt_1_I_V_14_q0 + filt_1_I_V_13_q0);

assign add_ln813_33_fu_895_p2 = (filt_1_Q_V_14_q0 + filt_1_Q_V_13_q0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign filt_1_I_V_10_address0 = zext_ln813_fu_774_p1;

assign filt_1_I_V_10_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_I_V_11_address0 = zext_ln813_fu_774_p1;

assign filt_1_I_V_11_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_I_V_12_address0 = zext_ln813_fu_774_p1;

assign filt_1_I_V_12_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_I_V_13_address0 = zext_ln813_fu_774_p1;

assign filt_1_I_V_13_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_I_V_14_address0 = zext_ln813_fu_774_p1;

assign filt_1_I_V_14_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_I_V_8_address0 = zext_ln813_fu_774_p1;

assign filt_1_I_V_8_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_I_V_9_address0 = zext_ln813_fu_774_p1;

assign filt_1_I_V_9_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_I_V_address0 = zext_ln813_fu_774_p1;

assign filt_1_I_V_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_Q_V_10_address0 = zext_ln813_fu_774_p1;

assign filt_1_Q_V_10_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_Q_V_11_address0 = zext_ln813_fu_774_p1;

assign filt_1_Q_V_11_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_Q_V_12_address0 = zext_ln813_fu_774_p1;

assign filt_1_Q_V_12_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_Q_V_13_address0 = zext_ln813_fu_774_p1;

assign filt_1_Q_V_13_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_Q_V_14_address0 = zext_ln813_fu_774_p1;

assign filt_1_Q_V_14_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_Q_V_8_address0 = zext_ln813_fu_774_p1;

assign filt_1_Q_V_8_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_Q_V_9_address0 = zext_ln813_fu_774_p1;

assign filt_1_Q_V_9_address1 = zext_ln813_2_fu_738_p1;

assign filt_1_Q_V_address0 = zext_ln813_fu_774_p1;

assign filt_1_Q_V_address1 = zext_ln813_2_fu_738_p1;

assign filt_2_I_V_1_address0 = zext_ln113_fu_901_p1;

assign filt_2_I_V_1_d0 = add_ln813_20_reg_1106;

assign filt_2_I_V_2_address0 = zext_ln113_fu_901_p1;

assign filt_2_I_V_2_d0 = add_ln813_22_reg_1116;

assign filt_2_I_V_3_address0 = zext_ln113_fu_901_p1;

assign filt_2_I_V_3_d0 = add_ln813_24_reg_1126;

assign filt_2_I_V_4_address0 = zext_ln113_fu_901_p1;

assign filt_2_I_V_4_d0 = add_ln813_26_reg_1136;

assign filt_2_I_V_5_address0 = zext_ln113_fu_901_p1;

assign filt_2_I_V_5_d0 = add_ln813_28_reg_1146;

assign filt_2_I_V_6_address0 = zext_ln113_fu_901_p1;

assign filt_2_I_V_6_d0 = add_ln813_30_reg_1156;

assign filt_2_I_V_7_address0 = zext_ln113_fu_901_p1;

assign filt_2_I_V_7_d0 = add_ln813_32_reg_1166;

assign filt_2_I_V_address0 = zext_ln113_fu_901_p1;

assign filt_2_I_V_d0 = add_ln813_18_reg_1096;

assign filt_2_Q_V_1_address0 = zext_ln113_fu_901_p1;

assign filt_2_Q_V_1_d0 = add_ln813_21_reg_1111;

assign filt_2_Q_V_2_address0 = zext_ln113_fu_901_p1;

assign filt_2_Q_V_2_d0 = add_ln813_23_reg_1121;

assign filt_2_Q_V_3_address0 = zext_ln113_fu_901_p1;

assign filt_2_Q_V_3_d0 = add_ln813_25_reg_1131;

assign filt_2_Q_V_4_address0 = zext_ln113_fu_901_p1;

assign filt_2_Q_V_4_d0 = add_ln813_27_reg_1141;

assign filt_2_Q_V_5_address0 = zext_ln113_fu_901_p1;

assign filt_2_Q_V_5_d0 = add_ln813_29_reg_1151;

assign filt_2_Q_V_6_address0 = zext_ln113_fu_901_p1;

assign filt_2_Q_V_6_d0 = add_ln813_31_reg_1161;

assign filt_2_Q_V_7_address0 = zext_ln113_fu_901_p1;

assign filt_2_Q_V_7_d0 = add_ln813_33_reg_1171;

assign filt_2_Q_V_address0 = zext_ln113_fu_901_p1;

assign filt_2_Q_V_d0 = add_ln813_19_reg_1101;

assign icmp_ln111_fu_722_p2 = ((ap_sig_allocacmp_i < 7'd96) ? 1'b1 : 1'b0);

assign lshr_ln813_1_fu_728_p4 = {{ap_sig_allocacmp_i[6:3]}};

assign or_ln813_fu_768_p2 = (lshr_ln813_1_fu_728_p4 | 4'd1);

assign zext_ln113_fu_901_p1 = lshr_ln5_reg_941_pp0_iter1_reg;

assign zext_ln813_2_fu_738_p1 = lshr_ln813_1_fu_728_p4;

assign zext_ln813_fu_774_p1 = or_ln813_fu_768_p2;

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_111_5
