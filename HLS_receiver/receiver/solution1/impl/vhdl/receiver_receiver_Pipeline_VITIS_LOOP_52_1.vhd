-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity receiver_receiver_Pipeline_VITIS_LOOP_52_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    samples_I_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    samples_I_11_ce0 : OUT STD_LOGIC;
    samples_I_11_we0 : OUT STD_LOGIC;
    samples_I_11_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    samples_I_11_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    samples_I_11_ce1 : OUT STD_LOGIC;
    samples_I_11_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    samples_Q_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    samples_Q_11_ce0 : OUT STD_LOGIC;
    samples_Q_11_we0 : OUT STD_LOGIC;
    samples_Q_11_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    samples_Q_11_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    samples_Q_11_ce1 : OUT STD_LOGIC;
    samples_Q_11_q1 : IN STD_LOGIC_VECTOR (17 downto 0) );
end;


architecture behav of receiver_receiver_Pipeline_VITIS_LOOP_52_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv13_B : STD_LOGIC_VECTOR (12 downto 0) := "0000000001011";
    constant ap_const_lv13_1E0B : STD_LOGIC_VECTOR (12 downto 0) := "1111000001011";
    constant ap_const_lv13_20 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln52_fu_1426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal samples_I_1_ce0 : STD_LOGIC;
    signal samples_I_1_we0 : STD_LOGIC;
    signal samples_I_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_1_ce1 : STD_LOGIC;
    signal samples_I_1_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_2_ce0 : STD_LOGIC;
    signal samples_I_2_we0 : STD_LOGIC;
    signal samples_I_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_2_ce1 : STD_LOGIC;
    signal samples_I_2_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_3_ce0 : STD_LOGIC;
    signal samples_I_3_we0 : STD_LOGIC;
    signal samples_I_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_3_ce1 : STD_LOGIC;
    signal samples_I_3_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_4_ce0 : STD_LOGIC;
    signal samples_I_4_we0 : STD_LOGIC;
    signal samples_I_4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_4_ce1 : STD_LOGIC;
    signal samples_I_4_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_5_ce0 : STD_LOGIC;
    signal samples_I_5_we0 : STD_LOGIC;
    signal samples_I_5_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_5_ce1 : STD_LOGIC;
    signal samples_I_5_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_6_ce0 : STD_LOGIC;
    signal samples_I_6_we0 : STD_LOGIC;
    signal samples_I_6_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_6_ce1 : STD_LOGIC;
    signal samples_I_6_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_7_ce0 : STD_LOGIC;
    signal samples_I_7_we0 : STD_LOGIC;
    signal samples_I_7_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_7_ce1 : STD_LOGIC;
    signal samples_I_7_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_8_ce0 : STD_LOGIC;
    signal samples_I_8_we0 : STD_LOGIC;
    signal samples_I_8_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_8_ce1 : STD_LOGIC;
    signal samples_I_8_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_9_ce0 : STD_LOGIC;
    signal samples_I_9_we0 : STD_LOGIC;
    signal samples_I_9_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_9_ce1 : STD_LOGIC;
    signal samples_I_9_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_10_ce0 : STD_LOGIC;
    signal samples_I_10_we0 : STD_LOGIC;
    signal samples_I_10_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_10_ce1 : STD_LOGIC;
    signal samples_I_10_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_0_ce0 : STD_LOGIC;
    signal samples_I_0_we0 : STD_LOGIC;
    signal samples_I_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_0_ce1 : STD_LOGIC;
    signal samples_I_0_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_1_ce0 : STD_LOGIC;
    signal samples_Q_1_we0 : STD_LOGIC;
    signal samples_Q_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_1_ce1 : STD_LOGIC;
    signal samples_Q_1_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_0_ce0 : STD_LOGIC;
    signal samples_Q_0_we0 : STD_LOGIC;
    signal samples_Q_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_0_ce1 : STD_LOGIC;
    signal samples_Q_0_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_2_ce0 : STD_LOGIC;
    signal samples_Q_2_we0 : STD_LOGIC;
    signal samples_Q_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_2_ce1 : STD_LOGIC;
    signal samples_Q_2_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_3_ce0 : STD_LOGIC;
    signal samples_Q_3_we0 : STD_LOGIC;
    signal samples_Q_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_3_ce1 : STD_LOGIC;
    signal samples_Q_3_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_4_ce0 : STD_LOGIC;
    signal samples_Q_4_we0 : STD_LOGIC;
    signal samples_Q_4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_4_ce1 : STD_LOGIC;
    signal samples_Q_4_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_5_ce0 : STD_LOGIC;
    signal samples_Q_5_we0 : STD_LOGIC;
    signal samples_Q_5_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_5_ce1 : STD_LOGIC;
    signal samples_Q_5_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_6_ce0 : STD_LOGIC;
    signal samples_Q_6_we0 : STD_LOGIC;
    signal samples_Q_6_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_6_ce1 : STD_LOGIC;
    signal samples_Q_6_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_7_ce0 : STD_LOGIC;
    signal samples_Q_7_we0 : STD_LOGIC;
    signal samples_Q_7_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_7_ce1 : STD_LOGIC;
    signal samples_Q_7_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_8_ce0 : STD_LOGIC;
    signal samples_Q_8_we0 : STD_LOGIC;
    signal samples_Q_8_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_8_ce1 : STD_LOGIC;
    signal samples_Q_8_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_9_ce0 : STD_LOGIC;
    signal samples_Q_9_we0 : STD_LOGIC;
    signal samples_Q_9_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_9_ce1 : STD_LOGIC;
    signal samples_Q_9_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_10_ce0 : STD_LOGIC;
    signal samples_Q_10_we0 : STD_LOGIC;
    signal samples_Q_10_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_10_ce1 : STD_LOGIC;
    signal samples_Q_10_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_12_ce0 : STD_LOGIC;
    signal samples_I_12_we0 : STD_LOGIC;
    signal samples_I_12_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_12_ce1 : STD_LOGIC;
    signal samples_I_12_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_13_ce0 : STD_LOGIC;
    signal samples_I_13_we0 : STD_LOGIC;
    signal samples_I_13_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_13_ce1 : STD_LOGIC;
    signal samples_I_13_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_14_ce0 : STD_LOGIC;
    signal samples_I_14_we0 : STD_LOGIC;
    signal samples_I_14_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_14_ce1 : STD_LOGIC;
    signal samples_I_14_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_15_ce0 : STD_LOGIC;
    signal samples_I_15_we0 : STD_LOGIC;
    signal samples_I_15_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_15_ce1 : STD_LOGIC;
    signal samples_I_15_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_16_ce0 : STD_LOGIC;
    signal samples_I_16_we0 : STD_LOGIC;
    signal samples_I_16_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_16_ce1 : STD_LOGIC;
    signal samples_I_16_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_17_ce0 : STD_LOGIC;
    signal samples_I_17_we0 : STD_LOGIC;
    signal samples_I_17_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_17_ce1 : STD_LOGIC;
    signal samples_I_17_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_18_ce0 : STD_LOGIC;
    signal samples_I_18_we0 : STD_LOGIC;
    signal samples_I_18_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_18_ce1 : STD_LOGIC;
    signal samples_I_18_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_19_ce0 : STD_LOGIC;
    signal samples_I_19_we0 : STD_LOGIC;
    signal samples_I_19_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_19_ce1 : STD_LOGIC;
    signal samples_I_19_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_20_ce0 : STD_LOGIC;
    signal samples_I_20_we0 : STD_LOGIC;
    signal samples_I_20_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_20_ce1 : STD_LOGIC;
    signal samples_I_20_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_21_ce0 : STD_LOGIC;
    signal samples_I_21_we0 : STD_LOGIC;
    signal samples_I_21_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_21_ce1 : STD_LOGIC;
    signal samples_I_21_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_22_ce0 : STD_LOGIC;
    signal samples_I_22_we0 : STD_LOGIC;
    signal samples_I_22_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_22_ce1 : STD_LOGIC;
    signal samples_I_22_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_23_ce0 : STD_LOGIC;
    signal samples_I_23_we0 : STD_LOGIC;
    signal samples_I_23_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_23_ce1 : STD_LOGIC;
    signal samples_I_23_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_24_ce0 : STD_LOGIC;
    signal samples_I_24_we0 : STD_LOGIC;
    signal samples_I_24_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_24_ce1 : STD_LOGIC;
    signal samples_I_24_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_25_ce0 : STD_LOGIC;
    signal samples_I_25_we0 : STD_LOGIC;
    signal samples_I_25_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_25_ce1 : STD_LOGIC;
    signal samples_I_25_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_26_ce0 : STD_LOGIC;
    signal samples_I_26_we0 : STD_LOGIC;
    signal samples_I_26_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_26_ce1 : STD_LOGIC;
    signal samples_I_26_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_27_ce0 : STD_LOGIC;
    signal samples_I_27_we0 : STD_LOGIC;
    signal samples_I_27_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_27_ce1 : STD_LOGIC;
    signal samples_I_27_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_28_ce0 : STD_LOGIC;
    signal samples_I_28_we0 : STD_LOGIC;
    signal samples_I_28_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_28_ce1 : STD_LOGIC;
    signal samples_I_28_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_29_ce0 : STD_LOGIC;
    signal samples_I_29_we0 : STD_LOGIC;
    signal samples_I_29_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_29_ce1 : STD_LOGIC;
    signal samples_I_29_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_30_ce0 : STD_LOGIC;
    signal samples_I_30_we0 : STD_LOGIC;
    signal samples_I_30_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_30_ce1 : STD_LOGIC;
    signal samples_I_30_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_I_31_ce0 : STD_LOGIC;
    signal samples_I_31_we0 : STD_LOGIC;
    signal samples_I_31_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_31_ce1 : STD_LOGIC;
    signal samples_I_31_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_12_ce0 : STD_LOGIC;
    signal samples_Q_12_we0 : STD_LOGIC;
    signal samples_Q_12_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_12_ce1 : STD_LOGIC;
    signal samples_Q_12_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_13_ce0 : STD_LOGIC;
    signal samples_Q_13_we0 : STD_LOGIC;
    signal samples_Q_13_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_13_ce1 : STD_LOGIC;
    signal samples_Q_13_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_14_ce0 : STD_LOGIC;
    signal samples_Q_14_we0 : STD_LOGIC;
    signal samples_Q_14_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_14_ce1 : STD_LOGIC;
    signal samples_Q_14_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_15_ce0 : STD_LOGIC;
    signal samples_Q_15_we0 : STD_LOGIC;
    signal samples_Q_15_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_15_ce1 : STD_LOGIC;
    signal samples_Q_15_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_16_ce0 : STD_LOGIC;
    signal samples_Q_16_we0 : STD_LOGIC;
    signal samples_Q_16_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_16_ce1 : STD_LOGIC;
    signal samples_Q_16_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_17_ce0 : STD_LOGIC;
    signal samples_Q_17_we0 : STD_LOGIC;
    signal samples_Q_17_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_17_ce1 : STD_LOGIC;
    signal samples_Q_17_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_18_ce0 : STD_LOGIC;
    signal samples_Q_18_we0 : STD_LOGIC;
    signal samples_Q_18_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_18_ce1 : STD_LOGIC;
    signal samples_Q_18_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_19_ce0 : STD_LOGIC;
    signal samples_Q_19_we0 : STD_LOGIC;
    signal samples_Q_19_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_19_ce1 : STD_LOGIC;
    signal samples_Q_19_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_20_ce0 : STD_LOGIC;
    signal samples_Q_20_we0 : STD_LOGIC;
    signal samples_Q_20_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_20_ce1 : STD_LOGIC;
    signal samples_Q_20_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_21_ce0 : STD_LOGIC;
    signal samples_Q_21_we0 : STD_LOGIC;
    signal samples_Q_21_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_21_ce1 : STD_LOGIC;
    signal samples_Q_21_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_22_ce0 : STD_LOGIC;
    signal samples_Q_22_we0 : STD_LOGIC;
    signal samples_Q_22_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_22_ce1 : STD_LOGIC;
    signal samples_Q_22_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_23_ce0 : STD_LOGIC;
    signal samples_Q_23_we0 : STD_LOGIC;
    signal samples_Q_23_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_23_ce1 : STD_LOGIC;
    signal samples_Q_23_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_24_ce0 : STD_LOGIC;
    signal samples_Q_24_we0 : STD_LOGIC;
    signal samples_Q_24_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_24_ce1 : STD_LOGIC;
    signal samples_Q_24_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_25_ce0 : STD_LOGIC;
    signal samples_Q_25_we0 : STD_LOGIC;
    signal samples_Q_25_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_25_ce1 : STD_LOGIC;
    signal samples_Q_25_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_26_ce0 : STD_LOGIC;
    signal samples_Q_26_we0 : STD_LOGIC;
    signal samples_Q_26_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_26_ce1 : STD_LOGIC;
    signal samples_Q_26_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_27_ce0 : STD_LOGIC;
    signal samples_Q_27_we0 : STD_LOGIC;
    signal samples_Q_27_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_27_ce1 : STD_LOGIC;
    signal samples_Q_27_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_28_ce0 : STD_LOGIC;
    signal samples_Q_28_we0 : STD_LOGIC;
    signal samples_Q_28_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_28_ce1 : STD_LOGIC;
    signal samples_Q_28_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_29_ce0 : STD_LOGIC;
    signal samples_Q_29_we0 : STD_LOGIC;
    signal samples_Q_29_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_29_ce1 : STD_LOGIC;
    signal samples_Q_29_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_30_ce0 : STD_LOGIC;
    signal samples_Q_30_we0 : STD_LOGIC;
    signal samples_Q_30_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_30_ce1 : STD_LOGIC;
    signal samples_Q_30_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal samples_Q_31_ce0 : STD_LOGIC;
    signal samples_Q_31_we0 : STD_LOGIC;
    signal samples_Q_31_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_31_ce1 : STD_LOGIC;
    signal samples_Q_31_q1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln52_fu_1354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_reg_1462 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal samples_I_1_addr_reg_1468 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_1_addr_reg_1474 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_2_addr_reg_1480 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_2_addr_reg_1486 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_3_addr_reg_1492 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_3_addr_reg_1498 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_4_addr_reg_1504 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_4_addr_reg_1510 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_5_addr_reg_1516 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_5_addr_reg_1522 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_6_addr_reg_1528 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_6_addr_reg_1534 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_7_addr_reg_1540 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_7_addr_reg_1546 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_8_addr_reg_1552 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_8_addr_reg_1558 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_9_addr_reg_1564 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_9_addr_reg_1570 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_10_addr_reg_1576 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_10_addr_reg_1582 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_11_addr_reg_1588 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_11_addr_reg_1594 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln52_reg_1600 : STD_LOGIC_VECTOR (0 downto 0);
    signal samples_I_12_addr_reg_1604 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_12_addr_reg_1610 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_13_addr_reg_1616 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_13_addr_reg_1622 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_14_addr_reg_1628 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_14_addr_reg_1634 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_15_addr_reg_1640 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_15_addr_reg_1646 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_16_addr_reg_1652 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_16_addr_reg_1658 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_17_addr_reg_1664 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_17_addr_reg_1670 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_18_addr_reg_1676 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_18_addr_reg_1682 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_19_addr_reg_1688 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_19_addr_reg_1694 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_20_addr_reg_1700 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_20_addr_reg_1706 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_21_addr_reg_1712 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_21_addr_reg_1718 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_22_addr_reg_1724 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_22_addr_reg_1730 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_23_addr_reg_1736 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_23_addr_reg_1742 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_24_addr_reg_1748 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_24_addr_reg_1754 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_25_addr_reg_1760 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_25_addr_reg_1766 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_26_addr_reg_1772 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_26_addr_reg_1778 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_27_addr_reg_1784 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_27_addr_reg_1790 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_28_addr_reg_1796 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_28_addr_reg_1802 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_29_addr_reg_1808 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_29_addr_reg_1814 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_30_addr_reg_1820 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_30_addr_reg_1826 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_I_31_addr_reg_1832 : STD_LOGIC_VECTOR (7 downto 0);
    signal samples_Q_31_addr_reg_1838 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln54_fu_1444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_164 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln54_fu_1432_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_3 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln_fu_1344_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln54_fu_1420_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln54_1_fu_1438_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (17 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component receiver_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    samples_I_1_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_1_addr_reg_1468,
        ce0 => samples_I_1_ce0,
        we0 => samples_I_1_we0,
        d0 => samples_I_2_q1,
        address1 => samples_I_1_address1,
        ce1 => samples_I_1_ce1,
        q1 => samples_I_1_q1);

    samples_I_2_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_2_addr_reg_1480,
        ce0 => samples_I_2_ce0,
        we0 => samples_I_2_we0,
        d0 => samples_I_3_q1,
        address1 => samples_I_2_address1,
        ce1 => samples_I_2_ce1,
        q1 => samples_I_2_q1);

    samples_I_3_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_3_addr_reg_1492,
        ce0 => samples_I_3_ce0,
        we0 => samples_I_3_we0,
        d0 => samples_I_4_q1,
        address1 => samples_I_3_address1,
        ce1 => samples_I_3_ce1,
        q1 => samples_I_3_q1);

    samples_I_4_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_4_addr_reg_1504,
        ce0 => samples_I_4_ce0,
        we0 => samples_I_4_we0,
        d0 => samples_I_5_q1,
        address1 => samples_I_4_address1,
        ce1 => samples_I_4_ce1,
        q1 => samples_I_4_q1);

    samples_I_5_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_5_addr_reg_1516,
        ce0 => samples_I_5_ce0,
        we0 => samples_I_5_we0,
        d0 => samples_I_6_q1,
        address1 => samples_I_5_address1,
        ce1 => samples_I_5_ce1,
        q1 => samples_I_5_q1);

    samples_I_6_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_6_addr_reg_1528,
        ce0 => samples_I_6_ce0,
        we0 => samples_I_6_we0,
        d0 => samples_I_7_q1,
        address1 => samples_I_6_address1,
        ce1 => samples_I_6_ce1,
        q1 => samples_I_6_q1);

    samples_I_7_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_7_addr_reg_1540,
        ce0 => samples_I_7_ce0,
        we0 => samples_I_7_we0,
        d0 => samples_I_8_q1,
        address1 => samples_I_7_address1,
        ce1 => samples_I_7_ce1,
        q1 => samples_I_7_q1);

    samples_I_8_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_8_addr_reg_1552,
        ce0 => samples_I_8_ce0,
        we0 => samples_I_8_we0,
        d0 => samples_I_9_q1,
        address1 => samples_I_8_address1,
        ce1 => samples_I_8_ce1,
        q1 => samples_I_8_q1);

    samples_I_9_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_9_addr_reg_1564,
        ce0 => samples_I_9_ce0,
        we0 => samples_I_9_we0,
        d0 => samples_I_10_q1,
        address1 => samples_I_9_address1,
        ce1 => samples_I_9_ce1,
        q1 => samples_I_9_q1);

    samples_I_10_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_10_addr_reg_1576,
        ce0 => samples_I_10_ce0,
        we0 => samples_I_10_we0,
        d0 => samples_I_11_q1,
        address1 => samples_I_10_address1,
        ce1 => samples_I_10_ce1,
        q1 => samples_I_10_q1);

    samples_I_0_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_0_address0,
        ce0 => samples_I_0_ce0,
        we0 => samples_I_0_we0,
        d0 => samples_I_1_q1,
        address1 => samples_I_0_address1,
        ce1 => samples_I_0_ce1,
        q1 => samples_I_0_q1);

    samples_Q_1_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_1_addr_reg_1474,
        ce0 => samples_Q_1_ce0,
        we0 => samples_Q_1_we0,
        d0 => samples_Q_2_q1,
        address1 => samples_Q_1_address1,
        ce1 => samples_Q_1_ce1,
        q1 => samples_Q_1_q1);

    samples_Q_0_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_0_address0,
        ce0 => samples_Q_0_ce0,
        we0 => samples_Q_0_we0,
        d0 => samples_Q_1_q1,
        address1 => samples_Q_0_address1,
        ce1 => samples_Q_0_ce1,
        q1 => samples_Q_0_q1);

    samples_Q_2_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_2_addr_reg_1486,
        ce0 => samples_Q_2_ce0,
        we0 => samples_Q_2_we0,
        d0 => samples_Q_3_q1,
        address1 => samples_Q_2_address1,
        ce1 => samples_Q_2_ce1,
        q1 => samples_Q_2_q1);

    samples_Q_3_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_3_addr_reg_1498,
        ce0 => samples_Q_3_ce0,
        we0 => samples_Q_3_we0,
        d0 => samples_Q_4_q1,
        address1 => samples_Q_3_address1,
        ce1 => samples_Q_3_ce1,
        q1 => samples_Q_3_q1);

    samples_Q_4_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_4_addr_reg_1510,
        ce0 => samples_Q_4_ce0,
        we0 => samples_Q_4_we0,
        d0 => samples_Q_5_q1,
        address1 => samples_Q_4_address1,
        ce1 => samples_Q_4_ce1,
        q1 => samples_Q_4_q1);

    samples_Q_5_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_5_addr_reg_1522,
        ce0 => samples_Q_5_ce0,
        we0 => samples_Q_5_we0,
        d0 => samples_Q_6_q1,
        address1 => samples_Q_5_address1,
        ce1 => samples_Q_5_ce1,
        q1 => samples_Q_5_q1);

    samples_Q_6_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_6_addr_reg_1534,
        ce0 => samples_Q_6_ce0,
        we0 => samples_Q_6_we0,
        d0 => samples_Q_7_q1,
        address1 => samples_Q_6_address1,
        ce1 => samples_Q_6_ce1,
        q1 => samples_Q_6_q1);

    samples_Q_7_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_7_addr_reg_1546,
        ce0 => samples_Q_7_ce0,
        we0 => samples_Q_7_we0,
        d0 => samples_Q_8_q1,
        address1 => samples_Q_7_address1,
        ce1 => samples_Q_7_ce1,
        q1 => samples_Q_7_q1);

    samples_Q_8_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_8_addr_reg_1558,
        ce0 => samples_Q_8_ce0,
        we0 => samples_Q_8_we0,
        d0 => samples_Q_9_q1,
        address1 => samples_Q_8_address1,
        ce1 => samples_Q_8_ce1,
        q1 => samples_Q_8_q1);

    samples_Q_9_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_9_addr_reg_1570,
        ce0 => samples_Q_9_ce0,
        we0 => samples_Q_9_we0,
        d0 => samples_Q_10_q1,
        address1 => samples_Q_9_address1,
        ce1 => samples_Q_9_ce1,
        q1 => samples_Q_9_q1);

    samples_Q_10_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_10_addr_reg_1582,
        ce0 => samples_Q_10_ce0,
        we0 => samples_Q_10_we0,
        d0 => samples_Q_11_q1,
        address1 => samples_Q_10_address1,
        ce1 => samples_Q_10_ce1,
        q1 => samples_Q_10_q1);

    samples_I_12_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_12_addr_reg_1604,
        ce0 => samples_I_12_ce0,
        we0 => samples_I_12_we0,
        d0 => samples_I_13_q1,
        address1 => samples_I_12_address1,
        ce1 => samples_I_12_ce1,
        q1 => samples_I_12_q1);

    samples_I_13_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_13_addr_reg_1616,
        ce0 => samples_I_13_ce0,
        we0 => samples_I_13_we0,
        d0 => samples_I_14_q1,
        address1 => samples_I_13_address1,
        ce1 => samples_I_13_ce1,
        q1 => samples_I_13_q1);

    samples_I_14_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_14_addr_reg_1628,
        ce0 => samples_I_14_ce0,
        we0 => samples_I_14_we0,
        d0 => samples_I_15_q1,
        address1 => samples_I_14_address1,
        ce1 => samples_I_14_ce1,
        q1 => samples_I_14_q1);

    samples_I_15_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_15_addr_reg_1640,
        ce0 => samples_I_15_ce0,
        we0 => samples_I_15_we0,
        d0 => samples_I_16_q1,
        address1 => samples_I_15_address1,
        ce1 => samples_I_15_ce1,
        q1 => samples_I_15_q1);

    samples_I_16_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_16_addr_reg_1652,
        ce0 => samples_I_16_ce0,
        we0 => samples_I_16_we0,
        d0 => samples_I_17_q1,
        address1 => samples_I_16_address1,
        ce1 => samples_I_16_ce1,
        q1 => samples_I_16_q1);

    samples_I_17_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_17_addr_reg_1664,
        ce0 => samples_I_17_ce0,
        we0 => samples_I_17_we0,
        d0 => samples_I_18_q1,
        address1 => samples_I_17_address1,
        ce1 => samples_I_17_ce1,
        q1 => samples_I_17_q1);

    samples_I_18_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_18_addr_reg_1676,
        ce0 => samples_I_18_ce0,
        we0 => samples_I_18_we0,
        d0 => samples_I_19_q1,
        address1 => samples_I_18_address1,
        ce1 => samples_I_18_ce1,
        q1 => samples_I_18_q1);

    samples_I_19_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_19_addr_reg_1688,
        ce0 => samples_I_19_ce0,
        we0 => samples_I_19_we0,
        d0 => samples_I_20_q1,
        address1 => samples_I_19_address1,
        ce1 => samples_I_19_ce1,
        q1 => samples_I_19_q1);

    samples_I_20_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_20_addr_reg_1700,
        ce0 => samples_I_20_ce0,
        we0 => samples_I_20_we0,
        d0 => samples_I_21_q1,
        address1 => samples_I_20_address1,
        ce1 => samples_I_20_ce1,
        q1 => samples_I_20_q1);

    samples_I_21_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_21_addr_reg_1712,
        ce0 => samples_I_21_ce0,
        we0 => samples_I_21_we0,
        d0 => samples_I_22_q1,
        address1 => samples_I_21_address1,
        ce1 => samples_I_21_ce1,
        q1 => samples_I_21_q1);

    samples_I_22_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_22_addr_reg_1724,
        ce0 => samples_I_22_ce0,
        we0 => samples_I_22_we0,
        d0 => samples_I_23_q1,
        address1 => samples_I_22_address1,
        ce1 => samples_I_22_ce1,
        q1 => samples_I_22_q1);

    samples_I_23_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_23_addr_reg_1736,
        ce0 => samples_I_23_ce0,
        we0 => samples_I_23_we0,
        d0 => samples_I_24_q1,
        address1 => samples_I_23_address1,
        ce1 => samples_I_23_ce1,
        q1 => samples_I_23_q1);

    samples_I_24_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_24_addr_reg_1748,
        ce0 => samples_I_24_ce0,
        we0 => samples_I_24_we0,
        d0 => samples_I_25_q1,
        address1 => samples_I_24_address1,
        ce1 => samples_I_24_ce1,
        q1 => samples_I_24_q1);

    samples_I_25_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_25_addr_reg_1760,
        ce0 => samples_I_25_ce0,
        we0 => samples_I_25_we0,
        d0 => samples_I_26_q1,
        address1 => samples_I_25_address1,
        ce1 => samples_I_25_ce1,
        q1 => samples_I_25_q1);

    samples_I_26_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_26_addr_reg_1772,
        ce0 => samples_I_26_ce0,
        we0 => samples_I_26_we0,
        d0 => samples_I_27_q1,
        address1 => samples_I_26_address1,
        ce1 => samples_I_26_ce1,
        q1 => samples_I_26_q1);

    samples_I_27_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_27_addr_reg_1784,
        ce0 => samples_I_27_ce0,
        we0 => samples_I_27_we0,
        d0 => samples_I_28_q1,
        address1 => samples_I_27_address1,
        ce1 => samples_I_27_ce1,
        q1 => samples_I_27_q1);

    samples_I_28_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_28_addr_reg_1796,
        ce0 => samples_I_28_ce0,
        we0 => samples_I_28_we0,
        d0 => samples_I_29_q1,
        address1 => samples_I_28_address1,
        ce1 => samples_I_28_ce1,
        q1 => samples_I_28_q1);

    samples_I_29_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_29_addr_reg_1808,
        ce0 => samples_I_29_ce0,
        we0 => samples_I_29_we0,
        d0 => samples_I_30_q1,
        address1 => samples_I_29_address1,
        ce1 => samples_I_29_ce1,
        q1 => samples_I_29_q1);

    samples_I_30_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_30_addr_reg_1820,
        ce0 => samples_I_30_ce0,
        we0 => samples_I_30_we0,
        d0 => samples_I_31_q1,
        address1 => samples_I_30_address1,
        ce1 => samples_I_30_ce1,
        q1 => samples_I_30_q1);

    samples_I_31_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_I_31_addr_reg_1832,
        ce0 => samples_I_31_ce0,
        we0 => samples_I_31_we0,
        d0 => samples_I_0_q1,
        address1 => samples_I_31_address1,
        ce1 => samples_I_31_ce1,
        q1 => samples_I_31_q1);

    samples_Q_12_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_12_addr_reg_1610,
        ce0 => samples_Q_12_ce0,
        we0 => samples_Q_12_we0,
        d0 => samples_Q_13_q1,
        address1 => samples_Q_12_address1,
        ce1 => samples_Q_12_ce1,
        q1 => samples_Q_12_q1);

    samples_Q_13_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_13_addr_reg_1622,
        ce0 => samples_Q_13_ce0,
        we0 => samples_Q_13_we0,
        d0 => samples_Q_14_q1,
        address1 => samples_Q_13_address1,
        ce1 => samples_Q_13_ce1,
        q1 => samples_Q_13_q1);

    samples_Q_14_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_14_addr_reg_1634,
        ce0 => samples_Q_14_ce0,
        we0 => samples_Q_14_we0,
        d0 => samples_Q_15_q1,
        address1 => samples_Q_14_address1,
        ce1 => samples_Q_14_ce1,
        q1 => samples_Q_14_q1);

    samples_Q_15_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_15_addr_reg_1646,
        ce0 => samples_Q_15_ce0,
        we0 => samples_Q_15_we0,
        d0 => samples_Q_16_q1,
        address1 => samples_Q_15_address1,
        ce1 => samples_Q_15_ce1,
        q1 => samples_Q_15_q1);

    samples_Q_16_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_16_addr_reg_1658,
        ce0 => samples_Q_16_ce0,
        we0 => samples_Q_16_we0,
        d0 => samples_Q_17_q1,
        address1 => samples_Q_16_address1,
        ce1 => samples_Q_16_ce1,
        q1 => samples_Q_16_q1);

    samples_Q_17_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_17_addr_reg_1670,
        ce0 => samples_Q_17_ce0,
        we0 => samples_Q_17_we0,
        d0 => samples_Q_18_q1,
        address1 => samples_Q_17_address1,
        ce1 => samples_Q_17_ce1,
        q1 => samples_Q_17_q1);

    samples_Q_18_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_18_addr_reg_1682,
        ce0 => samples_Q_18_ce0,
        we0 => samples_Q_18_we0,
        d0 => samples_Q_19_q1,
        address1 => samples_Q_18_address1,
        ce1 => samples_Q_18_ce1,
        q1 => samples_Q_18_q1);

    samples_Q_19_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_19_addr_reg_1694,
        ce0 => samples_Q_19_ce0,
        we0 => samples_Q_19_we0,
        d0 => samples_Q_20_q1,
        address1 => samples_Q_19_address1,
        ce1 => samples_Q_19_ce1,
        q1 => samples_Q_19_q1);

    samples_Q_20_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_20_addr_reg_1706,
        ce0 => samples_Q_20_ce0,
        we0 => samples_Q_20_we0,
        d0 => samples_Q_21_q1,
        address1 => samples_Q_20_address1,
        ce1 => samples_Q_20_ce1,
        q1 => samples_Q_20_q1);

    samples_Q_21_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_21_addr_reg_1718,
        ce0 => samples_Q_21_ce0,
        we0 => samples_Q_21_we0,
        d0 => samples_Q_22_q1,
        address1 => samples_Q_21_address1,
        ce1 => samples_Q_21_ce1,
        q1 => samples_Q_21_q1);

    samples_Q_22_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_22_addr_reg_1730,
        ce0 => samples_Q_22_ce0,
        we0 => samples_Q_22_we0,
        d0 => samples_Q_23_q1,
        address1 => samples_Q_22_address1,
        ce1 => samples_Q_22_ce1,
        q1 => samples_Q_22_q1);

    samples_Q_23_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_23_addr_reg_1742,
        ce0 => samples_Q_23_ce0,
        we0 => samples_Q_23_we0,
        d0 => samples_Q_24_q1,
        address1 => samples_Q_23_address1,
        ce1 => samples_Q_23_ce1,
        q1 => samples_Q_23_q1);

    samples_Q_24_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_24_addr_reg_1754,
        ce0 => samples_Q_24_ce0,
        we0 => samples_Q_24_we0,
        d0 => samples_Q_25_q1,
        address1 => samples_Q_24_address1,
        ce1 => samples_Q_24_ce1,
        q1 => samples_Q_24_q1);

    samples_Q_25_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_25_addr_reg_1766,
        ce0 => samples_Q_25_ce0,
        we0 => samples_Q_25_we0,
        d0 => samples_Q_26_q1,
        address1 => samples_Q_25_address1,
        ce1 => samples_Q_25_ce1,
        q1 => samples_Q_25_q1);

    samples_Q_26_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_26_addr_reg_1778,
        ce0 => samples_Q_26_ce0,
        we0 => samples_Q_26_we0,
        d0 => samples_Q_27_q1,
        address1 => samples_Q_26_address1,
        ce1 => samples_Q_26_ce1,
        q1 => samples_Q_26_q1);

    samples_Q_27_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_27_addr_reg_1790,
        ce0 => samples_Q_27_ce0,
        we0 => samples_Q_27_we0,
        d0 => samples_Q_28_q1,
        address1 => samples_Q_27_address1,
        ce1 => samples_Q_27_ce1,
        q1 => samples_Q_27_q1);

    samples_Q_28_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_28_addr_reg_1802,
        ce0 => samples_Q_28_ce0,
        we0 => samples_Q_28_we0,
        d0 => samples_Q_29_q1,
        address1 => samples_Q_28_address1,
        ce1 => samples_Q_28_ce1,
        q1 => samples_Q_28_q1);

    samples_Q_29_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_29_addr_reg_1814,
        ce0 => samples_Q_29_ce0,
        we0 => samples_Q_29_we0,
        d0 => samples_Q_30_q1,
        address1 => samples_Q_29_address1,
        ce1 => samples_Q_29_ce1,
        q1 => samples_Q_29_q1);

    samples_Q_30_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_30_addr_reg_1826,
        ce0 => samples_Q_30_ce0,
        we0 => samples_Q_30_we0,
        d0 => samples_Q_31_q1,
        address1 => samples_Q_30_address1,
        ce1 => samples_Q_30_ce1,
        q1 => samples_Q_30_q1);

    samples_Q_31_U : component receiver_receiver_Pipeline_VITIS_LOOP_52_1_samples_I_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 18,
        AddressRange => 241,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_Q_31_addr_reg_1838,
        ce0 => samples_Q_31_ce0,
        we0 => samples_Q_31_we0,
        d0 => samples_Q_0_q1,
        address1 => samples_Q_31_address1,
        ce1 => samples_Q_31_ce1,
        q1 => samples_Q_31_q1);

    flow_control_loop_pipe_sequential_init_U : component receiver_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if (((ap_loop_exit_ready = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                end if;
            end if; 
        end if;
    end process;

    i_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln52_fu_1426_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_164 <= add_ln54_fu_1432_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_164 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln52_reg_1600 <= icmp_ln52_fu_1426_p2;
                samples_I_10_addr_reg_1576 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_11_addr_reg_1588 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_1_addr_reg_1468 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_2_addr_reg_1480 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_3_addr_reg_1492 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_4_addr_reg_1504 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_5_addr_reg_1516 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_6_addr_reg_1528 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_7_addr_reg_1540 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_8_addr_reg_1552 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_9_addr_reg_1564 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_10_addr_reg_1582 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_11_addr_reg_1594 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_1_addr_reg_1474 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_2_addr_reg_1486 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_3_addr_reg_1498 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_4_addr_reg_1510 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_5_addr_reg_1522 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_6_addr_reg_1534 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_7_addr_reg_1546 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_8_addr_reg_1558 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_9_addr_reg_1570 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                    zext_ln52_reg_1462(7 downto 0) <= zext_ln52_fu_1354_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_1426_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                samples_I_12_addr_reg_1604 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_13_addr_reg_1616 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_14_addr_reg_1628 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_15_addr_reg_1640 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_16_addr_reg_1652 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_17_addr_reg_1664 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_18_addr_reg_1676 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_19_addr_reg_1688 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_20_addr_reg_1700 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_21_addr_reg_1712 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_22_addr_reg_1724 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_23_addr_reg_1736 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_24_addr_reg_1748 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_25_addr_reg_1760 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_26_addr_reg_1772 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_27_addr_reg_1784 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_28_addr_reg_1796 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_29_addr_reg_1808 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_30_addr_reg_1820 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_I_31_addr_reg_1832 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_12_addr_reg_1610 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_13_addr_reg_1622 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_14_addr_reg_1634 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_15_addr_reg_1646 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_16_addr_reg_1658 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_17_addr_reg_1670 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_18_addr_reg_1682 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_19_addr_reg_1694 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_20_addr_reg_1706 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_21_addr_reg_1718 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_22_addr_reg_1730 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_23_addr_reg_1742 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_24_addr_reg_1754 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_25_addr_reg_1766 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_26_addr_reg_1778 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_27_addr_reg_1790 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_28_addr_reg_1802 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_29_addr_reg_1814 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_30_addr_reg_1826 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
                samples_Q_31_addr_reg_1838 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    zext_ln52_reg_1462(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln54_1_fu_1438_p2 <= std_logic_vector(unsigned(lshr_ln_fu_1344_p4) + unsigned(ap_const_lv8_1));
    add_ln54_fu_1432_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_3) + unsigned(ap_const_lv13_20));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln52_fu_1426_p2)
    begin
        if (((icmp_ln52_fu_1426_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_164, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_3 <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_i_3 <= i_fu_164;
        end if; 
    end process;

    icmp_ln52_fu_1426_p2 <= "1" when (unsigned(or_ln54_fu_1420_p2) < unsigned(ap_const_lv13_1E0B)) else "0";
    lshr_ln_fu_1344_p4 <= ap_sig_allocacmp_i_3(12 downto 5);
    or_ln54_fu_1420_p2 <= (ap_sig_allocacmp_i_3 or ap_const_lv13_B);
    samples_I_0_address0 <= zext_ln52_reg_1462(8 - 1 downto 0);
    samples_I_0_address1 <= zext_ln54_fu_1444_p1(8 - 1 downto 0);

    samples_I_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_0_ce0 <= ap_const_logic_1;
        else 
            samples_I_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_0_ce1 <= ap_const_logic_1;
        else 
            samples_I_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_0_we0 <= ap_const_logic_1;
        else 
            samples_I_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_10_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_10_ce0 <= ap_const_logic_1;
        else 
            samples_I_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_10_ce1 <= ap_const_logic_1;
        else 
            samples_I_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_10_we0 <= ap_const_logic_1;
        else 
            samples_I_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_11_address0 <= samples_I_11_addr_reg_1588;
    samples_I_11_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_11_ce0 <= ap_const_logic_1;
        else 
            samples_I_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_11_ce1 <= ap_const_logic_1;
        else 
            samples_I_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_11_d0 <= samples_I_12_q1;

    samples_I_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_11_we0 <= ap_const_logic_1;
        else 
            samples_I_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_12_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_12_ce0 <= ap_const_logic_1;
        else 
            samples_I_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_12_ce1 <= ap_const_logic_1;
        else 
            samples_I_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_12_we0 <= ap_const_logic_1;
        else 
            samples_I_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_13_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_13_ce0 <= ap_const_logic_1;
        else 
            samples_I_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_13_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_13_ce1 <= ap_const_logic_1;
        else 
            samples_I_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_13_we0 <= ap_const_logic_1;
        else 
            samples_I_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_14_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_14_ce0 <= ap_const_logic_1;
        else 
            samples_I_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_14_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_14_ce1 <= ap_const_logic_1;
        else 
            samples_I_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_14_we0 <= ap_const_logic_1;
        else 
            samples_I_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_15_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_15_ce0 <= ap_const_logic_1;
        else 
            samples_I_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_15_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_15_ce1 <= ap_const_logic_1;
        else 
            samples_I_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_15_we0 <= ap_const_logic_1;
        else 
            samples_I_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_16_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_16_ce0 <= ap_const_logic_1;
        else 
            samples_I_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_16_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_16_ce1 <= ap_const_logic_1;
        else 
            samples_I_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_16_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_16_we0 <= ap_const_logic_1;
        else 
            samples_I_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_17_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_17_ce0 <= ap_const_logic_1;
        else 
            samples_I_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_17_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_17_ce1 <= ap_const_logic_1;
        else 
            samples_I_17_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_17_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_17_we0 <= ap_const_logic_1;
        else 
            samples_I_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_18_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_18_ce0 <= ap_const_logic_1;
        else 
            samples_I_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_18_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_18_ce1 <= ap_const_logic_1;
        else 
            samples_I_18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_18_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_18_we0 <= ap_const_logic_1;
        else 
            samples_I_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_19_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_19_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_19_ce0 <= ap_const_logic_1;
        else 
            samples_I_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_19_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_19_ce1 <= ap_const_logic_1;
        else 
            samples_I_19_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_19_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_19_we0 <= ap_const_logic_1;
        else 
            samples_I_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_1_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_1_ce0 <= ap_const_logic_1;
        else 
            samples_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_1_ce1 <= ap_const_logic_1;
        else 
            samples_I_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_1_we0 <= ap_const_logic_1;
        else 
            samples_I_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_20_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_20_ce0 <= ap_const_logic_1;
        else 
            samples_I_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_20_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_20_ce1 <= ap_const_logic_1;
        else 
            samples_I_20_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_20_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_20_we0 <= ap_const_logic_1;
        else 
            samples_I_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_21_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_21_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_21_ce0 <= ap_const_logic_1;
        else 
            samples_I_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_21_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_21_ce1 <= ap_const_logic_1;
        else 
            samples_I_21_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_21_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_21_we0 <= ap_const_logic_1;
        else 
            samples_I_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_22_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_22_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_22_ce0 <= ap_const_logic_1;
        else 
            samples_I_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_22_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_22_ce1 <= ap_const_logic_1;
        else 
            samples_I_22_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_22_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_22_we0 <= ap_const_logic_1;
        else 
            samples_I_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_23_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_23_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_23_ce0 <= ap_const_logic_1;
        else 
            samples_I_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_23_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_23_ce1 <= ap_const_logic_1;
        else 
            samples_I_23_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_23_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_23_we0 <= ap_const_logic_1;
        else 
            samples_I_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_24_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_24_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_24_ce0 <= ap_const_logic_1;
        else 
            samples_I_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_24_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_24_ce1 <= ap_const_logic_1;
        else 
            samples_I_24_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_24_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_24_we0 <= ap_const_logic_1;
        else 
            samples_I_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_25_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_25_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_25_ce0 <= ap_const_logic_1;
        else 
            samples_I_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_25_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_25_ce1 <= ap_const_logic_1;
        else 
            samples_I_25_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_25_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_25_we0 <= ap_const_logic_1;
        else 
            samples_I_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_26_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_26_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_26_ce0 <= ap_const_logic_1;
        else 
            samples_I_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_26_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_26_ce1 <= ap_const_logic_1;
        else 
            samples_I_26_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_26_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_26_we0 <= ap_const_logic_1;
        else 
            samples_I_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_27_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_27_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_27_ce0 <= ap_const_logic_1;
        else 
            samples_I_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_27_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_27_ce1 <= ap_const_logic_1;
        else 
            samples_I_27_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_27_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_27_we0 <= ap_const_logic_1;
        else 
            samples_I_27_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_28_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_28_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_28_ce0 <= ap_const_logic_1;
        else 
            samples_I_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_28_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_28_ce1 <= ap_const_logic_1;
        else 
            samples_I_28_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_28_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_28_we0 <= ap_const_logic_1;
        else 
            samples_I_28_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_29_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_29_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_29_ce0 <= ap_const_logic_1;
        else 
            samples_I_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_29_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_29_ce1 <= ap_const_logic_1;
        else 
            samples_I_29_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_29_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_29_we0 <= ap_const_logic_1;
        else 
            samples_I_29_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_2_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_2_ce0 <= ap_const_logic_1;
        else 
            samples_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_2_ce1 <= ap_const_logic_1;
        else 
            samples_I_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_2_we0 <= ap_const_logic_1;
        else 
            samples_I_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_30_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_30_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_30_ce0 <= ap_const_logic_1;
        else 
            samples_I_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_30_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_30_ce1 <= ap_const_logic_1;
        else 
            samples_I_30_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_30_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_30_we0 <= ap_const_logic_1;
        else 
            samples_I_30_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_31_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_31_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_31_ce0 <= ap_const_logic_1;
        else 
            samples_I_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_31_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_31_ce1 <= ap_const_logic_1;
        else 
            samples_I_31_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_31_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_31_we0 <= ap_const_logic_1;
        else 
            samples_I_31_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_3_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_3_ce0 <= ap_const_logic_1;
        else 
            samples_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_3_ce1 <= ap_const_logic_1;
        else 
            samples_I_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_3_we0 <= ap_const_logic_1;
        else 
            samples_I_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_4_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_4_ce0 <= ap_const_logic_1;
        else 
            samples_I_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_4_ce1 <= ap_const_logic_1;
        else 
            samples_I_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_4_we0 <= ap_const_logic_1;
        else 
            samples_I_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_5_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_5_ce0 <= ap_const_logic_1;
        else 
            samples_I_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_5_ce1 <= ap_const_logic_1;
        else 
            samples_I_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_5_we0 <= ap_const_logic_1;
        else 
            samples_I_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_6_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_6_ce0 <= ap_const_logic_1;
        else 
            samples_I_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_6_ce1 <= ap_const_logic_1;
        else 
            samples_I_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_6_we0 <= ap_const_logic_1;
        else 
            samples_I_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_7_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_7_ce0 <= ap_const_logic_1;
        else 
            samples_I_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_7_ce1 <= ap_const_logic_1;
        else 
            samples_I_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_7_we0 <= ap_const_logic_1;
        else 
            samples_I_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_8_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_8_ce0 <= ap_const_logic_1;
        else 
            samples_I_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_8_ce1 <= ap_const_logic_1;
        else 
            samples_I_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_8_we0 <= ap_const_logic_1;
        else 
            samples_I_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_I_9_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_I_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_9_ce0 <= ap_const_logic_1;
        else 
            samples_I_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_9_ce1 <= ap_const_logic_1;
        else 
            samples_I_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_I_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_I_9_we0 <= ap_const_logic_1;
        else 
            samples_I_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_0_address0 <= zext_ln52_reg_1462(8 - 1 downto 0);
    samples_Q_0_address1 <= zext_ln54_fu_1444_p1(8 - 1 downto 0);

    samples_Q_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_0_ce0 <= ap_const_logic_1;
        else 
            samples_Q_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_0_ce1 <= ap_const_logic_1;
        else 
            samples_Q_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_0_we0 <= ap_const_logic_1;
        else 
            samples_Q_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_10_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_10_ce0 <= ap_const_logic_1;
        else 
            samples_Q_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_10_ce1 <= ap_const_logic_1;
        else 
            samples_Q_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_10_we0 <= ap_const_logic_1;
        else 
            samples_Q_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_11_address0 <= samples_Q_11_addr_reg_1594;
    samples_Q_11_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_11_ce0 <= ap_const_logic_1;
        else 
            samples_Q_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_11_ce1 <= ap_const_logic_1;
        else 
            samples_Q_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_11_d0 <= samples_Q_12_q1;

    samples_Q_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_11_we0 <= ap_const_logic_1;
        else 
            samples_Q_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_12_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_12_ce0 <= ap_const_logic_1;
        else 
            samples_Q_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_12_ce1 <= ap_const_logic_1;
        else 
            samples_Q_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_12_we0 <= ap_const_logic_1;
        else 
            samples_Q_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_13_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_13_ce0 <= ap_const_logic_1;
        else 
            samples_Q_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_13_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_13_ce1 <= ap_const_logic_1;
        else 
            samples_Q_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_13_we0 <= ap_const_logic_1;
        else 
            samples_Q_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_14_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_14_ce0 <= ap_const_logic_1;
        else 
            samples_Q_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_14_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_14_ce1 <= ap_const_logic_1;
        else 
            samples_Q_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_14_we0 <= ap_const_logic_1;
        else 
            samples_Q_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_15_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_15_ce0 <= ap_const_logic_1;
        else 
            samples_Q_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_15_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_15_ce1 <= ap_const_logic_1;
        else 
            samples_Q_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_15_we0 <= ap_const_logic_1;
        else 
            samples_Q_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_16_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_16_ce0 <= ap_const_logic_1;
        else 
            samples_Q_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_16_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_16_ce1 <= ap_const_logic_1;
        else 
            samples_Q_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_16_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_16_we0 <= ap_const_logic_1;
        else 
            samples_Q_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_17_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_17_ce0 <= ap_const_logic_1;
        else 
            samples_Q_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_17_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_17_ce1 <= ap_const_logic_1;
        else 
            samples_Q_17_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_17_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_17_we0 <= ap_const_logic_1;
        else 
            samples_Q_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_18_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_18_ce0 <= ap_const_logic_1;
        else 
            samples_Q_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_18_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_18_ce1 <= ap_const_logic_1;
        else 
            samples_Q_18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_18_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_18_we0 <= ap_const_logic_1;
        else 
            samples_Q_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_19_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_19_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_19_ce0 <= ap_const_logic_1;
        else 
            samples_Q_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_19_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_19_ce1 <= ap_const_logic_1;
        else 
            samples_Q_19_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_19_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_19_we0 <= ap_const_logic_1;
        else 
            samples_Q_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_1_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_1_ce0 <= ap_const_logic_1;
        else 
            samples_Q_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_1_ce1 <= ap_const_logic_1;
        else 
            samples_Q_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_1_we0 <= ap_const_logic_1;
        else 
            samples_Q_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_20_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_20_ce0 <= ap_const_logic_1;
        else 
            samples_Q_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_20_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_20_ce1 <= ap_const_logic_1;
        else 
            samples_Q_20_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_20_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_20_we0 <= ap_const_logic_1;
        else 
            samples_Q_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_21_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_21_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_21_ce0 <= ap_const_logic_1;
        else 
            samples_Q_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_21_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_21_ce1 <= ap_const_logic_1;
        else 
            samples_Q_21_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_21_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_21_we0 <= ap_const_logic_1;
        else 
            samples_Q_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_22_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_22_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_22_ce0 <= ap_const_logic_1;
        else 
            samples_Q_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_22_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_22_ce1 <= ap_const_logic_1;
        else 
            samples_Q_22_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_22_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_22_we0 <= ap_const_logic_1;
        else 
            samples_Q_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_23_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_23_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_23_ce0 <= ap_const_logic_1;
        else 
            samples_Q_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_23_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_23_ce1 <= ap_const_logic_1;
        else 
            samples_Q_23_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_23_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_23_we0 <= ap_const_logic_1;
        else 
            samples_Q_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_24_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_24_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_24_ce0 <= ap_const_logic_1;
        else 
            samples_Q_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_24_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_24_ce1 <= ap_const_logic_1;
        else 
            samples_Q_24_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_24_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_24_we0 <= ap_const_logic_1;
        else 
            samples_Q_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_25_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_25_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_25_ce0 <= ap_const_logic_1;
        else 
            samples_Q_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_25_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_25_ce1 <= ap_const_logic_1;
        else 
            samples_Q_25_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_25_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_25_we0 <= ap_const_logic_1;
        else 
            samples_Q_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_26_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_26_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_26_ce0 <= ap_const_logic_1;
        else 
            samples_Q_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_26_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_26_ce1 <= ap_const_logic_1;
        else 
            samples_Q_26_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_26_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_26_we0 <= ap_const_logic_1;
        else 
            samples_Q_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_27_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_27_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_27_ce0 <= ap_const_logic_1;
        else 
            samples_Q_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_27_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_27_ce1 <= ap_const_logic_1;
        else 
            samples_Q_27_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_27_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_27_we0 <= ap_const_logic_1;
        else 
            samples_Q_27_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_28_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_28_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_28_ce0 <= ap_const_logic_1;
        else 
            samples_Q_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_28_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_28_ce1 <= ap_const_logic_1;
        else 
            samples_Q_28_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_28_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_28_we0 <= ap_const_logic_1;
        else 
            samples_Q_28_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_29_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_29_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_29_ce0 <= ap_const_logic_1;
        else 
            samples_Q_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_29_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_29_ce1 <= ap_const_logic_1;
        else 
            samples_Q_29_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_29_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_29_we0 <= ap_const_logic_1;
        else 
            samples_Q_29_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_2_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_2_ce0 <= ap_const_logic_1;
        else 
            samples_Q_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_2_ce1 <= ap_const_logic_1;
        else 
            samples_Q_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_2_we0 <= ap_const_logic_1;
        else 
            samples_Q_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_30_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_30_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_30_ce0 <= ap_const_logic_1;
        else 
            samples_Q_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_30_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_30_ce1 <= ap_const_logic_1;
        else 
            samples_Q_30_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_30_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_30_we0 <= ap_const_logic_1;
        else 
            samples_Q_30_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_31_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_31_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_31_ce0 <= ap_const_logic_1;
        else 
            samples_Q_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_31_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_31_ce1 <= ap_const_logic_1;
        else 
            samples_Q_31_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_31_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln52_reg_1600)
    begin
        if (((icmp_ln52_reg_1600 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_31_we0 <= ap_const_logic_1;
        else 
            samples_Q_31_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_3_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_3_ce0 <= ap_const_logic_1;
        else 
            samples_Q_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_3_ce1 <= ap_const_logic_1;
        else 
            samples_Q_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_3_we0 <= ap_const_logic_1;
        else 
            samples_Q_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_4_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_4_ce0 <= ap_const_logic_1;
        else 
            samples_Q_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_4_ce1 <= ap_const_logic_1;
        else 
            samples_Q_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_4_we0 <= ap_const_logic_1;
        else 
            samples_Q_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_5_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_5_ce0 <= ap_const_logic_1;
        else 
            samples_Q_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_5_ce1 <= ap_const_logic_1;
        else 
            samples_Q_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_5_we0 <= ap_const_logic_1;
        else 
            samples_Q_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_6_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_6_ce0 <= ap_const_logic_1;
        else 
            samples_Q_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_6_ce1 <= ap_const_logic_1;
        else 
            samples_Q_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_6_we0 <= ap_const_logic_1;
        else 
            samples_Q_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_7_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_7_ce0 <= ap_const_logic_1;
        else 
            samples_Q_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_7_ce1 <= ap_const_logic_1;
        else 
            samples_Q_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_7_we0 <= ap_const_logic_1;
        else 
            samples_Q_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_8_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_8_ce0 <= ap_const_logic_1;
        else 
            samples_Q_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_8_ce1 <= ap_const_logic_1;
        else 
            samples_Q_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_8_we0 <= ap_const_logic_1;
        else 
            samples_Q_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_Q_9_address1 <= zext_ln52_fu_1354_p1(8 - 1 downto 0);

    samples_Q_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_9_ce0 <= ap_const_logic_1;
        else 
            samples_Q_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_9_ce1 <= ap_const_logic_1;
        else 
            samples_Q_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    samples_Q_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            samples_Q_9_we0 <= ap_const_logic_1;
        else 
            samples_Q_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln52_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1344_p4),64));
    zext_ln54_fu_1444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_1_fu_1438_p2),64));
end behav;
