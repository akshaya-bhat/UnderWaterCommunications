-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity receiver_receiver_Pipeline_VITIS_LOOP_79_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    delay_line_I_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_7_ce0 : OUT STD_LOGIC;
    delay_line_I_7_we0 : OUT STD_LOGIC;
    delay_line_I_7_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_7_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_7_ce1 : OUT STD_LOGIC;
    delay_line_I_7_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_0_ce0 : OUT STD_LOGIC;
    delay_line_I_0_we0 : OUT STD_LOGIC;
    delay_line_I_0_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_0_ce1 : OUT STD_LOGIC;
    delay_line_I_0_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_7_ce0 : OUT STD_LOGIC;
    delay_line_Q_7_we0 : OUT STD_LOGIC;
    delay_line_Q_7_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_7_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_7_ce1 : OUT STD_LOGIC;
    delay_line_Q_7_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_0_ce0 : OUT STD_LOGIC;
    delay_line_Q_0_we0 : OUT STD_LOGIC;
    delay_line_Q_0_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_0_ce1 : OUT STD_LOGIC;
    delay_line_Q_0_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_6_ce0 : OUT STD_LOGIC;
    delay_line_I_6_we0 : OUT STD_LOGIC;
    delay_line_I_6_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_6_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_6_ce1 : OUT STD_LOGIC;
    delay_line_I_6_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_6_ce0 : OUT STD_LOGIC;
    delay_line_Q_6_we0 : OUT STD_LOGIC;
    delay_line_Q_6_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_6_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_6_ce1 : OUT STD_LOGIC;
    delay_line_Q_6_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_5_ce0 : OUT STD_LOGIC;
    delay_line_I_5_we0 : OUT STD_LOGIC;
    delay_line_I_5_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_5_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_5_ce1 : OUT STD_LOGIC;
    delay_line_I_5_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_5_ce0 : OUT STD_LOGIC;
    delay_line_Q_5_we0 : OUT STD_LOGIC;
    delay_line_Q_5_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_5_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_5_ce1 : OUT STD_LOGIC;
    delay_line_Q_5_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_4_ce0 : OUT STD_LOGIC;
    delay_line_I_4_we0 : OUT STD_LOGIC;
    delay_line_I_4_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_4_ce1 : OUT STD_LOGIC;
    delay_line_I_4_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_4_ce0 : OUT STD_LOGIC;
    delay_line_Q_4_we0 : OUT STD_LOGIC;
    delay_line_Q_4_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_4_ce1 : OUT STD_LOGIC;
    delay_line_Q_4_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_3_ce0 : OUT STD_LOGIC;
    delay_line_I_3_we0 : OUT STD_LOGIC;
    delay_line_I_3_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_3_ce1 : OUT STD_LOGIC;
    delay_line_I_3_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_3_ce0 : OUT STD_LOGIC;
    delay_line_Q_3_we0 : OUT STD_LOGIC;
    delay_line_Q_3_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_3_ce1 : OUT STD_LOGIC;
    delay_line_Q_3_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_2_ce0 : OUT STD_LOGIC;
    delay_line_I_2_we0 : OUT STD_LOGIC;
    delay_line_I_2_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_2_ce1 : OUT STD_LOGIC;
    delay_line_I_2_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_2_ce0 : OUT STD_LOGIC;
    delay_line_Q_2_we0 : OUT STD_LOGIC;
    delay_line_Q_2_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_2_ce1 : OUT STD_LOGIC;
    delay_line_Q_2_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_1_ce0 : OUT STD_LOGIC;
    delay_line_I_1_we0 : OUT STD_LOGIC;
    delay_line_I_1_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_I_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_I_1_ce1 : OUT STD_LOGIC;
    delay_line_I_1_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_1_ce0 : OUT STD_LOGIC;
    delay_line_Q_1_we0 : OUT STD_LOGIC;
    delay_line_Q_1_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    delay_line_Q_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    delay_line_Q_1_ce1 : OUT STD_LOGIC;
    delay_line_Q_1_q1 : IN STD_LOGIC_VECTOR (17 downto 0) );
end;


architecture behav of receiver_receiver_Pipeline_VITIS_LOOP_79_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv8_C0 : STD_LOGIC_VECTOR (7 downto 0) := "11000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv8_FC : STD_LOGIC_VECTOR (7 downto 0) := "11111100";
    constant ap_const_lv8_FB : STD_LOGIC_VECTOR (7 downto 0) := "11111011";
    constant ap_const_lv8_FA : STD_LOGIC_VECTOR (7 downto 0) := "11111010";
    constant ap_const_lv8_F9 : STD_LOGIC_VECTOR (7 downto 0) := "11111001";
    constant ap_const_lv8_F8 : STD_LOGIC_VECTOR (7 downto 0) := "11111000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln79_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal delay_line_I_7_addr_reg_1464 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln81_1_reg_1470 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp77_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp77_reg_1475 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_Q_7_addr_reg_1480 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp71_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp71_reg_1486 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_I_6_addr_reg_1491 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp65_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp65_reg_1497 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_Q_6_addr_reg_1502 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp59_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp59_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_I_5_addr_reg_1513 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp53_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp53_reg_1519 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_Q_5_addr_reg_1524 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp47_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp47_reg_1530 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_I_4_addr_reg_1535 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp41_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp41_reg_1541 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_Q_4_addr_reg_1546 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp35_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp35_reg_1552 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_I_3_addr_reg_1557 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp29_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp29_reg_1563 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_Q_3_addr_reg_1568 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp23_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp23_reg_1574 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_I_2_addr_reg_1579 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp17_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp17_reg_1585 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_Q_2_addr_reg_1590 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp11_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp11_reg_1596 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_I_1_addr_reg_1601 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp5_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp5_reg_1607 : STD_LOGIC_VECTOR (0 downto 0);
    signal delay_line_Q_1_addr_reg_1612 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_cmp_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_cmp_reg_1618 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln81_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln81_2_fu_708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_3_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_4_fu_808_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_5_fu_858_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_6_fu_908_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_7_fu_958_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_8_fu_1008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_1_fu_1029_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_addr_reg74_fu_82 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal reuse_reg73_fu_86 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select66_fu_1059_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg68_fu_90 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg67_fu_94 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select60_fu_1075_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg62_fu_98 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg61_fu_102 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select54_fu_1091_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg56_fu_106 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg55_fu_110 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select48_fu_1107_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg50_fu_114 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg49_fu_118 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select42_fu_1123_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg44_fu_122 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg43_fu_126 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select36_fu_1139_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg38_fu_130 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg37_fu_134 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select30_fu_1155_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg32_fu_138 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg31_fu_142 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select24_fu_1171_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg26_fu_146 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg25_fu_150 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select18_fu_1187_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg20_fu_154 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg19_fu_158 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select12_fu_1203_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg14_fu_162 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg13_fu_166 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select6_fu_1219_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg8_fu_170 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg7_fu_174 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_select_fu_1235_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg2_fu_178 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg1_fu_182 : STD_LOGIC_VECTOR (17 downto 0);
    signal reuse_addr_reg_fu_186 : STD_LOGIC_VECTOR (63 downto 0);
    signal reuse_reg_fu_190 : STD_LOGIC_VECTOR (17 downto 0);
    signal i_1_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln81_7_fu_992_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln81_fu_642_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln1_fu_648_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_1_fu_692_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln81_2_fu_698_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_2_fu_742_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln81_3_fu_748_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_3_fu_792_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln81_4_fu_798_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_4_fu_842_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln81_5_fu_848_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_5_fu_892_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln81_6_fu_898_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_6_fu_942_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln81_7_fu_948_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln81_8_fu_998_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component receiver_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component receiver_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_1_fu_194 <= ap_const_lv8_C0;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_1_fu_194 <= add_ln81_7_fu_992_p2;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg14_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg14_fu_162 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg14_fu_162 <= zext_ln81_6_fu_908_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg20_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg20_fu_154 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg20_fu_154 <= zext_ln81_5_fu_858_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg26_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg26_fu_146 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg26_fu_146 <= zext_ln81_5_fu_858_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg2_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg2_fu_178 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg2_fu_178 <= zext_ln81_7_fu_958_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg32_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg32_fu_138 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg32_fu_138 <= zext_ln81_4_fu_808_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg38_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg38_fu_130 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg38_fu_130 <= zext_ln81_4_fu_808_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg44_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg44_fu_122 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg44_fu_122 <= zext_ln81_3_fu_758_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg50_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg50_fu_114 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg50_fu_114 <= zext_ln81_3_fu_758_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg56_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg56_fu_106 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg56_fu_106 <= zext_ln81_2_fu_708_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg62_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg62_fu_98 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg62_fu_98 <= zext_ln81_2_fu_708_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg68_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg68_fu_90 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg68_fu_90 <= zext_ln81_fu_658_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg74_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg74_fu_82 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg74_fu_82 <= zext_ln81_fu_658_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg8_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg8_fu_170 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg8_fu_170 <= zext_ln81_6_fu_908_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_addr_reg_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    reuse_addr_reg_fu_186 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
                elsif (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    reuse_addr_reg_fu_186 <= zext_ln81_7_fu_958_p1;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg13_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg13_fu_166 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg13_fu_166 <= reuse_select6_fu_1219_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg19_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg19_fu_158 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg19_fu_158 <= reuse_select12_fu_1203_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg1_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg1_fu_182 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg1_fu_182 <= delay_line_I_0_q1;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg25_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg25_fu_150 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg25_fu_150 <= reuse_select18_fu_1187_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg31_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg31_fu_142 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg31_fu_142 <= reuse_select24_fu_1171_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg37_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg37_fu_134 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg37_fu_134 <= reuse_select30_fu_1155_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg43_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg43_fu_126 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg43_fu_126 <= reuse_select36_fu_1139_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg49_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg49_fu_118 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg49_fu_118 <= reuse_select42_fu_1123_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg55_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg55_fu_110 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg55_fu_110 <= reuse_select48_fu_1107_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg61_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg61_fu_102 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg61_fu_102 <= reuse_select54_fu_1091_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg67_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg67_fu_94 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg67_fu_94 <= reuse_select60_fu_1075_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg73_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg73_fu_86 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg73_fu_86 <= reuse_select66_fu_1059_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg7_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg7_fu_174 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg7_fu_174 <= reuse_select_fu_1235_p3;
                end if;
            end if; 
        end if;
    end process;

    reuse_reg_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    reuse_reg_fu_190 <= ap_const_lv18_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    reuse_reg_fu_190 <= delay_line_Q_0_q1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_636_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                addr_cmp11_reg_1596 <= addr_cmp11_fu_931_p2;
                addr_cmp17_reg_1585 <= addr_cmp17_fu_917_p2;
                addr_cmp23_reg_1574 <= addr_cmp23_fu_881_p2;
                addr_cmp29_reg_1563 <= addr_cmp29_fu_867_p2;
                addr_cmp35_reg_1552 <= addr_cmp35_fu_831_p2;
                addr_cmp41_reg_1541 <= addr_cmp41_fu_817_p2;
                addr_cmp47_reg_1530 <= addr_cmp47_fu_781_p2;
                addr_cmp53_reg_1519 <= addr_cmp53_fu_767_p2;
                addr_cmp59_reg_1508 <= addr_cmp59_fu_731_p2;
                addr_cmp5_reg_1607 <= addr_cmp5_fu_967_p2;
                addr_cmp65_reg_1497 <= addr_cmp65_fu_717_p2;
                addr_cmp71_reg_1486 <= addr_cmp71_fu_686_p2;
                addr_cmp77_reg_1475 <= addr_cmp77_fu_677_p2;
                addr_cmp_reg_1618 <= addr_cmp_fu_981_p2;
                delay_line_I_1_addr_reg_1601 <= zext_ln81_7_fu_958_p1(5 - 1 downto 0);
                delay_line_I_2_addr_reg_1579 <= zext_ln81_6_fu_908_p1(5 - 1 downto 0);
                delay_line_I_3_addr_reg_1557 <= zext_ln81_5_fu_858_p1(5 - 1 downto 0);
                delay_line_I_4_addr_reg_1535 <= zext_ln81_4_fu_808_p1(5 - 1 downto 0);
                delay_line_I_5_addr_reg_1513 <= zext_ln81_3_fu_758_p1(5 - 1 downto 0);
                delay_line_I_6_addr_reg_1491 <= zext_ln81_2_fu_708_p1(5 - 1 downto 0);
                delay_line_I_7_addr_reg_1464 <= zext_ln81_fu_658_p1(5 - 1 downto 0);
                delay_line_Q_1_addr_reg_1612 <= zext_ln81_7_fu_958_p1(5 - 1 downto 0);
                delay_line_Q_2_addr_reg_1590 <= zext_ln81_6_fu_908_p1(5 - 1 downto 0);
                delay_line_Q_3_addr_reg_1568 <= zext_ln81_5_fu_858_p1(5 - 1 downto 0);
                delay_line_Q_4_addr_reg_1546 <= zext_ln81_4_fu_808_p1(5 - 1 downto 0);
                delay_line_Q_5_addr_reg_1524 <= zext_ln81_3_fu_758_p1(5 - 1 downto 0);
                delay_line_Q_6_addr_reg_1502 <= zext_ln81_2_fu_708_p1(5 - 1 downto 0);
                delay_line_Q_7_addr_reg_1480 <= zext_ln81_fu_658_p1(5 - 1 downto 0);
                lshr_ln81_1_reg_1470 <= i_1_fu_194(7 downto 3);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln81_1_fu_692_p2 <= std_logic_vector(unsigned(i_1_fu_194) + unsigned(ap_const_lv8_FE));
    add_ln81_2_fu_742_p2 <= std_logic_vector(unsigned(i_1_fu_194) + unsigned(ap_const_lv8_FD));
    add_ln81_3_fu_792_p2 <= std_logic_vector(unsigned(i_1_fu_194) + unsigned(ap_const_lv8_FC));
    add_ln81_4_fu_842_p2 <= std_logic_vector(unsigned(i_1_fu_194) + unsigned(ap_const_lv8_FB));
    add_ln81_5_fu_892_p2 <= std_logic_vector(unsigned(i_1_fu_194) + unsigned(ap_const_lv8_FA));
    add_ln81_6_fu_942_p2 <= std_logic_vector(unsigned(i_1_fu_194) + unsigned(ap_const_lv8_F9));
    add_ln81_7_fu_992_p2 <= std_logic_vector(unsigned(i_1_fu_194) + unsigned(ap_const_lv8_F8));
    add_ln81_fu_642_p2 <= std_logic_vector(unsigned(i_1_fu_194) + unsigned(ap_const_lv8_FF));
    addr_cmp11_fu_931_p2 <= "1" when (reuse_addr_reg8_fu_170 = zext_ln81_6_fu_908_p1) else "0";
    addr_cmp17_fu_917_p2 <= "1" when (reuse_addr_reg14_fu_162 = zext_ln81_6_fu_908_p1) else "0";
    addr_cmp23_fu_881_p2 <= "1" when (reuse_addr_reg20_fu_154 = zext_ln81_5_fu_858_p1) else "0";
    addr_cmp29_fu_867_p2 <= "1" when (reuse_addr_reg26_fu_146 = zext_ln81_5_fu_858_p1) else "0";
    addr_cmp35_fu_831_p2 <= "1" when (reuse_addr_reg32_fu_138 = zext_ln81_4_fu_808_p1) else "0";
    addr_cmp41_fu_817_p2 <= "1" when (reuse_addr_reg38_fu_130 = zext_ln81_4_fu_808_p1) else "0";
    addr_cmp47_fu_781_p2 <= "1" when (reuse_addr_reg44_fu_122 = zext_ln81_3_fu_758_p1) else "0";
    addr_cmp53_fu_767_p2 <= "1" when (reuse_addr_reg50_fu_114 = zext_ln81_3_fu_758_p1) else "0";
    addr_cmp59_fu_731_p2 <= "1" when (reuse_addr_reg56_fu_106 = zext_ln81_2_fu_708_p1) else "0";
    addr_cmp5_fu_967_p2 <= "1" when (reuse_addr_reg2_fu_178 = zext_ln81_7_fu_958_p1) else "0";
    addr_cmp65_fu_717_p2 <= "1" when (reuse_addr_reg62_fu_98 = zext_ln81_2_fu_708_p1) else "0";
    addr_cmp71_fu_686_p2 <= "1" when (reuse_addr_reg68_fu_90 = zext_ln81_fu_658_p1) else "0";
    addr_cmp77_fu_677_p2 <= "1" when (reuse_addr_reg74_fu_82 = zext_ln81_fu_658_p1) else "0";
    addr_cmp_fu_981_p2 <= "1" when (reuse_addr_reg_fu_186 = zext_ln81_7_fu_958_p1) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln79_fu_636_p2)
    begin
        if (((icmp_ln79_fu_636_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_0_address0 <= zext_ln81_1_fu_1029_p1(5 - 1 downto 0);
    delay_line_I_0_address1 <= zext_ln81_8_fu_1008_p1(5 - 1 downto 0);

    delay_line_I_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_0_ce0 <= ap_const_logic_1;
        else 
            delay_line_I_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_I_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_I_0_ce1 <= ap_const_logic_1;
        else 
            delay_line_I_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_0_d0 <= 
        reuse_reg73_fu_86 when (addr_cmp77_reg_1475(0) = '1') else 
        delay_line_I_7_q1;

    delay_line_I_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_0_we0 <= ap_const_logic_1;
        else 
            delay_line_I_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_1_address0 <= delay_line_I_1_addr_reg_1601;
    delay_line_I_1_address1 <= zext_ln81_7_fu_958_p1(5 - 1 downto 0);

    delay_line_I_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_1_ce0 <= ap_const_logic_1;
        else 
            delay_line_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_I_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_I_1_ce1 <= ap_const_logic_1;
        else 
            delay_line_I_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_1_d0 <= delay_line_I_0_q1;

    delay_line_I_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_1_we0 <= ap_const_logic_1;
        else 
            delay_line_I_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_2_address0 <= delay_line_I_2_addr_reg_1579;
    delay_line_I_2_address1 <= zext_ln81_6_fu_908_p1(5 - 1 downto 0);

    delay_line_I_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_2_ce0 <= ap_const_logic_1;
        else 
            delay_line_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_I_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_I_2_ce1 <= ap_const_logic_1;
        else 
            delay_line_I_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_2_d0 <= 
        reuse_reg1_fu_182 when (addr_cmp5_reg_1607(0) = '1') else 
        delay_line_I_1_q1;

    delay_line_I_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_2_we0 <= ap_const_logic_1;
        else 
            delay_line_I_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_3_address0 <= delay_line_I_3_addr_reg_1557;
    delay_line_I_3_address1 <= zext_ln81_5_fu_858_p1(5 - 1 downto 0);

    delay_line_I_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_3_ce0 <= ap_const_logic_1;
        else 
            delay_line_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_I_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_I_3_ce1 <= ap_const_logic_1;
        else 
            delay_line_I_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_3_d0 <= 
        reuse_reg13_fu_166 when (addr_cmp17_reg_1585(0) = '1') else 
        delay_line_I_2_q1;

    delay_line_I_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_3_we0 <= ap_const_logic_1;
        else 
            delay_line_I_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_4_address0 <= delay_line_I_4_addr_reg_1535;
    delay_line_I_4_address1 <= zext_ln81_4_fu_808_p1(5 - 1 downto 0);

    delay_line_I_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_4_ce0 <= ap_const_logic_1;
        else 
            delay_line_I_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_I_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_I_4_ce1 <= ap_const_logic_1;
        else 
            delay_line_I_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_4_d0 <= 
        reuse_reg25_fu_150 when (addr_cmp29_reg_1563(0) = '1') else 
        delay_line_I_3_q1;

    delay_line_I_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_4_we0 <= ap_const_logic_1;
        else 
            delay_line_I_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_5_address0 <= delay_line_I_5_addr_reg_1513;
    delay_line_I_5_address1 <= zext_ln81_3_fu_758_p1(5 - 1 downto 0);

    delay_line_I_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_5_ce0 <= ap_const_logic_1;
        else 
            delay_line_I_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_I_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_I_5_ce1 <= ap_const_logic_1;
        else 
            delay_line_I_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_5_d0 <= 
        reuse_reg37_fu_134 when (addr_cmp41_reg_1541(0) = '1') else 
        delay_line_I_4_q1;

    delay_line_I_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_5_we0 <= ap_const_logic_1;
        else 
            delay_line_I_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_6_address0 <= delay_line_I_6_addr_reg_1491;
    delay_line_I_6_address1 <= zext_ln81_2_fu_708_p1(5 - 1 downto 0);

    delay_line_I_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_6_ce0 <= ap_const_logic_1;
        else 
            delay_line_I_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_I_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_I_6_ce1 <= ap_const_logic_1;
        else 
            delay_line_I_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_6_d0 <= 
        reuse_reg49_fu_118 when (addr_cmp53_reg_1519(0) = '1') else 
        delay_line_I_5_q1;

    delay_line_I_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_6_we0 <= ap_const_logic_1;
        else 
            delay_line_I_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_7_address0 <= delay_line_I_7_addr_reg_1464;
    delay_line_I_7_address1 <= zext_ln81_fu_658_p1(5 - 1 downto 0);

    delay_line_I_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_7_ce0 <= ap_const_logic_1;
        else 
            delay_line_I_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_I_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_I_7_ce1 <= ap_const_logic_1;
        else 
            delay_line_I_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_I_7_d0 <= 
        reuse_reg61_fu_102 when (addr_cmp65_reg_1497(0) = '1') else 
        delay_line_I_6_q1;

    delay_line_I_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_I_7_we0 <= ap_const_logic_1;
        else 
            delay_line_I_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_0_address0 <= zext_ln81_1_fu_1029_p1(5 - 1 downto 0);
    delay_line_Q_0_address1 <= zext_ln81_8_fu_1008_p1(5 - 1 downto 0);

    delay_line_Q_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_0_ce0 <= ap_const_logic_1;
        else 
            delay_line_Q_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_Q_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_Q_0_ce1 <= ap_const_logic_1;
        else 
            delay_line_Q_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_0_d0 <= 
        reuse_reg67_fu_94 when (addr_cmp71_reg_1486(0) = '1') else 
        delay_line_Q_7_q1;

    delay_line_Q_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_0_we0 <= ap_const_logic_1;
        else 
            delay_line_Q_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_1_address0 <= delay_line_Q_1_addr_reg_1612;
    delay_line_Q_1_address1 <= zext_ln81_7_fu_958_p1(5 - 1 downto 0);

    delay_line_Q_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_1_ce0 <= ap_const_logic_1;
        else 
            delay_line_Q_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_Q_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_Q_1_ce1 <= ap_const_logic_1;
        else 
            delay_line_Q_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_1_d0 <= delay_line_Q_0_q1;

    delay_line_Q_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_1_we0 <= ap_const_logic_1;
        else 
            delay_line_Q_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_2_address0 <= delay_line_Q_2_addr_reg_1590;
    delay_line_Q_2_address1 <= zext_ln81_6_fu_908_p1(5 - 1 downto 0);

    delay_line_Q_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_2_ce0 <= ap_const_logic_1;
        else 
            delay_line_Q_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_Q_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_Q_2_ce1 <= ap_const_logic_1;
        else 
            delay_line_Q_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_2_d0 <= 
        reuse_reg_fu_190 when (addr_cmp_reg_1618(0) = '1') else 
        delay_line_Q_1_q1;

    delay_line_Q_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_2_we0 <= ap_const_logic_1;
        else 
            delay_line_Q_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_3_address0 <= delay_line_Q_3_addr_reg_1568;
    delay_line_Q_3_address1 <= zext_ln81_5_fu_858_p1(5 - 1 downto 0);

    delay_line_Q_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_3_ce0 <= ap_const_logic_1;
        else 
            delay_line_Q_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_Q_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_Q_3_ce1 <= ap_const_logic_1;
        else 
            delay_line_Q_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_3_d0 <= 
        reuse_reg7_fu_174 when (addr_cmp11_reg_1596(0) = '1') else 
        delay_line_Q_2_q1;

    delay_line_Q_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_3_we0 <= ap_const_logic_1;
        else 
            delay_line_Q_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_4_address0 <= delay_line_Q_4_addr_reg_1546;
    delay_line_Q_4_address1 <= zext_ln81_4_fu_808_p1(5 - 1 downto 0);

    delay_line_Q_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_4_ce0 <= ap_const_logic_1;
        else 
            delay_line_Q_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_Q_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_Q_4_ce1 <= ap_const_logic_1;
        else 
            delay_line_Q_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_4_d0 <= 
        reuse_reg19_fu_158 when (addr_cmp23_reg_1574(0) = '1') else 
        delay_line_Q_3_q1;

    delay_line_Q_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_4_we0 <= ap_const_logic_1;
        else 
            delay_line_Q_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_5_address0 <= delay_line_Q_5_addr_reg_1524;
    delay_line_Q_5_address1 <= zext_ln81_3_fu_758_p1(5 - 1 downto 0);

    delay_line_Q_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_5_ce0 <= ap_const_logic_1;
        else 
            delay_line_Q_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_Q_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_Q_5_ce1 <= ap_const_logic_1;
        else 
            delay_line_Q_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_5_d0 <= 
        reuse_reg31_fu_142 when (addr_cmp35_reg_1552(0) = '1') else 
        delay_line_Q_4_q1;

    delay_line_Q_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_5_we0 <= ap_const_logic_1;
        else 
            delay_line_Q_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_6_address0 <= delay_line_Q_6_addr_reg_1502;
    delay_line_Q_6_address1 <= zext_ln81_2_fu_708_p1(5 - 1 downto 0);

    delay_line_Q_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_6_ce0 <= ap_const_logic_1;
        else 
            delay_line_Q_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_Q_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_Q_6_ce1 <= ap_const_logic_1;
        else 
            delay_line_Q_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_6_d0 <= 
        reuse_reg43_fu_126 when (addr_cmp47_reg_1530(0) = '1') else 
        delay_line_Q_5_q1;

    delay_line_Q_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_6_we0 <= ap_const_logic_1;
        else 
            delay_line_Q_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_7_address0 <= delay_line_Q_7_addr_reg_1480;
    delay_line_Q_7_address1 <= zext_ln81_fu_658_p1(5 - 1 downto 0);

    delay_line_Q_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_7_ce0 <= ap_const_logic_1;
        else 
            delay_line_Q_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_line_Q_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_line_Q_7_ce1 <= ap_const_logic_1;
        else 
            delay_line_Q_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_line_Q_7_d0 <= 
        reuse_reg55_fu_110 when (addr_cmp59_reg_1508(0) = '1') else 
        delay_line_Q_6_q1;

    delay_line_Q_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            delay_line_Q_7_we0 <= ap_const_logic_1;
        else 
            delay_line_Q_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln79_fu_636_p2 <= "1" when (i_1_fu_194 = ap_const_lv8_0) else "0";
    lshr_ln1_fu_648_p4 <= add_ln81_fu_642_p2(7 downto 3);
    lshr_ln81_2_fu_698_p4 <= add_ln81_1_fu_692_p2(7 downto 3);
    lshr_ln81_3_fu_748_p4 <= add_ln81_2_fu_742_p2(7 downto 3);
    lshr_ln81_4_fu_798_p4 <= add_ln81_3_fu_792_p2(7 downto 3);
    lshr_ln81_5_fu_848_p4 <= add_ln81_4_fu_842_p2(7 downto 3);
    lshr_ln81_6_fu_898_p4 <= add_ln81_5_fu_892_p2(7 downto 3);
    lshr_ln81_7_fu_948_p4 <= add_ln81_6_fu_942_p2(7 downto 3);
    lshr_ln81_8_fu_998_p4 <= add_ln81_7_fu_992_p2(7 downto 3);
    reuse_select12_fu_1203_p3 <= 
        reuse_reg7_fu_174 when (addr_cmp11_reg_1596(0) = '1') else 
        delay_line_Q_2_q1;
    reuse_select18_fu_1187_p3 <= 
        reuse_reg13_fu_166 when (addr_cmp17_reg_1585(0) = '1') else 
        delay_line_I_2_q1;
    reuse_select24_fu_1171_p3 <= 
        reuse_reg19_fu_158 when (addr_cmp23_reg_1574(0) = '1') else 
        delay_line_Q_3_q1;
    reuse_select30_fu_1155_p3 <= 
        reuse_reg25_fu_150 when (addr_cmp29_reg_1563(0) = '1') else 
        delay_line_I_3_q1;
    reuse_select36_fu_1139_p3 <= 
        reuse_reg31_fu_142 when (addr_cmp35_reg_1552(0) = '1') else 
        delay_line_Q_4_q1;
    reuse_select42_fu_1123_p3 <= 
        reuse_reg37_fu_134 when (addr_cmp41_reg_1541(0) = '1') else 
        delay_line_I_4_q1;
    reuse_select48_fu_1107_p3 <= 
        reuse_reg43_fu_126 when (addr_cmp47_reg_1530(0) = '1') else 
        delay_line_Q_5_q1;
    reuse_select54_fu_1091_p3 <= 
        reuse_reg49_fu_118 when (addr_cmp53_reg_1519(0) = '1') else 
        delay_line_I_5_q1;
    reuse_select60_fu_1075_p3 <= 
        reuse_reg55_fu_110 when (addr_cmp59_reg_1508(0) = '1') else 
        delay_line_Q_6_q1;
    reuse_select66_fu_1059_p3 <= 
        reuse_reg61_fu_102 when (addr_cmp65_reg_1497(0) = '1') else 
        delay_line_I_6_q1;
    reuse_select6_fu_1219_p3 <= 
        reuse_reg1_fu_182 when (addr_cmp5_reg_1607(0) = '1') else 
        delay_line_I_1_q1;
    reuse_select_fu_1235_p3 <= 
        reuse_reg_fu_190 when (addr_cmp_reg_1618(0) = '1') else 
        delay_line_Q_1_q1;
    zext_ln81_1_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln81_1_reg_1470),64));
    zext_ln81_2_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln81_2_fu_698_p4),64));
    zext_ln81_3_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln81_3_fu_748_p4),64));
    zext_ln81_4_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln81_4_fu_798_p4),64));
    zext_ln81_5_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln81_5_fu_848_p4),64));
    zext_ln81_6_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln81_6_fu_898_p4),64));
    zext_ln81_7_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln81_7_fu_948_p4),64));
    zext_ln81_8_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln81_8_fu_998_p4),64));
    zext_ln81_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_fu_648_p4),64));
end behav;
