// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_181_14 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_2_I_address0,
        arr_2_I_ce0,
        arr_2_I_q0,
        arr_2_I_16_address0,
        arr_2_I_16_ce0,
        arr_2_I_16_q0,
        arr_2_I_1_address0,
        arr_2_I_1_ce0,
        arr_2_I_1_q0,
        arr_2_I_17_address0,
        arr_2_I_17_ce0,
        arr_2_I_17_q0,
        arr_3_I_address0,
        arr_3_I_ce0,
        arr_3_I_we0,
        arr_3_I_d0,
        arr_2_Q_address0,
        arr_2_Q_ce0,
        arr_2_Q_q0,
        arr_2_Q_16_address0,
        arr_2_Q_16_ce0,
        arr_2_Q_16_q0,
        arr_2_Q_1_address0,
        arr_2_Q_1_ce0,
        arr_2_Q_1_q0,
        arr_2_Q_17_address0,
        arr_2_Q_17_ce0,
        arr_2_Q_17_q0,
        arr_3_Q_address0,
        arr_3_Q_ce0,
        arr_3_Q_we0,
        arr_3_Q_d0,
        arr_2_I_2_address0,
        arr_2_I_2_ce0,
        arr_2_I_2_q0,
        arr_2_I_18_address0,
        arr_2_I_18_ce0,
        arr_2_I_18_q0,
        arr_2_I_3_address0,
        arr_2_I_3_ce0,
        arr_2_I_3_q0,
        arr_2_I_19_address0,
        arr_2_I_19_ce0,
        arr_2_I_19_q0,
        arr_3_I_1_address0,
        arr_3_I_1_ce0,
        arr_3_I_1_we0,
        arr_3_I_1_d0,
        arr_2_Q_2_address0,
        arr_2_Q_2_ce0,
        arr_2_Q_2_q0,
        arr_2_Q_18_address0,
        arr_2_Q_18_ce0,
        arr_2_Q_18_q0,
        arr_2_Q_3_address0,
        arr_2_Q_3_ce0,
        arr_2_Q_3_q0,
        arr_2_Q_19_address0,
        arr_2_Q_19_ce0,
        arr_2_Q_19_q0,
        arr_3_Q_1_address0,
        arr_3_Q_1_ce0,
        arr_3_Q_1_we0,
        arr_3_Q_1_d0,
        arr_2_I_4_address0,
        arr_2_I_4_ce0,
        arr_2_I_4_q0,
        arr_2_I_20_address0,
        arr_2_I_20_ce0,
        arr_2_I_20_q0,
        arr_2_I_5_address0,
        arr_2_I_5_ce0,
        arr_2_I_5_q0,
        arr_2_I_21_address0,
        arr_2_I_21_ce0,
        arr_2_I_21_q0,
        arr_3_I_2_address0,
        arr_3_I_2_ce0,
        arr_3_I_2_we0,
        arr_3_I_2_d0,
        arr_2_Q_4_address0,
        arr_2_Q_4_ce0,
        arr_2_Q_4_q0,
        arr_2_Q_20_address0,
        arr_2_Q_20_ce0,
        arr_2_Q_20_q0,
        arr_2_Q_5_address0,
        arr_2_Q_5_ce0,
        arr_2_Q_5_q0,
        arr_2_Q_21_address0,
        arr_2_Q_21_ce0,
        arr_2_Q_21_q0,
        arr_3_Q_2_address0,
        arr_3_Q_2_ce0,
        arr_3_Q_2_we0,
        arr_3_Q_2_d0,
        arr_2_I_6_address0,
        arr_2_I_6_ce0,
        arr_2_I_6_q0,
        arr_2_I_22_address0,
        arr_2_I_22_ce0,
        arr_2_I_22_q0,
        arr_2_I_7_address0,
        arr_2_I_7_ce0,
        arr_2_I_7_q0,
        arr_2_I_23_address0,
        arr_2_I_23_ce0,
        arr_2_I_23_q0,
        arr_3_I_3_address0,
        arr_3_I_3_ce0,
        arr_3_I_3_we0,
        arr_3_I_3_d0,
        arr_2_Q_6_address0,
        arr_2_Q_6_ce0,
        arr_2_Q_6_q0,
        arr_2_Q_22_address0,
        arr_2_Q_22_ce0,
        arr_2_Q_22_q0,
        arr_2_Q_7_address0,
        arr_2_Q_7_ce0,
        arr_2_Q_7_q0,
        arr_2_Q_23_address0,
        arr_2_Q_23_ce0,
        arr_2_Q_23_q0,
        arr_3_Q_3_address0,
        arr_3_Q_3_ce0,
        arr_3_Q_3_we0,
        arr_3_Q_3_d0,
        arr_2_I_8_address0,
        arr_2_I_8_ce0,
        arr_2_I_8_q0,
        arr_2_I_24_address0,
        arr_2_I_24_ce0,
        arr_2_I_24_q0,
        arr_2_I_9_address0,
        arr_2_I_9_ce0,
        arr_2_I_9_q0,
        arr_2_I_25_address0,
        arr_2_I_25_ce0,
        arr_2_I_25_q0,
        arr_3_I_4_address0,
        arr_3_I_4_ce0,
        arr_3_I_4_we0,
        arr_3_I_4_d0,
        arr_2_Q_8_address0,
        arr_2_Q_8_ce0,
        arr_2_Q_8_q0,
        arr_2_Q_24_address0,
        arr_2_Q_24_ce0,
        arr_2_Q_24_q0,
        arr_2_Q_9_address0,
        arr_2_Q_9_ce0,
        arr_2_Q_9_q0,
        arr_2_Q_25_address0,
        arr_2_Q_25_ce0,
        arr_2_Q_25_q0,
        arr_3_Q_4_address0,
        arr_3_Q_4_ce0,
        arr_3_Q_4_we0,
        arr_3_Q_4_d0,
        arr_2_I_10_address0,
        arr_2_I_10_ce0,
        arr_2_I_10_q0,
        arr_2_I_26_address0,
        arr_2_I_26_ce0,
        arr_2_I_26_q0,
        arr_2_I_11_address0,
        arr_2_I_11_ce0,
        arr_2_I_11_q0,
        arr_2_I_27_address0,
        arr_2_I_27_ce0,
        arr_2_I_27_q0,
        arr_3_I_5_address0,
        arr_3_I_5_ce0,
        arr_3_I_5_we0,
        arr_3_I_5_d0,
        arr_2_Q_10_address0,
        arr_2_Q_10_ce0,
        arr_2_Q_10_q0,
        arr_2_Q_26_address0,
        arr_2_Q_26_ce0,
        arr_2_Q_26_q0,
        arr_2_Q_11_address0,
        arr_2_Q_11_ce0,
        arr_2_Q_11_q0,
        arr_2_Q_27_address0,
        arr_2_Q_27_ce0,
        arr_2_Q_27_q0,
        arr_3_Q_5_address0,
        arr_3_Q_5_ce0,
        arr_3_Q_5_we0,
        arr_3_Q_5_d0,
        arr_2_I_12_address0,
        arr_2_I_12_ce0,
        arr_2_I_12_q0,
        arr_2_I_28_address0,
        arr_2_I_28_ce0,
        arr_2_I_28_q0,
        arr_2_I_13_address0,
        arr_2_I_13_ce0,
        arr_2_I_13_q0,
        arr_2_I_29_address0,
        arr_2_I_29_ce0,
        arr_2_I_29_q0,
        arr_3_I_6_address0,
        arr_3_I_6_ce0,
        arr_3_I_6_we0,
        arr_3_I_6_d0,
        arr_2_Q_12_address0,
        arr_2_Q_12_ce0,
        arr_2_Q_12_q0,
        arr_2_Q_28_address0,
        arr_2_Q_28_ce0,
        arr_2_Q_28_q0,
        arr_2_Q_13_address0,
        arr_2_Q_13_ce0,
        arr_2_Q_13_q0,
        arr_2_Q_29_address0,
        arr_2_Q_29_ce0,
        arr_2_Q_29_q0,
        arr_3_Q_6_address0,
        arr_3_Q_6_ce0,
        arr_3_Q_6_we0,
        arr_3_Q_6_d0,
        arr_2_I_14_address0,
        arr_2_I_14_ce0,
        arr_2_I_14_q0,
        arr_2_I_30_address0,
        arr_2_I_30_ce0,
        arr_2_I_30_q0,
        arr_2_I_15_address0,
        arr_2_I_15_ce0,
        arr_2_I_15_q0,
        arr_2_I_31_address0,
        arr_2_I_31_ce0,
        arr_2_I_31_q0,
        arr_3_I_7_address0,
        arr_3_I_7_ce0,
        arr_3_I_7_we0,
        arr_3_I_7_d0,
        arr_2_Q_14_address0,
        arr_2_Q_14_ce0,
        arr_2_Q_14_q0,
        arr_2_Q_30_address0,
        arr_2_Q_30_ce0,
        arr_2_Q_30_q0,
        arr_2_Q_15_address0,
        arr_2_Q_15_ce0,
        arr_2_Q_15_q0,
        arr_2_Q_31_address0,
        arr_2_Q_31_ce0,
        arr_2_Q_31_q0,
        arr_3_Q_7_address0,
        arr_3_Q_7_ce0,
        arr_3_Q_7_we0,
        arr_3_Q_7_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] arr_2_I_address0;
output   arr_2_I_ce0;
input  [24:0] arr_2_I_q0;
output  [4:0] arr_2_I_16_address0;
output   arr_2_I_16_ce0;
input  [24:0] arr_2_I_16_q0;
output  [4:0] arr_2_I_1_address0;
output   arr_2_I_1_ce0;
input  [24:0] arr_2_I_1_q0;
output  [4:0] arr_2_I_17_address0;
output   arr_2_I_17_ce0;
input  [24:0] arr_2_I_17_q0;
output  [5:0] arr_3_I_address0;
output   arr_3_I_ce0;
output   arr_3_I_we0;
output  [25:0] arr_3_I_d0;
output  [4:0] arr_2_Q_address0;
output   arr_2_Q_ce0;
input  [24:0] arr_2_Q_q0;
output  [4:0] arr_2_Q_16_address0;
output   arr_2_Q_16_ce0;
input  [24:0] arr_2_Q_16_q0;
output  [4:0] arr_2_Q_1_address0;
output   arr_2_Q_1_ce0;
input  [24:0] arr_2_Q_1_q0;
output  [4:0] arr_2_Q_17_address0;
output   arr_2_Q_17_ce0;
input  [24:0] arr_2_Q_17_q0;
output  [5:0] arr_3_Q_address0;
output   arr_3_Q_ce0;
output   arr_3_Q_we0;
output  [25:0] arr_3_Q_d0;
output  [4:0] arr_2_I_2_address0;
output   arr_2_I_2_ce0;
input  [24:0] arr_2_I_2_q0;
output  [4:0] arr_2_I_18_address0;
output   arr_2_I_18_ce0;
input  [24:0] arr_2_I_18_q0;
output  [4:0] arr_2_I_3_address0;
output   arr_2_I_3_ce0;
input  [24:0] arr_2_I_3_q0;
output  [4:0] arr_2_I_19_address0;
output   arr_2_I_19_ce0;
input  [24:0] arr_2_I_19_q0;
output  [5:0] arr_3_I_1_address0;
output   arr_3_I_1_ce0;
output   arr_3_I_1_we0;
output  [25:0] arr_3_I_1_d0;
output  [4:0] arr_2_Q_2_address0;
output   arr_2_Q_2_ce0;
input  [24:0] arr_2_Q_2_q0;
output  [4:0] arr_2_Q_18_address0;
output   arr_2_Q_18_ce0;
input  [24:0] arr_2_Q_18_q0;
output  [4:0] arr_2_Q_3_address0;
output   arr_2_Q_3_ce0;
input  [24:0] arr_2_Q_3_q0;
output  [4:0] arr_2_Q_19_address0;
output   arr_2_Q_19_ce0;
input  [24:0] arr_2_Q_19_q0;
output  [5:0] arr_3_Q_1_address0;
output   arr_3_Q_1_ce0;
output   arr_3_Q_1_we0;
output  [25:0] arr_3_Q_1_d0;
output  [4:0] arr_2_I_4_address0;
output   arr_2_I_4_ce0;
input  [24:0] arr_2_I_4_q0;
output  [4:0] arr_2_I_20_address0;
output   arr_2_I_20_ce0;
input  [24:0] arr_2_I_20_q0;
output  [4:0] arr_2_I_5_address0;
output   arr_2_I_5_ce0;
input  [24:0] arr_2_I_5_q0;
output  [4:0] arr_2_I_21_address0;
output   arr_2_I_21_ce0;
input  [24:0] arr_2_I_21_q0;
output  [5:0] arr_3_I_2_address0;
output   arr_3_I_2_ce0;
output   arr_3_I_2_we0;
output  [25:0] arr_3_I_2_d0;
output  [4:0] arr_2_Q_4_address0;
output   arr_2_Q_4_ce0;
input  [24:0] arr_2_Q_4_q0;
output  [4:0] arr_2_Q_20_address0;
output   arr_2_Q_20_ce0;
input  [24:0] arr_2_Q_20_q0;
output  [4:0] arr_2_Q_5_address0;
output   arr_2_Q_5_ce0;
input  [24:0] arr_2_Q_5_q0;
output  [4:0] arr_2_Q_21_address0;
output   arr_2_Q_21_ce0;
input  [24:0] arr_2_Q_21_q0;
output  [5:0] arr_3_Q_2_address0;
output   arr_3_Q_2_ce0;
output   arr_3_Q_2_we0;
output  [25:0] arr_3_Q_2_d0;
output  [4:0] arr_2_I_6_address0;
output   arr_2_I_6_ce0;
input  [24:0] arr_2_I_6_q0;
output  [4:0] arr_2_I_22_address0;
output   arr_2_I_22_ce0;
input  [24:0] arr_2_I_22_q0;
output  [4:0] arr_2_I_7_address0;
output   arr_2_I_7_ce0;
input  [24:0] arr_2_I_7_q0;
output  [4:0] arr_2_I_23_address0;
output   arr_2_I_23_ce0;
input  [24:0] arr_2_I_23_q0;
output  [5:0] arr_3_I_3_address0;
output   arr_3_I_3_ce0;
output   arr_3_I_3_we0;
output  [25:0] arr_3_I_3_d0;
output  [4:0] arr_2_Q_6_address0;
output   arr_2_Q_6_ce0;
input  [24:0] arr_2_Q_6_q0;
output  [4:0] arr_2_Q_22_address0;
output   arr_2_Q_22_ce0;
input  [24:0] arr_2_Q_22_q0;
output  [4:0] arr_2_Q_7_address0;
output   arr_2_Q_7_ce0;
input  [24:0] arr_2_Q_7_q0;
output  [4:0] arr_2_Q_23_address0;
output   arr_2_Q_23_ce0;
input  [24:0] arr_2_Q_23_q0;
output  [5:0] arr_3_Q_3_address0;
output   arr_3_Q_3_ce0;
output   arr_3_Q_3_we0;
output  [25:0] arr_3_Q_3_d0;
output  [4:0] arr_2_I_8_address0;
output   arr_2_I_8_ce0;
input  [24:0] arr_2_I_8_q0;
output  [4:0] arr_2_I_24_address0;
output   arr_2_I_24_ce0;
input  [24:0] arr_2_I_24_q0;
output  [4:0] arr_2_I_9_address0;
output   arr_2_I_9_ce0;
input  [24:0] arr_2_I_9_q0;
output  [4:0] arr_2_I_25_address0;
output   arr_2_I_25_ce0;
input  [24:0] arr_2_I_25_q0;
output  [5:0] arr_3_I_4_address0;
output   arr_3_I_4_ce0;
output   arr_3_I_4_we0;
output  [25:0] arr_3_I_4_d0;
output  [4:0] arr_2_Q_8_address0;
output   arr_2_Q_8_ce0;
input  [24:0] arr_2_Q_8_q0;
output  [4:0] arr_2_Q_24_address0;
output   arr_2_Q_24_ce0;
input  [24:0] arr_2_Q_24_q0;
output  [4:0] arr_2_Q_9_address0;
output   arr_2_Q_9_ce0;
input  [24:0] arr_2_Q_9_q0;
output  [4:0] arr_2_Q_25_address0;
output   arr_2_Q_25_ce0;
input  [24:0] arr_2_Q_25_q0;
output  [5:0] arr_3_Q_4_address0;
output   arr_3_Q_4_ce0;
output   arr_3_Q_4_we0;
output  [25:0] arr_3_Q_4_d0;
output  [4:0] arr_2_I_10_address0;
output   arr_2_I_10_ce0;
input  [24:0] arr_2_I_10_q0;
output  [4:0] arr_2_I_26_address0;
output   arr_2_I_26_ce0;
input  [24:0] arr_2_I_26_q0;
output  [4:0] arr_2_I_11_address0;
output   arr_2_I_11_ce0;
input  [24:0] arr_2_I_11_q0;
output  [4:0] arr_2_I_27_address0;
output   arr_2_I_27_ce0;
input  [24:0] arr_2_I_27_q0;
output  [5:0] arr_3_I_5_address0;
output   arr_3_I_5_ce0;
output   arr_3_I_5_we0;
output  [25:0] arr_3_I_5_d0;
output  [4:0] arr_2_Q_10_address0;
output   arr_2_Q_10_ce0;
input  [24:0] arr_2_Q_10_q0;
output  [4:0] arr_2_Q_26_address0;
output   arr_2_Q_26_ce0;
input  [24:0] arr_2_Q_26_q0;
output  [4:0] arr_2_Q_11_address0;
output   arr_2_Q_11_ce0;
input  [24:0] arr_2_Q_11_q0;
output  [4:0] arr_2_Q_27_address0;
output   arr_2_Q_27_ce0;
input  [24:0] arr_2_Q_27_q0;
output  [5:0] arr_3_Q_5_address0;
output   arr_3_Q_5_ce0;
output   arr_3_Q_5_we0;
output  [25:0] arr_3_Q_5_d0;
output  [4:0] arr_2_I_12_address0;
output   arr_2_I_12_ce0;
input  [24:0] arr_2_I_12_q0;
output  [4:0] arr_2_I_28_address0;
output   arr_2_I_28_ce0;
input  [24:0] arr_2_I_28_q0;
output  [4:0] arr_2_I_13_address0;
output   arr_2_I_13_ce0;
input  [24:0] arr_2_I_13_q0;
output  [4:0] arr_2_I_29_address0;
output   arr_2_I_29_ce0;
input  [24:0] arr_2_I_29_q0;
output  [5:0] arr_3_I_6_address0;
output   arr_3_I_6_ce0;
output   arr_3_I_6_we0;
output  [25:0] arr_3_I_6_d0;
output  [4:0] arr_2_Q_12_address0;
output   arr_2_Q_12_ce0;
input  [24:0] arr_2_Q_12_q0;
output  [4:0] arr_2_Q_28_address0;
output   arr_2_Q_28_ce0;
input  [24:0] arr_2_Q_28_q0;
output  [4:0] arr_2_Q_13_address0;
output   arr_2_Q_13_ce0;
input  [24:0] arr_2_Q_13_q0;
output  [4:0] arr_2_Q_29_address0;
output   arr_2_Q_29_ce0;
input  [24:0] arr_2_Q_29_q0;
output  [5:0] arr_3_Q_6_address0;
output   arr_3_Q_6_ce0;
output   arr_3_Q_6_we0;
output  [25:0] arr_3_Q_6_d0;
output  [4:0] arr_2_I_14_address0;
output   arr_2_I_14_ce0;
input  [24:0] arr_2_I_14_q0;
output  [4:0] arr_2_I_30_address0;
output   arr_2_I_30_ce0;
input  [24:0] arr_2_I_30_q0;
output  [4:0] arr_2_I_15_address0;
output   arr_2_I_15_ce0;
input  [24:0] arr_2_I_15_q0;
output  [4:0] arr_2_I_31_address0;
output   arr_2_I_31_ce0;
input  [24:0] arr_2_I_31_q0;
output  [5:0] arr_3_I_7_address0;
output   arr_3_I_7_ce0;
output   arr_3_I_7_we0;
output  [25:0] arr_3_I_7_d0;
output  [4:0] arr_2_Q_14_address0;
output   arr_2_Q_14_ce0;
input  [24:0] arr_2_Q_14_q0;
output  [4:0] arr_2_Q_30_address0;
output   arr_2_Q_30_ce0;
input  [24:0] arr_2_Q_30_q0;
output  [4:0] arr_2_Q_15_address0;
output   arr_2_Q_15_ce0;
input  [24:0] arr_2_Q_15_q0;
output  [4:0] arr_2_Q_31_address0;
output   arr_2_Q_31_ce0;
input  [24:0] arr_2_Q_31_q0;
output  [5:0] arr_3_Q_7_address0;
output   arr_3_Q_7_ce0;
output   arr_3_Q_7_we0;
output  [25:0] arr_3_Q_7_d0;

reg ap_idle;
reg arr_2_I_ce0;
reg arr_2_I_16_ce0;
reg arr_2_I_1_ce0;
reg arr_2_I_17_ce0;
reg arr_3_I_ce0;
reg arr_3_I_we0;
reg arr_2_Q_ce0;
reg arr_2_Q_16_ce0;
reg arr_2_Q_1_ce0;
reg arr_2_Q_17_ce0;
reg arr_3_Q_ce0;
reg arr_3_Q_we0;
reg arr_2_I_2_ce0;
reg arr_2_I_18_ce0;
reg arr_2_I_3_ce0;
reg arr_2_I_19_ce0;
reg arr_3_I_1_ce0;
reg arr_3_I_1_we0;
reg arr_2_Q_2_ce0;
reg arr_2_Q_18_ce0;
reg arr_2_Q_3_ce0;
reg arr_2_Q_19_ce0;
reg arr_3_Q_1_ce0;
reg arr_3_Q_1_we0;
reg arr_2_I_4_ce0;
reg arr_2_I_20_ce0;
reg arr_2_I_5_ce0;
reg arr_2_I_21_ce0;
reg arr_3_I_2_ce0;
reg arr_3_I_2_we0;
reg arr_2_Q_4_ce0;
reg arr_2_Q_20_ce0;
reg arr_2_Q_5_ce0;
reg arr_2_Q_21_ce0;
reg arr_3_Q_2_ce0;
reg arr_3_Q_2_we0;
reg arr_2_I_6_ce0;
reg arr_2_I_22_ce0;
reg arr_2_I_7_ce0;
reg arr_2_I_23_ce0;
reg arr_3_I_3_ce0;
reg arr_3_I_3_we0;
reg arr_2_Q_6_ce0;
reg arr_2_Q_22_ce0;
reg arr_2_Q_7_ce0;
reg arr_2_Q_23_ce0;
reg arr_3_Q_3_ce0;
reg arr_3_Q_3_we0;
reg arr_2_I_8_ce0;
reg arr_2_I_24_ce0;
reg arr_2_I_9_ce0;
reg arr_2_I_25_ce0;
reg arr_3_I_4_ce0;
reg arr_3_I_4_we0;
reg arr_2_Q_8_ce0;
reg arr_2_Q_24_ce0;
reg arr_2_Q_9_ce0;
reg arr_2_Q_25_ce0;
reg arr_3_Q_4_ce0;
reg arr_3_Q_4_we0;
reg arr_2_I_10_ce0;
reg arr_2_I_26_ce0;
reg arr_2_I_11_ce0;
reg arr_2_I_27_ce0;
reg arr_3_I_5_ce0;
reg arr_3_I_5_we0;
reg arr_2_Q_10_ce0;
reg arr_2_Q_26_ce0;
reg arr_2_Q_11_ce0;
reg arr_2_Q_27_ce0;
reg arr_3_Q_5_ce0;
reg arr_3_Q_5_we0;
reg arr_2_I_12_ce0;
reg arr_2_I_28_ce0;
reg arr_2_I_13_ce0;
reg arr_2_I_29_ce0;
reg arr_3_I_6_ce0;
reg arr_3_I_6_we0;
reg arr_2_Q_12_ce0;
reg arr_2_Q_28_ce0;
reg arr_2_Q_13_ce0;
reg arr_2_Q_29_ce0;
reg arr_3_Q_6_ce0;
reg arr_3_Q_6_we0;
reg arr_2_I_14_ce0;
reg arr_2_I_30_ce0;
reg arr_2_I_15_ce0;
reg arr_2_I_31_ce0;
reg arr_3_I_7_ce0;
reg arr_3_I_7_we0;
reg arr_2_Q_14_ce0;
reg arr_2_Q_30_ce0;
reg arr_2_Q_15_ce0;
reg arr_2_Q_31_ce0;
reg arr_3_Q_7_ce0;
reg arr_3_Q_7_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln181_fu_1250_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln183_fu_1338_p2;
reg   [0:0] icmp_ln183_reg_1853;
reg   [5:0] lshr_ln2_reg_1899;
reg   [5:0] lshr_ln2_reg_1899_pp0_iter1_reg;
wire   [25:0] add_ln183_fu_1387_p2;
reg   [25:0] add_ln183_reg_2204;
wire   [25:0] add_ln183_1_fu_1415_p2;
reg   [25:0] add_ln183_1_reg_2209;
wire   [25:0] add_ln183_2_fu_1443_p2;
reg   [25:0] add_ln183_2_reg_2214;
wire   [25:0] add_ln183_3_fu_1471_p2;
reg   [25:0] add_ln183_3_reg_2219;
wire   [25:0] add_ln183_4_fu_1499_p2;
reg   [25:0] add_ln183_4_reg_2224;
wire   [25:0] add_ln183_5_fu_1527_p2;
reg   [25:0] add_ln183_5_reg_2229;
wire   [25:0] add_ln183_6_fu_1555_p2;
reg   [25:0] add_ln183_6_reg_2234;
wire   [25:0] add_ln183_7_fu_1583_p2;
reg   [25:0] add_ln183_7_reg_2239;
wire   [25:0] add_ln184_fu_1611_p2;
reg   [25:0] add_ln184_reg_2244;
wire   [25:0] add_ln184_1_fu_1639_p2;
reg   [25:0] add_ln184_1_reg_2249;
wire   [25:0] add_ln184_2_fu_1667_p2;
reg   [25:0] add_ln184_2_reg_2254;
wire   [25:0] add_ln184_3_fu_1695_p2;
reg   [25:0] add_ln184_3_reg_2259;
wire   [25:0] add_ln184_4_fu_1723_p2;
reg   [25:0] add_ln184_4_reg_2264;
wire   [25:0] add_ln184_5_fu_1751_p2;
reg   [25:0] add_ln184_5_reg_2269;
wire   [25:0] add_ln184_6_fu_1779_p2;
reg   [25:0] add_ln184_6_reg_2274;
wire   [25:0] add_ln184_7_fu_1807_p2;
reg   [25:0] add_ln184_7_reg_2279;
wire   [63:0] zext_ln181_fu_1270_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln183_fu_1813_p1;
reg   [9:0] i_fu_198;
wire   [9:0] add_ln181_fu_1354_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_11;
wire   [4:0] lshr_ln_fu_1260_p4;
wire   [4:0] empty_fu_1256_p1;
wire   [24:0] select_ln183_fu_1365_p3;
wire   [24:0] select_ln183_1_fu_1376_p3;
wire  signed [25:0] sext_ln183_1_fu_1383_p1;
wire  signed [25:0] sext_ln183_fu_1372_p1;
wire   [24:0] select_ln183_2_fu_1393_p3;
wire   [24:0] select_ln183_3_fu_1404_p3;
wire  signed [25:0] sext_ln183_3_fu_1411_p1;
wire  signed [25:0] sext_ln183_2_fu_1400_p1;
wire   [24:0] select_ln183_4_fu_1421_p3;
wire   [24:0] select_ln183_5_fu_1432_p3;
wire  signed [25:0] sext_ln183_5_fu_1439_p1;
wire  signed [25:0] sext_ln183_4_fu_1428_p1;
wire   [24:0] select_ln183_6_fu_1449_p3;
wire   [24:0] select_ln183_7_fu_1460_p3;
wire  signed [25:0] sext_ln183_7_fu_1467_p1;
wire  signed [25:0] sext_ln183_6_fu_1456_p1;
wire   [24:0] select_ln183_8_fu_1477_p3;
wire   [24:0] select_ln183_9_fu_1488_p3;
wire  signed [25:0] sext_ln183_9_fu_1495_p1;
wire  signed [25:0] sext_ln183_8_fu_1484_p1;
wire   [24:0] select_ln183_10_fu_1505_p3;
wire   [24:0] select_ln183_11_fu_1516_p3;
wire  signed [25:0] sext_ln183_11_fu_1523_p1;
wire  signed [25:0] sext_ln183_10_fu_1512_p1;
wire   [24:0] select_ln183_12_fu_1533_p3;
wire   [24:0] select_ln183_13_fu_1544_p3;
wire  signed [25:0] sext_ln183_13_fu_1551_p1;
wire  signed [25:0] sext_ln183_12_fu_1540_p1;
wire   [24:0] select_ln183_14_fu_1561_p3;
wire   [24:0] select_ln183_15_fu_1572_p3;
wire  signed [25:0] sext_ln183_15_fu_1579_p1;
wire  signed [25:0] sext_ln183_14_fu_1568_p1;
wire   [24:0] select_ln184_fu_1589_p3;
wire   [24:0] select_ln184_1_fu_1600_p3;
wire  signed [25:0] sext_ln184_1_fu_1607_p1;
wire  signed [25:0] sext_ln184_fu_1596_p1;
wire   [24:0] select_ln184_2_fu_1617_p3;
wire   [24:0] select_ln184_3_fu_1628_p3;
wire  signed [25:0] sext_ln184_3_fu_1635_p1;
wire  signed [25:0] sext_ln184_2_fu_1624_p1;
wire   [24:0] select_ln184_4_fu_1645_p3;
wire   [24:0] select_ln184_5_fu_1656_p3;
wire  signed [25:0] sext_ln184_5_fu_1663_p1;
wire  signed [25:0] sext_ln184_4_fu_1652_p1;
wire   [24:0] select_ln184_6_fu_1673_p3;
wire   [24:0] select_ln184_7_fu_1684_p3;
wire  signed [25:0] sext_ln184_7_fu_1691_p1;
wire  signed [25:0] sext_ln184_6_fu_1680_p1;
wire   [24:0] select_ln184_8_fu_1701_p3;
wire   [24:0] select_ln184_9_fu_1712_p3;
wire  signed [25:0] sext_ln184_9_fu_1719_p1;
wire  signed [25:0] sext_ln184_8_fu_1708_p1;
wire   [24:0] select_ln184_10_fu_1729_p3;
wire   [24:0] select_ln184_11_fu_1740_p3;
wire  signed [25:0] sext_ln184_11_fu_1747_p1;
wire  signed [25:0] sext_ln184_10_fu_1736_p1;
wire   [24:0] select_ln184_12_fu_1757_p3;
wire   [24:0] select_ln184_13_fu_1768_p3;
wire  signed [25:0] sext_ln184_13_fu_1775_p1;
wire  signed [25:0] sext_ln184_12_fu_1764_p1;
wire   [24:0] select_ln184_14_fu_1785_p3;
wire   [24:0] select_ln184_15_fu_1796_p3;
wire  signed [25:0] sext_ln184_15_fu_1803_p1;
wire  signed [25:0] sext_ln184_14_fu_1792_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln181_fu_1250_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_198 <= add_ln181_fu_1354_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_198 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln183_1_reg_2209 <= add_ln183_1_fu_1415_p2;
        add_ln183_2_reg_2214 <= add_ln183_2_fu_1443_p2;
        add_ln183_3_reg_2219 <= add_ln183_3_fu_1471_p2;
        add_ln183_4_reg_2224 <= add_ln183_4_fu_1499_p2;
        add_ln183_5_reg_2229 <= add_ln183_5_fu_1527_p2;
        add_ln183_6_reg_2234 <= add_ln183_6_fu_1555_p2;
        add_ln183_7_reg_2239 <= add_ln183_7_fu_1583_p2;
        add_ln183_reg_2204 <= add_ln183_fu_1387_p2;
        add_ln184_1_reg_2249 <= add_ln184_1_fu_1639_p2;
        add_ln184_2_reg_2254 <= add_ln184_2_fu_1667_p2;
        add_ln184_3_reg_2259 <= add_ln184_3_fu_1695_p2;
        add_ln184_4_reg_2264 <= add_ln184_4_fu_1723_p2;
        add_ln184_5_reg_2269 <= add_ln184_5_fu_1751_p2;
        add_ln184_6_reg_2274 <= add_ln184_6_fu_1779_p2;
        add_ln184_7_reg_2279 <= add_ln184_7_fu_1807_p2;
        add_ln184_reg_2244 <= add_ln184_fu_1611_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        lshr_ln2_reg_1899_pp0_iter1_reg <= lshr_ln2_reg_1899;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln181_fu_1250_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln183_reg_1853 <= icmp_ln183_fu_1338_p2;
        lshr_ln2_reg_1899 <= {{ap_sig_allocacmp_i_11[9:4]}};
    end
end

always @ (*) begin
    if (((icmp_ln181_fu_1250_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_11 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_11 = i_fu_198;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_10_ce0 = 1'b1;
    end else begin
        arr_2_I_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_11_ce0 = 1'b1;
    end else begin
        arr_2_I_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_12_ce0 = 1'b1;
    end else begin
        arr_2_I_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_13_ce0 = 1'b1;
    end else begin
        arr_2_I_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_14_ce0 = 1'b1;
    end else begin
        arr_2_I_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_15_ce0 = 1'b1;
    end else begin
        arr_2_I_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_16_ce0 = 1'b1;
    end else begin
        arr_2_I_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_17_ce0 = 1'b1;
    end else begin
        arr_2_I_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_18_ce0 = 1'b1;
    end else begin
        arr_2_I_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_19_ce0 = 1'b1;
    end else begin
        arr_2_I_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_1_ce0 = 1'b1;
    end else begin
        arr_2_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_20_ce0 = 1'b1;
    end else begin
        arr_2_I_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_21_ce0 = 1'b1;
    end else begin
        arr_2_I_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_22_ce0 = 1'b1;
    end else begin
        arr_2_I_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_23_ce0 = 1'b1;
    end else begin
        arr_2_I_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_24_ce0 = 1'b1;
    end else begin
        arr_2_I_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_25_ce0 = 1'b1;
    end else begin
        arr_2_I_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_26_ce0 = 1'b1;
    end else begin
        arr_2_I_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_27_ce0 = 1'b1;
    end else begin
        arr_2_I_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_28_ce0 = 1'b1;
    end else begin
        arr_2_I_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_29_ce0 = 1'b1;
    end else begin
        arr_2_I_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_2_ce0 = 1'b1;
    end else begin
        arr_2_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_30_ce0 = 1'b1;
    end else begin
        arr_2_I_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_31_ce0 = 1'b1;
    end else begin
        arr_2_I_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_3_ce0 = 1'b1;
    end else begin
        arr_2_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_4_ce0 = 1'b1;
    end else begin
        arr_2_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_5_ce0 = 1'b1;
    end else begin
        arr_2_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_6_ce0 = 1'b1;
    end else begin
        arr_2_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_7_ce0 = 1'b1;
    end else begin
        arr_2_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_8_ce0 = 1'b1;
    end else begin
        arr_2_I_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_9_ce0 = 1'b1;
    end else begin
        arr_2_I_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_ce0 = 1'b1;
    end else begin
        arr_2_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_10_ce0 = 1'b1;
    end else begin
        arr_2_Q_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_11_ce0 = 1'b1;
    end else begin
        arr_2_Q_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_12_ce0 = 1'b1;
    end else begin
        arr_2_Q_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_13_ce0 = 1'b1;
    end else begin
        arr_2_Q_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_14_ce0 = 1'b1;
    end else begin
        arr_2_Q_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_15_ce0 = 1'b1;
    end else begin
        arr_2_Q_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_16_ce0 = 1'b1;
    end else begin
        arr_2_Q_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_17_ce0 = 1'b1;
    end else begin
        arr_2_Q_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_18_ce0 = 1'b1;
    end else begin
        arr_2_Q_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_19_ce0 = 1'b1;
    end else begin
        arr_2_Q_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_1_ce0 = 1'b1;
    end else begin
        arr_2_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_20_ce0 = 1'b1;
    end else begin
        arr_2_Q_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_21_ce0 = 1'b1;
    end else begin
        arr_2_Q_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_22_ce0 = 1'b1;
    end else begin
        arr_2_Q_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_23_ce0 = 1'b1;
    end else begin
        arr_2_Q_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_24_ce0 = 1'b1;
    end else begin
        arr_2_Q_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_25_ce0 = 1'b1;
    end else begin
        arr_2_Q_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_26_ce0 = 1'b1;
    end else begin
        arr_2_Q_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_27_ce0 = 1'b1;
    end else begin
        arr_2_Q_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_28_ce0 = 1'b1;
    end else begin
        arr_2_Q_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_29_ce0 = 1'b1;
    end else begin
        arr_2_Q_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_2_ce0 = 1'b1;
    end else begin
        arr_2_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_30_ce0 = 1'b1;
    end else begin
        arr_2_Q_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_31_ce0 = 1'b1;
    end else begin
        arr_2_Q_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_3_ce0 = 1'b1;
    end else begin
        arr_2_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_4_ce0 = 1'b1;
    end else begin
        arr_2_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_5_ce0 = 1'b1;
    end else begin
        arr_2_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_6_ce0 = 1'b1;
    end else begin
        arr_2_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_7_ce0 = 1'b1;
    end else begin
        arr_2_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_8_ce0 = 1'b1;
    end else begin
        arr_2_Q_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_9_ce0 = 1'b1;
    end else begin
        arr_2_Q_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_ce0 = 1'b1;
    end else begin
        arr_2_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_1_ce0 = 1'b1;
    end else begin
        arr_3_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_1_we0 = 1'b1;
    end else begin
        arr_3_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_2_ce0 = 1'b1;
    end else begin
        arr_3_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_2_we0 = 1'b1;
    end else begin
        arr_3_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_3_ce0 = 1'b1;
    end else begin
        arr_3_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_3_we0 = 1'b1;
    end else begin
        arr_3_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_4_ce0 = 1'b1;
    end else begin
        arr_3_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_4_we0 = 1'b1;
    end else begin
        arr_3_I_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_5_ce0 = 1'b1;
    end else begin
        arr_3_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_5_we0 = 1'b1;
    end else begin
        arr_3_I_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_6_ce0 = 1'b1;
    end else begin
        arr_3_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_6_we0 = 1'b1;
    end else begin
        arr_3_I_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_7_ce0 = 1'b1;
    end else begin
        arr_3_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_7_we0 = 1'b1;
    end else begin
        arr_3_I_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_ce0 = 1'b1;
    end else begin
        arr_3_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_we0 = 1'b1;
    end else begin
        arr_3_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_1_ce0 = 1'b1;
    end else begin
        arr_3_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_1_we0 = 1'b1;
    end else begin
        arr_3_Q_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_2_ce0 = 1'b1;
    end else begin
        arr_3_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_2_we0 = 1'b1;
    end else begin
        arr_3_Q_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_3_ce0 = 1'b1;
    end else begin
        arr_3_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_3_we0 = 1'b1;
    end else begin
        arr_3_Q_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_4_ce0 = 1'b1;
    end else begin
        arr_3_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_4_we0 = 1'b1;
    end else begin
        arr_3_Q_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_5_ce0 = 1'b1;
    end else begin
        arr_3_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_5_we0 = 1'b1;
    end else begin
        arr_3_Q_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_6_ce0 = 1'b1;
    end else begin
        arr_3_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_6_we0 = 1'b1;
    end else begin
        arr_3_Q_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_7_ce0 = 1'b1;
    end else begin
        arr_3_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_7_we0 = 1'b1;
    end else begin
        arr_3_Q_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_ce0 = 1'b1;
    end else begin
        arr_3_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_we0 = 1'b1;
    end else begin
        arr_3_Q_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln181_fu_1354_p2 = (ap_sig_allocacmp_i_11 + 10'd16);

assign add_ln183_1_fu_1415_p2 = ($signed(sext_ln183_3_fu_1411_p1) + $signed(sext_ln183_2_fu_1400_p1));

assign add_ln183_2_fu_1443_p2 = ($signed(sext_ln183_5_fu_1439_p1) + $signed(sext_ln183_4_fu_1428_p1));

assign add_ln183_3_fu_1471_p2 = ($signed(sext_ln183_7_fu_1467_p1) + $signed(sext_ln183_6_fu_1456_p1));

assign add_ln183_4_fu_1499_p2 = ($signed(sext_ln183_9_fu_1495_p1) + $signed(sext_ln183_8_fu_1484_p1));

assign add_ln183_5_fu_1527_p2 = ($signed(sext_ln183_11_fu_1523_p1) + $signed(sext_ln183_10_fu_1512_p1));

assign add_ln183_6_fu_1555_p2 = ($signed(sext_ln183_13_fu_1551_p1) + $signed(sext_ln183_12_fu_1540_p1));

assign add_ln183_7_fu_1583_p2 = ($signed(sext_ln183_15_fu_1579_p1) + $signed(sext_ln183_14_fu_1568_p1));

assign add_ln183_fu_1387_p2 = ($signed(sext_ln183_1_fu_1383_p1) + $signed(sext_ln183_fu_1372_p1));

assign add_ln184_1_fu_1639_p2 = ($signed(sext_ln184_3_fu_1635_p1) + $signed(sext_ln184_2_fu_1624_p1));

assign add_ln184_2_fu_1667_p2 = ($signed(sext_ln184_5_fu_1663_p1) + $signed(sext_ln184_4_fu_1652_p1));

assign add_ln184_3_fu_1695_p2 = ($signed(sext_ln184_7_fu_1691_p1) + $signed(sext_ln184_6_fu_1680_p1));

assign add_ln184_4_fu_1723_p2 = ($signed(sext_ln184_9_fu_1719_p1) + $signed(sext_ln184_8_fu_1708_p1));

assign add_ln184_5_fu_1751_p2 = ($signed(sext_ln184_11_fu_1747_p1) + $signed(sext_ln184_10_fu_1736_p1));

assign add_ln184_6_fu_1779_p2 = ($signed(sext_ln184_13_fu_1775_p1) + $signed(sext_ln184_12_fu_1764_p1));

assign add_ln184_7_fu_1807_p2 = ($signed(sext_ln184_15_fu_1803_p1) + $signed(sext_ln184_14_fu_1792_p1));

assign add_ln184_fu_1611_p2 = ($signed(sext_ln184_1_fu_1607_p1) + $signed(sext_ln184_fu_1596_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign arr_2_I_10_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_11_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_12_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_13_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_14_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_15_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_16_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_17_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_18_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_19_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_1_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_20_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_21_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_22_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_23_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_24_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_25_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_26_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_27_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_28_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_29_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_2_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_30_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_31_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_3_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_4_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_5_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_6_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_7_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_8_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_9_address0 = zext_ln181_fu_1270_p1;

assign arr_2_I_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_10_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_11_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_12_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_13_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_14_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_15_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_16_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_17_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_18_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_19_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_1_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_20_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_21_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_22_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_23_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_24_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_25_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_26_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_27_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_28_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_29_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_2_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_30_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_31_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_3_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_4_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_5_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_6_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_7_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_8_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_9_address0 = zext_ln181_fu_1270_p1;

assign arr_2_Q_address0 = zext_ln181_fu_1270_p1;

assign arr_3_I_1_address0 = zext_ln183_fu_1813_p1;

assign arr_3_I_1_d0 = add_ln183_1_reg_2209;

assign arr_3_I_2_address0 = zext_ln183_fu_1813_p1;

assign arr_3_I_2_d0 = add_ln183_2_reg_2214;

assign arr_3_I_3_address0 = zext_ln183_fu_1813_p1;

assign arr_3_I_3_d0 = add_ln183_3_reg_2219;

assign arr_3_I_4_address0 = zext_ln183_fu_1813_p1;

assign arr_3_I_4_d0 = add_ln183_4_reg_2224;

assign arr_3_I_5_address0 = zext_ln183_fu_1813_p1;

assign arr_3_I_5_d0 = add_ln183_5_reg_2229;

assign arr_3_I_6_address0 = zext_ln183_fu_1813_p1;

assign arr_3_I_6_d0 = add_ln183_6_reg_2234;

assign arr_3_I_7_address0 = zext_ln183_fu_1813_p1;

assign arr_3_I_7_d0 = add_ln183_7_reg_2239;

assign arr_3_I_address0 = zext_ln183_fu_1813_p1;

assign arr_3_I_d0 = add_ln183_reg_2204;

assign arr_3_Q_1_address0 = zext_ln183_fu_1813_p1;

assign arr_3_Q_1_d0 = add_ln184_1_reg_2249;

assign arr_3_Q_2_address0 = zext_ln183_fu_1813_p1;

assign arr_3_Q_2_d0 = add_ln184_2_reg_2254;

assign arr_3_Q_3_address0 = zext_ln183_fu_1813_p1;

assign arr_3_Q_3_d0 = add_ln184_3_reg_2259;

assign arr_3_Q_4_address0 = zext_ln183_fu_1813_p1;

assign arr_3_Q_4_d0 = add_ln184_4_reg_2264;

assign arr_3_Q_5_address0 = zext_ln183_fu_1813_p1;

assign arr_3_Q_5_d0 = add_ln184_5_reg_2269;

assign arr_3_Q_6_address0 = zext_ln183_fu_1813_p1;

assign arr_3_Q_6_d0 = add_ln184_6_reg_2274;

assign arr_3_Q_7_address0 = zext_ln183_fu_1813_p1;

assign arr_3_Q_7_d0 = add_ln184_7_reg_2279;

assign arr_3_Q_address0 = zext_ln183_fu_1813_p1;

assign arr_3_Q_d0 = add_ln184_reg_2244;

assign empty_fu_1256_p1 = ap_sig_allocacmp_i_11[4:0];

assign icmp_ln181_fu_1250_p2 = ((ap_sig_allocacmp_i_11 < 10'd560) ? 1'b1 : 1'b0);

assign icmp_ln183_fu_1338_p2 = ((empty_fu_1256_p1 != 5'd0) ? 1'b1 : 1'b0);

assign lshr_ln_fu_1260_p4 = {{ap_sig_allocacmp_i_11[9:5]}};

assign select_ln183_10_fu_1505_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_26_q0 : arr_2_I_10_q0);

assign select_ln183_11_fu_1516_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_27_q0 : arr_2_I_11_q0);

assign select_ln183_12_fu_1533_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_28_q0 : arr_2_I_12_q0);

assign select_ln183_13_fu_1544_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_29_q0 : arr_2_I_13_q0);

assign select_ln183_14_fu_1561_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_30_q0 : arr_2_I_14_q0);

assign select_ln183_15_fu_1572_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_31_q0 : arr_2_I_15_q0);

assign select_ln183_1_fu_1376_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_17_q0 : arr_2_I_1_q0);

assign select_ln183_2_fu_1393_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_18_q0 : arr_2_I_2_q0);

assign select_ln183_3_fu_1404_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_19_q0 : arr_2_I_3_q0);

assign select_ln183_4_fu_1421_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_20_q0 : arr_2_I_4_q0);

assign select_ln183_5_fu_1432_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_21_q0 : arr_2_I_5_q0);

assign select_ln183_6_fu_1449_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_22_q0 : arr_2_I_6_q0);

assign select_ln183_7_fu_1460_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_23_q0 : arr_2_I_7_q0);

assign select_ln183_8_fu_1477_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_24_q0 : arr_2_I_8_q0);

assign select_ln183_9_fu_1488_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_25_q0 : arr_2_I_9_q0);

assign select_ln183_fu_1365_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_I_16_q0 : arr_2_I_q0);

assign select_ln184_10_fu_1729_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_26_q0 : arr_2_Q_10_q0);

assign select_ln184_11_fu_1740_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_27_q0 : arr_2_Q_11_q0);

assign select_ln184_12_fu_1757_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_28_q0 : arr_2_Q_12_q0);

assign select_ln184_13_fu_1768_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_29_q0 : arr_2_Q_13_q0);

assign select_ln184_14_fu_1785_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_30_q0 : arr_2_Q_14_q0);

assign select_ln184_15_fu_1796_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_31_q0 : arr_2_Q_15_q0);

assign select_ln184_1_fu_1600_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_17_q0 : arr_2_Q_1_q0);

assign select_ln184_2_fu_1617_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_18_q0 : arr_2_Q_2_q0);

assign select_ln184_3_fu_1628_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_19_q0 : arr_2_Q_3_q0);

assign select_ln184_4_fu_1645_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_20_q0 : arr_2_Q_4_q0);

assign select_ln184_5_fu_1656_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_21_q0 : arr_2_Q_5_q0);

assign select_ln184_6_fu_1673_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_22_q0 : arr_2_Q_6_q0);

assign select_ln184_7_fu_1684_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_23_q0 : arr_2_Q_7_q0);

assign select_ln184_8_fu_1701_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_24_q0 : arr_2_Q_8_q0);

assign select_ln184_9_fu_1712_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_25_q0 : arr_2_Q_9_q0);

assign select_ln184_fu_1589_p3 = ((icmp_ln183_reg_1853[0:0] == 1'b1) ? arr_2_Q_16_q0 : arr_2_Q_q0);

assign sext_ln183_10_fu_1512_p1 = $signed(select_ln183_10_fu_1505_p3);

assign sext_ln183_11_fu_1523_p1 = $signed(select_ln183_11_fu_1516_p3);

assign sext_ln183_12_fu_1540_p1 = $signed(select_ln183_12_fu_1533_p3);

assign sext_ln183_13_fu_1551_p1 = $signed(select_ln183_13_fu_1544_p3);

assign sext_ln183_14_fu_1568_p1 = $signed(select_ln183_14_fu_1561_p3);

assign sext_ln183_15_fu_1579_p1 = $signed(select_ln183_15_fu_1572_p3);

assign sext_ln183_1_fu_1383_p1 = $signed(select_ln183_1_fu_1376_p3);

assign sext_ln183_2_fu_1400_p1 = $signed(select_ln183_2_fu_1393_p3);

assign sext_ln183_3_fu_1411_p1 = $signed(select_ln183_3_fu_1404_p3);

assign sext_ln183_4_fu_1428_p1 = $signed(select_ln183_4_fu_1421_p3);

assign sext_ln183_5_fu_1439_p1 = $signed(select_ln183_5_fu_1432_p3);

assign sext_ln183_6_fu_1456_p1 = $signed(select_ln183_6_fu_1449_p3);

assign sext_ln183_7_fu_1467_p1 = $signed(select_ln183_7_fu_1460_p3);

assign sext_ln183_8_fu_1484_p1 = $signed(select_ln183_8_fu_1477_p3);

assign sext_ln183_9_fu_1495_p1 = $signed(select_ln183_9_fu_1488_p3);

assign sext_ln183_fu_1372_p1 = $signed(select_ln183_fu_1365_p3);

assign sext_ln184_10_fu_1736_p1 = $signed(select_ln184_10_fu_1729_p3);

assign sext_ln184_11_fu_1747_p1 = $signed(select_ln184_11_fu_1740_p3);

assign sext_ln184_12_fu_1764_p1 = $signed(select_ln184_12_fu_1757_p3);

assign sext_ln184_13_fu_1775_p1 = $signed(select_ln184_13_fu_1768_p3);

assign sext_ln184_14_fu_1792_p1 = $signed(select_ln184_14_fu_1785_p3);

assign sext_ln184_15_fu_1803_p1 = $signed(select_ln184_15_fu_1796_p3);

assign sext_ln184_1_fu_1607_p1 = $signed(select_ln184_1_fu_1600_p3);

assign sext_ln184_2_fu_1624_p1 = $signed(select_ln184_2_fu_1617_p3);

assign sext_ln184_3_fu_1635_p1 = $signed(select_ln184_3_fu_1628_p3);

assign sext_ln184_4_fu_1652_p1 = $signed(select_ln184_4_fu_1645_p3);

assign sext_ln184_5_fu_1663_p1 = $signed(select_ln184_5_fu_1656_p3);

assign sext_ln184_6_fu_1680_p1 = $signed(select_ln184_6_fu_1673_p3);

assign sext_ln184_7_fu_1691_p1 = $signed(select_ln184_7_fu_1684_p3);

assign sext_ln184_8_fu_1708_p1 = $signed(select_ln184_8_fu_1701_p3);

assign sext_ln184_9_fu_1719_p1 = $signed(select_ln184_9_fu_1712_p3);

assign sext_ln184_fu_1596_p1 = $signed(select_ln184_fu_1589_p3);

assign zext_ln181_fu_1270_p1 = lshr_ln_fu_1260_p4;

assign zext_ln183_fu_1813_p1 = lshr_ln2_reg_1899_pp0_iter1_reg;

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_181_14
