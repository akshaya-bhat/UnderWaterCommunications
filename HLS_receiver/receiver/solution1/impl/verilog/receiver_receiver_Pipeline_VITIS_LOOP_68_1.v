// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_68_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        samples_I_11_address0,
        samples_I_11_ce0,
        samples_I_11_we0,
        samples_I_11_d0,
        samples_I_11_address1,
        samples_I_11_ce1,
        samples_I_11_q1,
        samples_Q_11_address0,
        samples_Q_11_ce0,
        samples_Q_11_we0,
        samples_Q_11_d0,
        samples_Q_11_address1,
        samples_Q_11_ce1,
        samples_Q_11_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] samples_I_11_address0;
output   samples_I_11_ce0;
output   samples_I_11_we0;
output  [17:0] samples_I_11_d0;
output  [7:0] samples_I_11_address1;
output   samples_I_11_ce1;
input  [17:0] samples_I_11_q1;
output  [7:0] samples_Q_11_address0;
output   samples_Q_11_ce0;
output   samples_Q_11_we0;
output  [17:0] samples_Q_11_d0;
output  [7:0] samples_Q_11_address1;
output   samples_Q_11_ce1;
input  [17:0] samples_Q_11_q1;

reg ap_idle;
reg samples_I_11_ce0;
reg samples_I_11_we0;
reg samples_I_11_ce1;
reg samples_Q_11_ce0;
reg samples_Q_11_we0;
reg samples_Q_11_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln68_fu_722_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    samples_I_1_ce0;
reg    samples_I_1_we0;
wire   [7:0] samples_I_1_address1;
reg    samples_I_1_ce1;
wire   [17:0] samples_I_1_q1;
reg    samples_I_2_ce0;
reg    samples_I_2_we0;
wire   [7:0] samples_I_2_address1;
reg    samples_I_2_ce1;
wire   [17:0] samples_I_2_q1;
reg    samples_I_3_ce0;
reg    samples_I_3_we0;
wire   [7:0] samples_I_3_address1;
reg    samples_I_3_ce1;
wire   [17:0] samples_I_3_q1;
reg    samples_I_4_ce0;
reg    samples_I_4_we0;
wire   [7:0] samples_I_4_address1;
reg    samples_I_4_ce1;
wire   [17:0] samples_I_4_q1;
reg    samples_I_5_ce0;
reg    samples_I_5_we0;
wire   [7:0] samples_I_5_address1;
reg    samples_I_5_ce1;
wire   [17:0] samples_I_5_q1;
reg    samples_I_6_ce0;
reg    samples_I_6_we0;
wire   [7:0] samples_I_6_address1;
reg    samples_I_6_ce1;
wire   [17:0] samples_I_6_q1;
reg    samples_I_7_ce0;
reg    samples_I_7_we0;
wire   [7:0] samples_I_7_address1;
reg    samples_I_7_ce1;
wire   [17:0] samples_I_7_q1;
reg    samples_I_8_ce0;
reg    samples_I_8_we0;
wire   [7:0] samples_I_8_address1;
reg    samples_I_8_ce1;
wire   [17:0] samples_I_8_q1;
reg    samples_I_9_ce0;
reg    samples_I_9_we0;
wire   [7:0] samples_I_9_address1;
reg    samples_I_9_ce1;
wire   [17:0] samples_I_9_q1;
reg    samples_I_10_ce0;
reg    samples_I_10_we0;
wire   [7:0] samples_I_10_address1;
reg    samples_I_10_ce1;
wire   [17:0] samples_I_10_q1;
wire   [7:0] samples_I_0_address0;
reg    samples_I_0_ce0;
reg    samples_I_0_we0;
wire   [7:0] samples_I_0_address1;
reg    samples_I_0_ce1;
wire   [17:0] samples_I_0_q1;
reg    samples_Q_1_ce0;
reg    samples_Q_1_we0;
wire   [7:0] samples_Q_1_address1;
reg    samples_Q_1_ce1;
wire   [17:0] samples_Q_1_q1;
wire   [7:0] samples_Q_0_address0;
reg    samples_Q_0_ce0;
reg    samples_Q_0_we0;
wire   [7:0] samples_Q_0_address1;
reg    samples_Q_0_ce1;
wire   [17:0] samples_Q_0_q1;
reg    samples_Q_2_ce0;
reg    samples_Q_2_we0;
wire   [7:0] samples_Q_2_address1;
reg    samples_Q_2_ce1;
wire   [17:0] samples_Q_2_q1;
reg    samples_Q_3_ce0;
reg    samples_Q_3_we0;
wire   [7:0] samples_Q_3_address1;
reg    samples_Q_3_ce1;
wire   [17:0] samples_Q_3_q1;
reg    samples_Q_4_ce0;
reg    samples_Q_4_we0;
wire   [7:0] samples_Q_4_address1;
reg    samples_Q_4_ce1;
wire   [17:0] samples_Q_4_q1;
reg    samples_Q_5_ce0;
reg    samples_Q_5_we0;
wire   [7:0] samples_Q_5_address1;
reg    samples_Q_5_ce1;
wire   [17:0] samples_Q_5_q1;
reg    samples_Q_6_ce0;
reg    samples_Q_6_we0;
wire   [7:0] samples_Q_6_address1;
reg    samples_Q_6_ce1;
wire   [17:0] samples_Q_6_q1;
reg    samples_Q_7_ce0;
reg    samples_Q_7_we0;
wire   [7:0] samples_Q_7_address1;
reg    samples_Q_7_ce1;
wire   [17:0] samples_Q_7_q1;
reg    samples_Q_8_ce0;
reg    samples_Q_8_we0;
wire   [7:0] samples_Q_8_address1;
reg    samples_Q_8_ce1;
wire   [17:0] samples_Q_8_q1;
reg    samples_Q_9_ce0;
reg    samples_Q_9_we0;
wire   [7:0] samples_Q_9_address1;
reg    samples_Q_9_ce1;
wire   [17:0] samples_Q_9_q1;
reg    samples_Q_10_ce0;
reg    samples_Q_10_we0;
wire   [7:0] samples_Q_10_address1;
reg    samples_Q_10_ce1;
wire   [17:0] samples_Q_10_q1;
reg    samples_I_12_ce0;
reg    samples_I_12_we0;
wire   [7:0] samples_I_12_address1;
reg    samples_I_12_ce1;
wire   [17:0] samples_I_12_q1;
reg    samples_I_13_ce0;
reg    samples_I_13_we0;
wire   [7:0] samples_I_13_address1;
reg    samples_I_13_ce1;
wire   [17:0] samples_I_13_q1;
reg    samples_I_14_ce0;
reg    samples_I_14_we0;
wire   [7:0] samples_I_14_address1;
reg    samples_I_14_ce1;
wire   [17:0] samples_I_14_q1;
reg    samples_I_15_ce0;
reg    samples_I_15_we0;
wire   [7:0] samples_I_15_address1;
reg    samples_I_15_ce1;
wire   [17:0] samples_I_15_q1;
reg    samples_Q_12_ce0;
reg    samples_Q_12_we0;
wire   [7:0] samples_Q_12_address1;
reg    samples_Q_12_ce1;
wire   [17:0] samples_Q_12_q1;
reg    samples_Q_13_ce0;
reg    samples_Q_13_we0;
wire   [7:0] samples_Q_13_address1;
reg    samples_Q_13_ce1;
wire   [17:0] samples_Q_13_q1;
reg    samples_Q_14_ce0;
reg    samples_Q_14_we0;
wire   [7:0] samples_Q_14_address1;
reg    samples_Q_14_ce1;
wire   [17:0] samples_Q_14_q1;
reg    samples_Q_15_ce0;
reg    samples_Q_15_we0;
wire   [7:0] samples_Q_15_address1;
reg    samples_Q_15_ce1;
wire   [17:0] samples_Q_15_q1;
wire   [63:0] zext_ln68_fu_682_p1;
reg   [63:0] zext_ln68_reg_758;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] zext_ln68_reg_758_pp0_iter1_reg;
reg   [7:0] samples_I_1_addr_reg_764;
reg   [7:0] samples_I_1_addr_reg_764_pp0_iter1_reg;
reg   [7:0] samples_Q_1_addr_reg_770;
reg   [7:0] samples_Q_1_addr_reg_770_pp0_iter1_reg;
reg   [7:0] samples_I_2_addr_reg_776;
reg   [7:0] samples_I_2_addr_reg_776_pp0_iter1_reg;
reg   [7:0] samples_Q_2_addr_reg_782;
reg   [7:0] samples_Q_2_addr_reg_782_pp0_iter1_reg;
reg   [7:0] samples_I_3_addr_reg_788;
reg   [7:0] samples_I_3_addr_reg_788_pp0_iter1_reg;
reg   [7:0] samples_Q_3_addr_reg_794;
reg   [7:0] samples_Q_3_addr_reg_794_pp0_iter1_reg;
reg   [7:0] samples_I_4_addr_reg_800;
reg   [7:0] samples_I_4_addr_reg_800_pp0_iter1_reg;
reg   [7:0] samples_Q_4_addr_reg_806;
reg   [7:0] samples_Q_4_addr_reg_806_pp0_iter1_reg;
reg   [7:0] samples_I_5_addr_reg_812;
reg   [7:0] samples_I_5_addr_reg_812_pp0_iter1_reg;
reg   [7:0] samples_Q_5_addr_reg_818;
reg   [7:0] samples_Q_5_addr_reg_818_pp0_iter1_reg;
reg   [7:0] samples_I_6_addr_reg_824;
reg   [7:0] samples_I_6_addr_reg_824_pp0_iter1_reg;
reg   [7:0] samples_Q_6_addr_reg_830;
reg   [7:0] samples_Q_6_addr_reg_830_pp0_iter1_reg;
reg   [7:0] samples_I_7_addr_reg_836;
reg   [7:0] samples_I_7_addr_reg_836_pp0_iter1_reg;
reg   [7:0] samples_Q_7_addr_reg_842;
reg   [7:0] samples_Q_7_addr_reg_842_pp0_iter1_reg;
reg   [7:0] samples_I_8_addr_reg_848;
reg   [7:0] samples_I_8_addr_reg_848_pp0_iter1_reg;
reg   [7:0] samples_Q_8_addr_reg_854;
reg   [7:0] samples_Q_8_addr_reg_854_pp0_iter1_reg;
reg   [7:0] samples_I_9_addr_reg_860;
reg   [7:0] samples_I_9_addr_reg_860_pp0_iter1_reg;
reg   [7:0] samples_Q_9_addr_reg_866;
reg   [7:0] samples_Q_9_addr_reg_866_pp0_iter1_reg;
reg   [7:0] samples_I_10_addr_reg_872;
reg   [7:0] samples_I_10_addr_reg_872_pp0_iter1_reg;
reg   [7:0] samples_Q_10_addr_reg_878;
reg   [7:0] samples_Q_10_addr_reg_878_pp0_iter1_reg;
reg   [7:0] samples_I_11_addr_reg_884;
reg   [7:0] samples_I_11_addr_reg_884_pp0_iter1_reg;
reg   [7:0] samples_Q_11_addr_reg_890;
reg   [7:0] samples_Q_11_addr_reg_890_pp0_iter1_reg;
reg   [0:0] icmp_ln68_reg_896;
reg   [0:0] icmp_ln68_reg_896_pp0_iter1_reg;
reg   [7:0] samples_I_12_addr_reg_900;
reg   [7:0] samples_I_12_addr_reg_900_pp0_iter1_reg;
reg   [7:0] samples_Q_12_addr_reg_906;
reg   [7:0] samples_Q_12_addr_reg_906_pp0_iter1_reg;
reg   [7:0] samples_I_13_addr_reg_912;
reg   [7:0] samples_I_13_addr_reg_912_pp0_iter1_reg;
reg   [7:0] samples_Q_13_addr_reg_918;
reg   [7:0] samples_Q_13_addr_reg_918_pp0_iter1_reg;
reg   [7:0] samples_I_14_addr_reg_924;
reg   [7:0] samples_I_14_addr_reg_924_pp0_iter1_reg;
reg   [7:0] samples_Q_14_addr_reg_930;
reg   [7:0] samples_Q_14_addr_reg_930_pp0_iter1_reg;
reg   [7:0] samples_I_15_addr_reg_936;
reg   [7:0] samples_I_15_addr_reg_936_pp0_iter1_reg;
reg   [7:0] samples_Q_15_addr_reg_942;
reg   [7:0] samples_Q_15_addr_reg_942_pp0_iter1_reg;
reg   [17:0] samples_I_1_load_reg_958;
reg   [17:0] samples_I_2_load_reg_963;
reg   [17:0] samples_I_3_load_reg_968;
reg   [17:0] samples_I_4_load_reg_973;
reg   [17:0] samples_I_5_load_reg_978;
reg   [17:0] samples_I_6_load_reg_983;
reg   [17:0] samples_I_7_load_reg_988;
reg   [17:0] samples_I_8_load_reg_993;
reg   [17:0] samples_I_9_load_reg_998;
reg   [17:0] samples_I_10_load_reg_1003;
reg   [17:0] samples_I_11_load_reg_1008;
reg   [17:0] samples_Q_11_load_reg_1013;
reg   [17:0] samples_Q_1_load_reg_1018;
reg   [17:0] samples_Q_2_load_reg_1023;
reg   [17:0] samples_Q_3_load_reg_1028;
reg   [17:0] samples_Q_4_load_reg_1033;
reg   [17:0] samples_Q_5_load_reg_1038;
reg   [17:0] samples_Q_6_load_reg_1043;
reg   [17:0] samples_Q_7_load_reg_1048;
reg   [17:0] samples_Q_8_load_reg_1053;
reg   [17:0] samples_Q_9_load_reg_1058;
reg   [17:0] samples_Q_10_load_reg_1063;
reg   [17:0] samples_I_12_load_reg_1068;
reg   [17:0] samples_I_13_load_reg_1073;
reg   [17:0] samples_I_14_load_reg_1078;
reg   [17:0] samples_I_15_load_reg_1083;
reg   [17:0] samples_I_0_load_reg_1088;
reg   [17:0] samples_Q_0_load_reg_1093;
reg   [17:0] samples_Q_12_load_reg_1098;
reg   [17:0] samples_Q_13_load_reg_1103;
reg   [17:0] samples_Q_14_load_reg_1108;
reg   [17:0] samples_Q_15_load_reg_1113;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln70_fu_740_p1;
reg   [11:0] i_fu_100;
wire   [11:0] add_ln70_fu_728_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_i_2;
wire   [7:0] lshr_ln_fu_672_p4;
wire   [11:0] or_ln70_fu_716_p2;
wire   [7:0] add_ln70_1_fu_734_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_1_addr_reg_764_pp0_iter1_reg),
    .ce0(samples_I_1_ce0),
    .we0(samples_I_1_we0),
    .d0(samples_I_2_load_reg_963),
    .address1(samples_I_1_address1),
    .ce1(samples_I_1_ce1),
    .q1(samples_I_1_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_2_addr_reg_776_pp0_iter1_reg),
    .ce0(samples_I_2_ce0),
    .we0(samples_I_2_we0),
    .d0(samples_I_3_load_reg_968),
    .address1(samples_I_2_address1),
    .ce1(samples_I_2_ce1),
    .q1(samples_I_2_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_3_addr_reg_788_pp0_iter1_reg),
    .ce0(samples_I_3_ce0),
    .we0(samples_I_3_we0),
    .d0(samples_I_4_load_reg_973),
    .address1(samples_I_3_address1),
    .ce1(samples_I_3_ce1),
    .q1(samples_I_3_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_4_addr_reg_800_pp0_iter1_reg),
    .ce0(samples_I_4_ce0),
    .we0(samples_I_4_we0),
    .d0(samples_I_5_load_reg_978),
    .address1(samples_I_4_address1),
    .ce1(samples_I_4_ce1),
    .q1(samples_I_4_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_5_addr_reg_812_pp0_iter1_reg),
    .ce0(samples_I_5_ce0),
    .we0(samples_I_5_we0),
    .d0(samples_I_6_load_reg_983),
    .address1(samples_I_5_address1),
    .ce1(samples_I_5_ce1),
    .q1(samples_I_5_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_6_addr_reg_824_pp0_iter1_reg),
    .ce0(samples_I_6_ce0),
    .we0(samples_I_6_we0),
    .d0(samples_I_7_load_reg_988),
    .address1(samples_I_6_address1),
    .ce1(samples_I_6_ce1),
    .q1(samples_I_6_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_7_addr_reg_836_pp0_iter1_reg),
    .ce0(samples_I_7_ce0),
    .we0(samples_I_7_we0),
    .d0(samples_I_8_load_reg_993),
    .address1(samples_I_7_address1),
    .ce1(samples_I_7_ce1),
    .q1(samples_I_7_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_8_addr_reg_848_pp0_iter1_reg),
    .ce0(samples_I_8_ce0),
    .we0(samples_I_8_we0),
    .d0(samples_I_9_load_reg_998),
    .address1(samples_I_8_address1),
    .ce1(samples_I_8_ce1),
    .q1(samples_I_8_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_9_addr_reg_860_pp0_iter1_reg),
    .ce0(samples_I_9_ce0),
    .we0(samples_I_9_we0),
    .d0(samples_I_10_load_reg_1003),
    .address1(samples_I_9_address1),
    .ce1(samples_I_9_ce1),
    .q1(samples_I_9_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_10_addr_reg_872_pp0_iter1_reg),
    .ce0(samples_I_10_ce0),
    .we0(samples_I_10_we0),
    .d0(samples_I_11_load_reg_1008),
    .address1(samples_I_10_address1),
    .ce1(samples_I_10_ce1),
    .q1(samples_I_10_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_0_address0),
    .ce0(samples_I_0_ce0),
    .we0(samples_I_0_we0),
    .d0(samples_I_1_load_reg_958),
    .address1(samples_I_0_address1),
    .ce1(samples_I_0_ce1),
    .q1(samples_I_0_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_1_addr_reg_770_pp0_iter1_reg),
    .ce0(samples_Q_1_ce0),
    .we0(samples_Q_1_we0),
    .d0(samples_Q_2_load_reg_1023),
    .address1(samples_Q_1_address1),
    .ce1(samples_Q_1_ce1),
    .q1(samples_Q_1_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_0_address0),
    .ce0(samples_Q_0_ce0),
    .we0(samples_Q_0_we0),
    .d0(samples_Q_1_load_reg_1018),
    .address1(samples_Q_0_address1),
    .ce1(samples_Q_0_ce1),
    .q1(samples_Q_0_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_2_addr_reg_782_pp0_iter1_reg),
    .ce0(samples_Q_2_ce0),
    .we0(samples_Q_2_we0),
    .d0(samples_Q_3_load_reg_1028),
    .address1(samples_Q_2_address1),
    .ce1(samples_Q_2_ce1),
    .q1(samples_Q_2_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_3_addr_reg_794_pp0_iter1_reg),
    .ce0(samples_Q_3_ce0),
    .we0(samples_Q_3_we0),
    .d0(samples_Q_4_load_reg_1033),
    .address1(samples_Q_3_address1),
    .ce1(samples_Q_3_ce1),
    .q1(samples_Q_3_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_4_addr_reg_806_pp0_iter1_reg),
    .ce0(samples_Q_4_ce0),
    .we0(samples_Q_4_we0),
    .d0(samples_Q_5_load_reg_1038),
    .address1(samples_Q_4_address1),
    .ce1(samples_Q_4_ce1),
    .q1(samples_Q_4_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_5_addr_reg_818_pp0_iter1_reg),
    .ce0(samples_Q_5_ce0),
    .we0(samples_Q_5_we0),
    .d0(samples_Q_6_load_reg_1043),
    .address1(samples_Q_5_address1),
    .ce1(samples_Q_5_ce1),
    .q1(samples_Q_5_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_6_addr_reg_830_pp0_iter1_reg),
    .ce0(samples_Q_6_ce0),
    .we0(samples_Q_6_we0),
    .d0(samples_Q_7_load_reg_1048),
    .address1(samples_Q_6_address1),
    .ce1(samples_Q_6_ce1),
    .q1(samples_Q_6_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_7_addr_reg_842_pp0_iter1_reg),
    .ce0(samples_Q_7_ce0),
    .we0(samples_Q_7_we0),
    .d0(samples_Q_8_load_reg_1053),
    .address1(samples_Q_7_address1),
    .ce1(samples_Q_7_ce1),
    .q1(samples_Q_7_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_8_addr_reg_854_pp0_iter1_reg),
    .ce0(samples_Q_8_ce0),
    .we0(samples_Q_8_we0),
    .d0(samples_Q_9_load_reg_1058),
    .address1(samples_Q_8_address1),
    .ce1(samples_Q_8_ce1),
    .q1(samples_Q_8_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_9_addr_reg_866_pp0_iter1_reg),
    .ce0(samples_Q_9_ce0),
    .we0(samples_Q_9_we0),
    .d0(samples_Q_10_load_reg_1063),
    .address1(samples_Q_9_address1),
    .ce1(samples_Q_9_ce1),
    .q1(samples_Q_9_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_10_addr_reg_878_pp0_iter1_reg),
    .ce0(samples_Q_10_ce0),
    .we0(samples_Q_10_we0),
    .d0(samples_Q_11_load_reg_1013),
    .address1(samples_Q_10_address1),
    .ce1(samples_Q_10_ce1),
    .q1(samples_Q_10_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_12_addr_reg_900_pp0_iter1_reg),
    .ce0(samples_I_12_ce0),
    .we0(samples_I_12_we0),
    .d0(samples_I_13_load_reg_1073),
    .address1(samples_I_12_address1),
    .ce1(samples_I_12_ce1),
    .q1(samples_I_12_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_13_addr_reg_912_pp0_iter1_reg),
    .ce0(samples_I_13_ce0),
    .we0(samples_I_13_we0),
    .d0(samples_I_14_load_reg_1078),
    .address1(samples_I_13_address1),
    .ce1(samples_I_13_ce1),
    .q1(samples_I_13_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_14_addr_reg_924_pp0_iter1_reg),
    .ce0(samples_I_14_ce0),
    .we0(samples_I_14_we0),
    .d0(samples_I_15_load_reg_1083),
    .address1(samples_I_14_address1),
    .ce1(samples_I_14_ce1),
    .q1(samples_I_14_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_I_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_I_15_addr_reg_936_pp0_iter1_reg),
    .ce0(samples_I_15_ce0),
    .we0(samples_I_15_we0),
    .d0(samples_I_0_load_reg_1088),
    .address1(samples_I_15_address1),
    .ce1(samples_I_15_ce1),
    .q1(samples_I_15_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_12_addr_reg_906_pp0_iter1_reg),
    .ce0(samples_Q_12_ce0),
    .we0(samples_Q_12_we0),
    .d0(samples_Q_13_load_reg_1103),
    .address1(samples_Q_12_address1),
    .ce1(samples_Q_12_ce1),
    .q1(samples_Q_12_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_13_addr_reg_918_pp0_iter1_reg),
    .ce0(samples_Q_13_ce0),
    .we0(samples_Q_13_we0),
    .d0(samples_Q_14_load_reg_1108),
    .address1(samples_Q_13_address1),
    .ce1(samples_Q_13_ce1),
    .q1(samples_Q_13_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_14_addr_reg_930_pp0_iter1_reg),
    .ce0(samples_Q_14_ce0),
    .we0(samples_Q_14_we0),
    .d0(samples_Q_15_load_reg_1113),
    .address1(samples_Q_14_address1),
    .ce1(samples_Q_14_ce1),
    .q1(samples_Q_14_q1)
);

receiver_receiver_Pipeline_VITIS_LOOP_68_1_samples_I_1_RAM_AUTO_1R1W #(
    .DataWidth( 18 ),
    .AddressRange( 245 ),
    .AddressWidth( 8 ))
samples_Q_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_Q_15_addr_reg_942_pp0_iter1_reg),
    .ce0(samples_Q_15_ce0),
    .we0(samples_Q_15_we0),
    .d0(samples_Q_0_load_reg_1093),
    .address1(samples_Q_15_address1),
    .ce1(samples_Q_15_ce1),
    .q1(samples_Q_15_q1)
);

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln68_fu_722_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_100 <= add_ln70_fu_728_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_100 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln68_reg_896 <= icmp_ln68_fu_722_p2;
        icmp_ln68_reg_896_pp0_iter1_reg <= icmp_ln68_reg_896;
        samples_I_10_addr_reg_872 <= zext_ln68_fu_682_p1;
        samples_I_10_addr_reg_872_pp0_iter1_reg <= samples_I_10_addr_reg_872;
        samples_I_11_addr_reg_884 <= zext_ln68_fu_682_p1;
        samples_I_11_addr_reg_884_pp0_iter1_reg <= samples_I_11_addr_reg_884;
        samples_I_12_addr_reg_900_pp0_iter1_reg <= samples_I_12_addr_reg_900;
        samples_I_13_addr_reg_912_pp0_iter1_reg <= samples_I_13_addr_reg_912;
        samples_I_14_addr_reg_924_pp0_iter1_reg <= samples_I_14_addr_reg_924;
        samples_I_15_addr_reg_936_pp0_iter1_reg <= samples_I_15_addr_reg_936;
        samples_I_1_addr_reg_764 <= zext_ln68_fu_682_p1;
        samples_I_1_addr_reg_764_pp0_iter1_reg <= samples_I_1_addr_reg_764;
        samples_I_2_addr_reg_776 <= zext_ln68_fu_682_p1;
        samples_I_2_addr_reg_776_pp0_iter1_reg <= samples_I_2_addr_reg_776;
        samples_I_3_addr_reg_788 <= zext_ln68_fu_682_p1;
        samples_I_3_addr_reg_788_pp0_iter1_reg <= samples_I_3_addr_reg_788;
        samples_I_4_addr_reg_800 <= zext_ln68_fu_682_p1;
        samples_I_4_addr_reg_800_pp0_iter1_reg <= samples_I_4_addr_reg_800;
        samples_I_5_addr_reg_812 <= zext_ln68_fu_682_p1;
        samples_I_5_addr_reg_812_pp0_iter1_reg <= samples_I_5_addr_reg_812;
        samples_I_6_addr_reg_824 <= zext_ln68_fu_682_p1;
        samples_I_6_addr_reg_824_pp0_iter1_reg <= samples_I_6_addr_reg_824;
        samples_I_7_addr_reg_836 <= zext_ln68_fu_682_p1;
        samples_I_7_addr_reg_836_pp0_iter1_reg <= samples_I_7_addr_reg_836;
        samples_I_8_addr_reg_848 <= zext_ln68_fu_682_p1;
        samples_I_8_addr_reg_848_pp0_iter1_reg <= samples_I_8_addr_reg_848;
        samples_I_9_addr_reg_860 <= zext_ln68_fu_682_p1;
        samples_I_9_addr_reg_860_pp0_iter1_reg <= samples_I_9_addr_reg_860;
        samples_Q_10_addr_reg_878 <= zext_ln68_fu_682_p1;
        samples_Q_10_addr_reg_878_pp0_iter1_reg <= samples_Q_10_addr_reg_878;
        samples_Q_11_addr_reg_890 <= zext_ln68_fu_682_p1;
        samples_Q_11_addr_reg_890_pp0_iter1_reg <= samples_Q_11_addr_reg_890;
        samples_Q_12_addr_reg_906_pp0_iter1_reg <= samples_Q_12_addr_reg_906;
        samples_Q_13_addr_reg_918_pp0_iter1_reg <= samples_Q_13_addr_reg_918;
        samples_Q_14_addr_reg_930_pp0_iter1_reg <= samples_Q_14_addr_reg_930;
        samples_Q_15_addr_reg_942_pp0_iter1_reg <= samples_Q_15_addr_reg_942;
        samples_Q_1_addr_reg_770 <= zext_ln68_fu_682_p1;
        samples_Q_1_addr_reg_770_pp0_iter1_reg <= samples_Q_1_addr_reg_770;
        samples_Q_2_addr_reg_782 <= zext_ln68_fu_682_p1;
        samples_Q_2_addr_reg_782_pp0_iter1_reg <= samples_Q_2_addr_reg_782;
        samples_Q_3_addr_reg_794 <= zext_ln68_fu_682_p1;
        samples_Q_3_addr_reg_794_pp0_iter1_reg <= samples_Q_3_addr_reg_794;
        samples_Q_4_addr_reg_806 <= zext_ln68_fu_682_p1;
        samples_Q_4_addr_reg_806_pp0_iter1_reg <= samples_Q_4_addr_reg_806;
        samples_Q_5_addr_reg_818 <= zext_ln68_fu_682_p1;
        samples_Q_5_addr_reg_818_pp0_iter1_reg <= samples_Q_5_addr_reg_818;
        samples_Q_6_addr_reg_830 <= zext_ln68_fu_682_p1;
        samples_Q_6_addr_reg_830_pp0_iter1_reg <= samples_Q_6_addr_reg_830;
        samples_Q_7_addr_reg_842 <= zext_ln68_fu_682_p1;
        samples_Q_7_addr_reg_842_pp0_iter1_reg <= samples_Q_7_addr_reg_842;
        samples_Q_8_addr_reg_854 <= zext_ln68_fu_682_p1;
        samples_Q_8_addr_reg_854_pp0_iter1_reg <= samples_Q_8_addr_reg_854;
        samples_Q_9_addr_reg_866 <= zext_ln68_fu_682_p1;
        samples_Q_9_addr_reg_866_pp0_iter1_reg <= samples_Q_9_addr_reg_866;
        zext_ln68_reg_758[7 : 0] <= zext_ln68_fu_682_p1[7 : 0];
        zext_ln68_reg_758_pp0_iter1_reg[7 : 0] <= zext_ln68_reg_758[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_896 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_0_load_reg_1088 <= samples_I_0_q1;
        samples_I_12_load_reg_1068 <= samples_I_12_q1;
        samples_I_13_load_reg_1073 <= samples_I_13_q1;
        samples_I_14_load_reg_1078 <= samples_I_14_q1;
        samples_I_15_load_reg_1083 <= samples_I_15_q1;
        samples_Q_0_load_reg_1093 <= samples_Q_0_q1;
        samples_Q_12_load_reg_1098 <= samples_Q_12_q1;
        samples_Q_13_load_reg_1103 <= samples_Q_13_q1;
        samples_Q_14_load_reg_1108 <= samples_Q_14_q1;
        samples_Q_15_load_reg_1113 <= samples_Q_15_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_10_load_reg_1003 <= samples_I_10_q1;
        samples_I_11_load_reg_1008 <= samples_I_11_q1;
        samples_I_1_load_reg_958 <= samples_I_1_q1;
        samples_I_2_load_reg_963 <= samples_I_2_q1;
        samples_I_3_load_reg_968 <= samples_I_3_q1;
        samples_I_4_load_reg_973 <= samples_I_4_q1;
        samples_I_5_load_reg_978 <= samples_I_5_q1;
        samples_I_6_load_reg_983 <= samples_I_6_q1;
        samples_I_7_load_reg_988 <= samples_I_7_q1;
        samples_I_8_load_reg_993 <= samples_I_8_q1;
        samples_I_9_load_reg_998 <= samples_I_9_q1;
        samples_Q_10_load_reg_1063 <= samples_Q_10_q1;
        samples_Q_11_load_reg_1013 <= samples_Q_11_q1;
        samples_Q_1_load_reg_1018 <= samples_Q_1_q1;
        samples_Q_2_load_reg_1023 <= samples_Q_2_q1;
        samples_Q_3_load_reg_1028 <= samples_Q_3_q1;
        samples_Q_4_load_reg_1033 <= samples_Q_4_q1;
        samples_Q_5_load_reg_1038 <= samples_Q_5_q1;
        samples_Q_6_load_reg_1043 <= samples_Q_6_q1;
        samples_Q_7_load_reg_1048 <= samples_Q_7_q1;
        samples_Q_8_load_reg_1053 <= samples_Q_8_q1;
        samples_Q_9_load_reg_1058 <= samples_Q_9_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_722_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_12_addr_reg_900 <= zext_ln68_fu_682_p1;
        samples_I_13_addr_reg_912 <= zext_ln68_fu_682_p1;
        samples_I_14_addr_reg_924 <= zext_ln68_fu_682_p1;
        samples_I_15_addr_reg_936 <= zext_ln68_fu_682_p1;
        samples_Q_12_addr_reg_906 <= zext_ln68_fu_682_p1;
        samples_Q_13_addr_reg_918 <= zext_ln68_fu_682_p1;
        samples_Q_14_addr_reg_930 <= zext_ln68_fu_682_p1;
        samples_Q_15_addr_reg_942 <= zext_ln68_fu_682_p1;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_722_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 12'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_0_ce0 = 1'b1;
    end else begin
        samples_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_0_ce1 = 1'b1;
    end else begin
        samples_I_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_0_we0 = 1'b1;
    end else begin
        samples_I_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_10_ce0 = 1'b1;
    end else begin
        samples_I_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_10_ce1 = 1'b1;
    end else begin
        samples_I_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_10_we0 = 1'b1;
    end else begin
        samples_I_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_11_ce0 = 1'b1;
    end else begin
        samples_I_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_11_ce1 = 1'b1;
    end else begin
        samples_I_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_11_we0 = 1'b1;
    end else begin
        samples_I_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_12_ce0 = 1'b1;
    end else begin
        samples_I_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_12_ce1 = 1'b1;
    end else begin
        samples_I_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_12_we0 = 1'b1;
    end else begin
        samples_I_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_13_ce0 = 1'b1;
    end else begin
        samples_I_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_13_ce1 = 1'b1;
    end else begin
        samples_I_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_13_we0 = 1'b1;
    end else begin
        samples_I_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_14_ce0 = 1'b1;
    end else begin
        samples_I_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_14_ce1 = 1'b1;
    end else begin
        samples_I_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_14_we0 = 1'b1;
    end else begin
        samples_I_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_15_ce0 = 1'b1;
    end else begin
        samples_I_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_15_ce1 = 1'b1;
    end else begin
        samples_I_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_15_we0 = 1'b1;
    end else begin
        samples_I_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_1_ce0 = 1'b1;
    end else begin
        samples_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_1_ce1 = 1'b1;
    end else begin
        samples_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_1_we0 = 1'b1;
    end else begin
        samples_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_2_ce0 = 1'b1;
    end else begin
        samples_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_2_ce1 = 1'b1;
    end else begin
        samples_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_2_we0 = 1'b1;
    end else begin
        samples_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_3_ce0 = 1'b1;
    end else begin
        samples_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_3_ce1 = 1'b1;
    end else begin
        samples_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_3_we0 = 1'b1;
    end else begin
        samples_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_4_ce0 = 1'b1;
    end else begin
        samples_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_4_ce1 = 1'b1;
    end else begin
        samples_I_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_4_we0 = 1'b1;
    end else begin
        samples_I_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_5_ce0 = 1'b1;
    end else begin
        samples_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_5_ce1 = 1'b1;
    end else begin
        samples_I_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_5_we0 = 1'b1;
    end else begin
        samples_I_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_6_ce0 = 1'b1;
    end else begin
        samples_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_6_ce1 = 1'b1;
    end else begin
        samples_I_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_6_we0 = 1'b1;
    end else begin
        samples_I_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_7_ce0 = 1'b1;
    end else begin
        samples_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_7_ce1 = 1'b1;
    end else begin
        samples_I_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_7_we0 = 1'b1;
    end else begin
        samples_I_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_8_ce0 = 1'b1;
    end else begin
        samples_I_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_8_ce1 = 1'b1;
    end else begin
        samples_I_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_8_we0 = 1'b1;
    end else begin
        samples_I_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_9_ce0 = 1'b1;
    end else begin
        samples_I_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_I_9_ce1 = 1'b1;
    end else begin
        samples_I_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_I_9_we0 = 1'b1;
    end else begin
        samples_I_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_0_ce0 = 1'b1;
    end else begin
        samples_Q_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_0_ce1 = 1'b1;
    end else begin
        samples_Q_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_0_we0 = 1'b1;
    end else begin
        samples_Q_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_10_ce0 = 1'b1;
    end else begin
        samples_Q_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_10_ce1 = 1'b1;
    end else begin
        samples_Q_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_10_we0 = 1'b1;
    end else begin
        samples_Q_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_11_ce0 = 1'b1;
    end else begin
        samples_Q_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_11_ce1 = 1'b1;
    end else begin
        samples_Q_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_11_we0 = 1'b1;
    end else begin
        samples_Q_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_12_ce0 = 1'b1;
    end else begin
        samples_Q_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_12_ce1 = 1'b1;
    end else begin
        samples_Q_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_12_we0 = 1'b1;
    end else begin
        samples_Q_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_13_ce0 = 1'b1;
    end else begin
        samples_Q_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_13_ce1 = 1'b1;
    end else begin
        samples_Q_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_13_we0 = 1'b1;
    end else begin
        samples_Q_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_14_ce0 = 1'b1;
    end else begin
        samples_Q_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_14_ce1 = 1'b1;
    end else begin
        samples_Q_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_14_we0 = 1'b1;
    end else begin
        samples_Q_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_15_ce0 = 1'b1;
    end else begin
        samples_Q_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_15_ce1 = 1'b1;
    end else begin
        samples_Q_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_896_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_15_we0 = 1'b1;
    end else begin
        samples_Q_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_1_ce0 = 1'b1;
    end else begin
        samples_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_1_ce1 = 1'b1;
    end else begin
        samples_Q_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_1_we0 = 1'b1;
    end else begin
        samples_Q_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_2_ce0 = 1'b1;
    end else begin
        samples_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_2_ce1 = 1'b1;
    end else begin
        samples_Q_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_2_we0 = 1'b1;
    end else begin
        samples_Q_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_3_ce0 = 1'b1;
    end else begin
        samples_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_3_ce1 = 1'b1;
    end else begin
        samples_Q_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_3_we0 = 1'b1;
    end else begin
        samples_Q_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_4_ce0 = 1'b1;
    end else begin
        samples_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_4_ce1 = 1'b1;
    end else begin
        samples_Q_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_4_we0 = 1'b1;
    end else begin
        samples_Q_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_5_ce0 = 1'b1;
    end else begin
        samples_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_5_ce1 = 1'b1;
    end else begin
        samples_Q_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_5_we0 = 1'b1;
    end else begin
        samples_Q_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_6_ce0 = 1'b1;
    end else begin
        samples_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_6_ce1 = 1'b1;
    end else begin
        samples_Q_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_6_we0 = 1'b1;
    end else begin
        samples_Q_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_7_ce0 = 1'b1;
    end else begin
        samples_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_7_ce1 = 1'b1;
    end else begin
        samples_Q_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_7_we0 = 1'b1;
    end else begin
        samples_Q_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_8_ce0 = 1'b1;
    end else begin
        samples_Q_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_8_ce1 = 1'b1;
    end else begin
        samples_Q_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_8_we0 = 1'b1;
    end else begin
        samples_Q_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_9_ce0 = 1'b1;
    end else begin
        samples_Q_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        samples_Q_9_ce1 = 1'b1;
    end else begin
        samples_Q_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        samples_Q_9_we0 = 1'b1;
    end else begin
        samples_Q_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln70_1_fu_734_p2 = (lshr_ln_fu_672_p4 + 8'd1);

assign add_ln70_fu_728_p2 = (ap_sig_allocacmp_i_2 + 12'd16);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln68_fu_722_p2 = ((or_ln70_fu_716_p2 < 12'd3915) ? 1'b1 : 1'b0);

assign lshr_ln_fu_672_p4 = {{ap_sig_allocacmp_i_2[11:4]}};

assign or_ln70_fu_716_p2 = (ap_sig_allocacmp_i_2 | 12'd11);

assign samples_I_0_address0 = zext_ln68_reg_758_pp0_iter1_reg;

assign samples_I_0_address1 = zext_ln70_fu_740_p1;

assign samples_I_10_address1 = zext_ln68_fu_682_p1;

assign samples_I_11_address0 = samples_I_11_addr_reg_884_pp0_iter1_reg;

assign samples_I_11_address1 = zext_ln68_fu_682_p1;

assign samples_I_11_d0 = samples_I_12_load_reg_1068;

assign samples_I_12_address1 = zext_ln68_fu_682_p1;

assign samples_I_13_address1 = zext_ln68_fu_682_p1;

assign samples_I_14_address1 = zext_ln68_fu_682_p1;

assign samples_I_15_address1 = zext_ln68_fu_682_p1;

assign samples_I_1_address1 = zext_ln68_fu_682_p1;

assign samples_I_2_address1 = zext_ln68_fu_682_p1;

assign samples_I_3_address1 = zext_ln68_fu_682_p1;

assign samples_I_4_address1 = zext_ln68_fu_682_p1;

assign samples_I_5_address1 = zext_ln68_fu_682_p1;

assign samples_I_6_address1 = zext_ln68_fu_682_p1;

assign samples_I_7_address1 = zext_ln68_fu_682_p1;

assign samples_I_8_address1 = zext_ln68_fu_682_p1;

assign samples_I_9_address1 = zext_ln68_fu_682_p1;

assign samples_Q_0_address0 = zext_ln68_reg_758_pp0_iter1_reg;

assign samples_Q_0_address1 = zext_ln70_fu_740_p1;

assign samples_Q_10_address1 = zext_ln68_fu_682_p1;

assign samples_Q_11_address0 = samples_Q_11_addr_reg_890_pp0_iter1_reg;

assign samples_Q_11_address1 = zext_ln68_fu_682_p1;

assign samples_Q_11_d0 = samples_Q_12_load_reg_1098;

assign samples_Q_12_address1 = zext_ln68_fu_682_p1;

assign samples_Q_13_address1 = zext_ln68_fu_682_p1;

assign samples_Q_14_address1 = zext_ln68_fu_682_p1;

assign samples_Q_15_address1 = zext_ln68_fu_682_p1;

assign samples_Q_1_address1 = zext_ln68_fu_682_p1;

assign samples_Q_2_address1 = zext_ln68_fu_682_p1;

assign samples_Q_3_address1 = zext_ln68_fu_682_p1;

assign samples_Q_4_address1 = zext_ln68_fu_682_p1;

assign samples_Q_5_address1 = zext_ln68_fu_682_p1;

assign samples_Q_6_address1 = zext_ln68_fu_682_p1;

assign samples_Q_7_address1 = zext_ln68_fu_682_p1;

assign samples_Q_8_address1 = zext_ln68_fu_682_p1;

assign samples_Q_9_address1 = zext_ln68_fu_682_p1;

assign zext_ln68_fu_682_p1 = lshr_ln_fu_672_p4;

assign zext_ln70_fu_740_p1 = add_ln70_1_fu_734_p2;

always @ (posedge ap_clk) begin
    zext_ln68_reg_758[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln68_reg_758_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_68_1
