// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_191_13 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_2_I_address0,
        arr_2_I_ce0,
        arr_2_I_q0,
        arr_2_I_1_address0,
        arr_2_I_1_ce0,
        arr_2_I_1_q0,
        arr_3_I_address0,
        arr_3_I_ce0,
        arr_3_I_we0,
        arr_3_I_d0,
        arr_2_Q_address0,
        arr_2_Q_ce0,
        arr_2_Q_q0,
        arr_2_Q_1_address0,
        arr_2_Q_1_ce0,
        arr_2_Q_1_q0,
        arr_3_Q_address0,
        arr_3_Q_ce0,
        arr_3_Q_we0,
        arr_3_Q_d0,
        arr_2_I_2_address0,
        arr_2_I_2_ce0,
        arr_2_I_2_q0,
        arr_2_I_3_address0,
        arr_2_I_3_ce0,
        arr_2_I_3_q0,
        arr_3_I_1_address0,
        arr_3_I_1_ce0,
        arr_3_I_1_we0,
        arr_3_I_1_d0,
        arr_2_Q_2_address0,
        arr_2_Q_2_ce0,
        arr_2_Q_2_q0,
        arr_2_Q_3_address0,
        arr_2_Q_3_ce0,
        arr_2_Q_3_q0,
        arr_3_Q_1_address0,
        arr_3_Q_1_ce0,
        arr_3_Q_1_we0,
        arr_3_Q_1_d0,
        arr_2_I_4_address0,
        arr_2_I_4_ce0,
        arr_2_I_4_q0,
        arr_2_I_5_address0,
        arr_2_I_5_ce0,
        arr_2_I_5_q0,
        arr_3_I_2_address0,
        arr_3_I_2_ce0,
        arr_3_I_2_we0,
        arr_3_I_2_d0,
        arr_2_Q_4_address0,
        arr_2_Q_4_ce0,
        arr_2_Q_4_q0,
        arr_2_Q_5_address0,
        arr_2_Q_5_ce0,
        arr_2_Q_5_q0,
        arr_3_Q_2_address0,
        arr_3_Q_2_ce0,
        arr_3_Q_2_we0,
        arr_3_Q_2_d0,
        arr_2_I_6_address0,
        arr_2_I_6_ce0,
        arr_2_I_6_q0,
        arr_2_I_7_address0,
        arr_2_I_7_ce0,
        arr_2_I_7_q0,
        arr_3_I_3_address0,
        arr_3_I_3_ce0,
        arr_3_I_3_we0,
        arr_3_I_3_d0,
        arr_2_Q_6_address0,
        arr_2_Q_6_ce0,
        arr_2_Q_6_q0,
        arr_2_Q_7_address0,
        arr_2_Q_7_ce0,
        arr_2_Q_7_q0,
        arr_3_Q_3_address0,
        arr_3_Q_3_ce0,
        arr_3_Q_3_we0,
        arr_3_Q_3_d0,
        arr_2_I_8_address0,
        arr_2_I_8_ce0,
        arr_2_I_8_q0,
        arr_2_I_9_address0,
        arr_2_I_9_ce0,
        arr_2_I_9_q0,
        arr_3_I_4_address0,
        arr_3_I_4_ce0,
        arr_3_I_4_we0,
        arr_3_I_4_d0,
        arr_2_Q_8_address0,
        arr_2_Q_8_ce0,
        arr_2_Q_8_q0,
        arr_2_Q_9_address0,
        arr_2_Q_9_ce0,
        arr_2_Q_9_q0,
        arr_3_Q_4_address0,
        arr_3_Q_4_ce0,
        arr_3_Q_4_we0,
        arr_3_Q_4_d0,
        arr_2_I_10_address0,
        arr_2_I_10_ce0,
        arr_2_I_10_q0,
        arr_2_I_11_address0,
        arr_2_I_11_ce0,
        arr_2_I_11_q0,
        arr_3_I_5_address0,
        arr_3_I_5_ce0,
        arr_3_I_5_we0,
        arr_3_I_5_d0,
        arr_2_Q_10_address0,
        arr_2_Q_10_ce0,
        arr_2_Q_10_q0,
        arr_2_Q_11_address0,
        arr_2_Q_11_ce0,
        arr_2_Q_11_q0,
        arr_3_Q_5_address0,
        arr_3_Q_5_ce0,
        arr_3_Q_5_we0,
        arr_3_Q_5_d0,
        arr_2_I_12_address0,
        arr_2_I_12_ce0,
        arr_2_I_12_q0,
        arr_2_I_13_address0,
        arr_2_I_13_ce0,
        arr_2_I_13_q0,
        arr_3_I_6_address0,
        arr_3_I_6_ce0,
        arr_3_I_6_we0,
        arr_3_I_6_d0,
        arr_2_Q_12_address0,
        arr_2_Q_12_ce0,
        arr_2_Q_12_q0,
        arr_2_Q_13_address0,
        arr_2_Q_13_ce0,
        arr_2_Q_13_q0,
        arr_3_Q_6_address0,
        arr_3_Q_6_ce0,
        arr_3_Q_6_we0,
        arr_3_Q_6_d0,
        arr_2_I_14_address0,
        arr_2_I_14_ce0,
        arr_2_I_14_q0,
        arr_2_I_15_address0,
        arr_2_I_15_ce0,
        arr_2_I_15_q0,
        arr_3_I_7_address0,
        arr_3_I_7_ce0,
        arr_3_I_7_we0,
        arr_3_I_7_d0,
        arr_2_Q_14_address0,
        arr_2_Q_14_ce0,
        arr_2_Q_14_q0,
        arr_2_Q_15_address0,
        arr_2_Q_15_ce0,
        arr_2_Q_15_q0,
        arr_3_Q_7_address0,
        arr_3_Q_7_ce0,
        arr_3_Q_7_we0,
        arr_3_Q_7_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] arr_2_I_address0;
output   arr_2_I_ce0;
input  [24:0] arr_2_I_q0;
output  [4:0] arr_2_I_1_address0;
output   arr_2_I_1_ce0;
input  [24:0] arr_2_I_1_q0;
output  [4:0] arr_3_I_address0;
output   arr_3_I_ce0;
output   arr_3_I_we0;
output  [25:0] arr_3_I_d0;
output  [4:0] arr_2_Q_address0;
output   arr_2_Q_ce0;
input  [24:0] arr_2_Q_q0;
output  [4:0] arr_2_Q_1_address0;
output   arr_2_Q_1_ce0;
input  [24:0] arr_2_Q_1_q0;
output  [4:0] arr_3_Q_address0;
output   arr_3_Q_ce0;
output   arr_3_Q_we0;
output  [25:0] arr_3_Q_d0;
output  [4:0] arr_2_I_2_address0;
output   arr_2_I_2_ce0;
input  [24:0] arr_2_I_2_q0;
output  [4:0] arr_2_I_3_address0;
output   arr_2_I_3_ce0;
input  [24:0] arr_2_I_3_q0;
output  [4:0] arr_3_I_1_address0;
output   arr_3_I_1_ce0;
output   arr_3_I_1_we0;
output  [25:0] arr_3_I_1_d0;
output  [4:0] arr_2_Q_2_address0;
output   arr_2_Q_2_ce0;
input  [24:0] arr_2_Q_2_q0;
output  [4:0] arr_2_Q_3_address0;
output   arr_2_Q_3_ce0;
input  [24:0] arr_2_Q_3_q0;
output  [4:0] arr_3_Q_1_address0;
output   arr_3_Q_1_ce0;
output   arr_3_Q_1_we0;
output  [25:0] arr_3_Q_1_d0;
output  [4:0] arr_2_I_4_address0;
output   arr_2_I_4_ce0;
input  [24:0] arr_2_I_4_q0;
output  [4:0] arr_2_I_5_address0;
output   arr_2_I_5_ce0;
input  [24:0] arr_2_I_5_q0;
output  [4:0] arr_3_I_2_address0;
output   arr_3_I_2_ce0;
output   arr_3_I_2_we0;
output  [25:0] arr_3_I_2_d0;
output  [4:0] arr_2_Q_4_address0;
output   arr_2_Q_4_ce0;
input  [24:0] arr_2_Q_4_q0;
output  [4:0] arr_2_Q_5_address0;
output   arr_2_Q_5_ce0;
input  [24:0] arr_2_Q_5_q0;
output  [4:0] arr_3_Q_2_address0;
output   arr_3_Q_2_ce0;
output   arr_3_Q_2_we0;
output  [25:0] arr_3_Q_2_d0;
output  [4:0] arr_2_I_6_address0;
output   arr_2_I_6_ce0;
input  [24:0] arr_2_I_6_q0;
output  [4:0] arr_2_I_7_address0;
output   arr_2_I_7_ce0;
input  [24:0] arr_2_I_7_q0;
output  [4:0] arr_3_I_3_address0;
output   arr_3_I_3_ce0;
output   arr_3_I_3_we0;
output  [25:0] arr_3_I_3_d0;
output  [4:0] arr_2_Q_6_address0;
output   arr_2_Q_6_ce0;
input  [24:0] arr_2_Q_6_q0;
output  [4:0] arr_2_Q_7_address0;
output   arr_2_Q_7_ce0;
input  [24:0] arr_2_Q_7_q0;
output  [4:0] arr_3_Q_3_address0;
output   arr_3_Q_3_ce0;
output   arr_3_Q_3_we0;
output  [25:0] arr_3_Q_3_d0;
output  [4:0] arr_2_I_8_address0;
output   arr_2_I_8_ce0;
input  [24:0] arr_2_I_8_q0;
output  [4:0] arr_2_I_9_address0;
output   arr_2_I_9_ce0;
input  [24:0] arr_2_I_9_q0;
output  [4:0] arr_3_I_4_address0;
output   arr_3_I_4_ce0;
output   arr_3_I_4_we0;
output  [25:0] arr_3_I_4_d0;
output  [4:0] arr_2_Q_8_address0;
output   arr_2_Q_8_ce0;
input  [24:0] arr_2_Q_8_q0;
output  [4:0] arr_2_Q_9_address0;
output   arr_2_Q_9_ce0;
input  [24:0] arr_2_Q_9_q0;
output  [4:0] arr_3_Q_4_address0;
output   arr_3_Q_4_ce0;
output   arr_3_Q_4_we0;
output  [25:0] arr_3_Q_4_d0;
output  [4:0] arr_2_I_10_address0;
output   arr_2_I_10_ce0;
input  [24:0] arr_2_I_10_q0;
output  [4:0] arr_2_I_11_address0;
output   arr_2_I_11_ce0;
input  [24:0] arr_2_I_11_q0;
output  [4:0] arr_3_I_5_address0;
output   arr_3_I_5_ce0;
output   arr_3_I_5_we0;
output  [25:0] arr_3_I_5_d0;
output  [4:0] arr_2_Q_10_address0;
output   arr_2_Q_10_ce0;
input  [24:0] arr_2_Q_10_q0;
output  [4:0] arr_2_Q_11_address0;
output   arr_2_Q_11_ce0;
input  [24:0] arr_2_Q_11_q0;
output  [4:0] arr_3_Q_5_address0;
output   arr_3_Q_5_ce0;
output   arr_3_Q_5_we0;
output  [25:0] arr_3_Q_5_d0;
output  [4:0] arr_2_I_12_address0;
output   arr_2_I_12_ce0;
input  [24:0] arr_2_I_12_q0;
output  [4:0] arr_2_I_13_address0;
output   arr_2_I_13_ce0;
input  [24:0] arr_2_I_13_q0;
output  [4:0] arr_3_I_6_address0;
output   arr_3_I_6_ce0;
output   arr_3_I_6_we0;
output  [25:0] arr_3_I_6_d0;
output  [4:0] arr_2_Q_12_address0;
output   arr_2_Q_12_ce0;
input  [24:0] arr_2_Q_12_q0;
output  [4:0] arr_2_Q_13_address0;
output   arr_2_Q_13_ce0;
input  [24:0] arr_2_Q_13_q0;
output  [4:0] arr_3_Q_6_address0;
output   arr_3_Q_6_ce0;
output   arr_3_Q_6_we0;
output  [25:0] arr_3_Q_6_d0;
output  [4:0] arr_2_I_14_address0;
output   arr_2_I_14_ce0;
input  [24:0] arr_2_I_14_q0;
output  [4:0] arr_2_I_15_address0;
output   arr_2_I_15_ce0;
input  [24:0] arr_2_I_15_q0;
output  [4:0] arr_3_I_7_address0;
output   arr_3_I_7_ce0;
output   arr_3_I_7_we0;
output  [25:0] arr_3_I_7_d0;
output  [4:0] arr_2_Q_14_address0;
output   arr_2_Q_14_ce0;
input  [24:0] arr_2_Q_14_q0;
output  [4:0] arr_2_Q_15_address0;
output   arr_2_Q_15_ce0;
input  [24:0] arr_2_Q_15_q0;
output  [4:0] arr_3_Q_7_address0;
output   arr_3_Q_7_ce0;
output   arr_3_Q_7_we0;
output  [25:0] arr_3_Q_7_d0;

reg ap_idle;
reg arr_2_I_ce0;
reg arr_2_I_1_ce0;
reg arr_3_I_ce0;
reg arr_3_I_we0;
reg arr_2_Q_ce0;
reg arr_2_Q_1_ce0;
reg arr_3_Q_ce0;
reg arr_3_Q_we0;
reg arr_2_I_2_ce0;
reg arr_2_I_3_ce0;
reg arr_3_I_1_ce0;
reg arr_3_I_1_we0;
reg arr_2_Q_2_ce0;
reg arr_2_Q_3_ce0;
reg arr_3_Q_1_ce0;
reg arr_3_Q_1_we0;
reg arr_2_I_4_ce0;
reg arr_2_I_5_ce0;
reg arr_3_I_2_ce0;
reg arr_3_I_2_we0;
reg arr_2_Q_4_ce0;
reg arr_2_Q_5_ce0;
reg arr_3_Q_2_ce0;
reg arr_3_Q_2_we0;
reg arr_2_I_6_ce0;
reg arr_2_I_7_ce0;
reg arr_3_I_3_ce0;
reg arr_3_I_3_we0;
reg arr_2_Q_6_ce0;
reg arr_2_Q_7_ce0;
reg arr_3_Q_3_ce0;
reg arr_3_Q_3_we0;
reg arr_2_I_8_ce0;
reg arr_2_I_9_ce0;
reg arr_3_I_4_ce0;
reg arr_3_I_4_we0;
reg arr_2_Q_8_ce0;
reg arr_2_Q_9_ce0;
reg arr_3_Q_4_ce0;
reg arr_3_Q_4_we0;
reg arr_2_I_10_ce0;
reg arr_2_I_11_ce0;
reg arr_3_I_5_ce0;
reg arr_3_I_5_we0;
reg arr_2_Q_10_ce0;
reg arr_2_Q_11_ce0;
reg arr_3_Q_5_ce0;
reg arr_3_Q_5_we0;
reg arr_2_I_12_ce0;
reg arr_2_I_13_ce0;
reg arr_3_I_6_ce0;
reg arr_3_I_6_we0;
reg arr_2_Q_12_ce0;
reg arr_2_Q_13_ce0;
reg arr_3_Q_6_ce0;
reg arr_3_Q_6_we0;
reg arr_2_I_14_ce0;
reg arr_2_I_15_ce0;
reg arr_3_I_7_ce0;
reg arr_3_I_7_we0;
reg arr_2_Q_14_ce0;
reg arr_2_Q_15_ce0;
reg arr_3_Q_7_ce0;
reg arr_3_Q_7_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln191_fu_818_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln191_fu_776_p1;
reg   [63:0] zext_ln191_reg_1066;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] zext_ln191_reg_1066_pp0_iter1_reg;
reg   [0:0] icmp_ln191_reg_1166;
reg   [0:0] icmp_ln191_reg_1166_pp0_iter1_reg;
wire   [25:0] add_ln193_fu_843_p2;
reg   [25:0] add_ln193_reg_1250;
wire   [25:0] add_ln193_1_fu_857_p2;
reg   [25:0] add_ln193_1_reg_1255;
wire   [25:0] add_ln193_2_fu_871_p2;
reg   [25:0] add_ln193_2_reg_1260;
wire   [25:0] add_ln193_3_fu_885_p2;
reg   [25:0] add_ln193_3_reg_1265;
wire   [25:0] add_ln194_fu_899_p2;
reg   [25:0] add_ln194_reg_1270;
wire   [25:0] add_ln194_1_fu_913_p2;
reg   [25:0] add_ln194_1_reg_1275;
wire   [25:0] add_ln194_2_fu_927_p2;
reg   [25:0] add_ln194_2_reg_1280;
wire   [25:0] add_ln194_3_fu_941_p2;
reg   [25:0] add_ln194_3_reg_1285;
wire   [25:0] add_ln193_4_fu_955_p2;
reg   [25:0] add_ln193_4_reg_1290;
wire   [25:0] add_ln193_5_fu_969_p2;
reg   [25:0] add_ln193_5_reg_1295;
wire   [25:0] add_ln193_6_fu_983_p2;
reg   [25:0] add_ln193_6_reg_1300;
wire   [25:0] add_ln193_7_fu_997_p2;
reg   [25:0] add_ln193_7_reg_1305;
wire   [25:0] add_ln194_4_fu_1011_p2;
reg   [25:0] add_ln194_4_reg_1310;
wire   [25:0] add_ln194_5_fu_1025_p2;
reg   [25:0] add_ln194_5_reg_1315;
wire   [25:0] add_ln194_6_fu_1039_p2;
reg   [25:0] add_ln194_6_reg_1320;
wire   [25:0] add_ln194_7_fu_1053_p2;
reg   [25:0] add_ln194_7_reg_1325;
wire    ap_block_pp0_stage0;
reg   [8:0] i_fu_130;
wire   [8:0] add_ln191_fu_824_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_11;
wire   [4:0] lshr_ln_fu_766_p4;
wire   [8:0] or_ln191_fu_812_p2;
wire  signed [25:0] sext_ln193_1_fu_839_p1;
wire  signed [25:0] sext_ln193_fu_835_p1;
wire  signed [25:0] sext_ln193_3_fu_853_p1;
wire  signed [25:0] sext_ln193_2_fu_849_p1;
wire  signed [25:0] sext_ln193_5_fu_867_p1;
wire  signed [25:0] sext_ln193_4_fu_863_p1;
wire  signed [25:0] sext_ln193_7_fu_881_p1;
wire  signed [25:0] sext_ln193_6_fu_877_p1;
wire  signed [25:0] sext_ln194_1_fu_895_p1;
wire  signed [25:0] sext_ln194_fu_891_p1;
wire  signed [25:0] sext_ln194_3_fu_909_p1;
wire  signed [25:0] sext_ln194_2_fu_905_p1;
wire  signed [25:0] sext_ln194_5_fu_923_p1;
wire  signed [25:0] sext_ln194_4_fu_919_p1;
wire  signed [25:0] sext_ln194_7_fu_937_p1;
wire  signed [25:0] sext_ln194_6_fu_933_p1;
wire  signed [25:0] sext_ln193_9_fu_951_p1;
wire  signed [25:0] sext_ln193_8_fu_947_p1;
wire  signed [25:0] sext_ln193_11_fu_965_p1;
wire  signed [25:0] sext_ln193_10_fu_961_p1;
wire  signed [25:0] sext_ln193_13_fu_979_p1;
wire  signed [25:0] sext_ln193_12_fu_975_p1;
wire  signed [25:0] sext_ln193_15_fu_993_p1;
wire  signed [25:0] sext_ln193_14_fu_989_p1;
wire  signed [25:0] sext_ln194_9_fu_1007_p1;
wire  signed [25:0] sext_ln194_8_fu_1003_p1;
wire  signed [25:0] sext_ln194_11_fu_1021_p1;
wire  signed [25:0] sext_ln194_10_fu_1017_p1;
wire  signed [25:0] sext_ln194_13_fu_1035_p1;
wire  signed [25:0] sext_ln194_12_fu_1031_p1;
wire  signed [25:0] sext_ln194_15_fu_1049_p1;
wire  signed [25:0] sext_ln194_14_fu_1045_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln191_fu_818_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_130 <= add_ln191_fu_824_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_130 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln193_1_reg_1255 <= add_ln193_1_fu_857_p2;
        add_ln193_2_reg_1260 <= add_ln193_2_fu_871_p2;
        add_ln193_3_reg_1265 <= add_ln193_3_fu_885_p2;
        add_ln193_reg_1250 <= add_ln193_fu_843_p2;
        add_ln194_1_reg_1275 <= add_ln194_1_fu_913_p2;
        add_ln194_2_reg_1280 <= add_ln194_2_fu_927_p2;
        add_ln194_3_reg_1285 <= add_ln194_3_fu_941_p2;
        add_ln194_reg_1270 <= add_ln194_fu_899_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln191_reg_1166 <= icmp_ln191_fu_818_p2;
        icmp_ln191_reg_1166_pp0_iter1_reg <= icmp_ln191_reg_1166;
        zext_ln191_reg_1066[4 : 0] <= zext_ln191_fu_776_p1[4 : 0];
        zext_ln191_reg_1066_pp0_iter1_reg[4 : 0] <= zext_ln191_reg_1066[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_reg_1166 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln193_4_reg_1290 <= add_ln193_4_fu_955_p2;
        add_ln193_5_reg_1295 <= add_ln193_5_fu_969_p2;
        add_ln193_6_reg_1300 <= add_ln193_6_fu_983_p2;
        add_ln193_7_reg_1305 <= add_ln193_7_fu_997_p2;
        add_ln194_4_reg_1310 <= add_ln194_4_fu_1011_p2;
        add_ln194_5_reg_1315 <= add_ln194_5_fu_1025_p2;
        add_ln194_6_reg_1320 <= add_ln194_6_fu_1039_p2;
        add_ln194_7_reg_1325 <= add_ln194_7_fu_1053_p2;
    end
end

always @ (*) begin
    if (((icmp_ln191_fu_818_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_11 = 9'd0;
    end else begin
        ap_sig_allocacmp_i_11 = i_fu_130;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_10_ce0 = 1'b1;
    end else begin
        arr_2_I_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_11_ce0 = 1'b1;
    end else begin
        arr_2_I_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_12_ce0 = 1'b1;
    end else begin
        arr_2_I_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_13_ce0 = 1'b1;
    end else begin
        arr_2_I_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_14_ce0 = 1'b1;
    end else begin
        arr_2_I_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_15_ce0 = 1'b1;
    end else begin
        arr_2_I_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_1_ce0 = 1'b1;
    end else begin
        arr_2_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_2_ce0 = 1'b1;
    end else begin
        arr_2_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_3_ce0 = 1'b1;
    end else begin
        arr_2_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_4_ce0 = 1'b1;
    end else begin
        arr_2_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_5_ce0 = 1'b1;
    end else begin
        arr_2_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_6_ce0 = 1'b1;
    end else begin
        arr_2_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_7_ce0 = 1'b1;
    end else begin
        arr_2_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_8_ce0 = 1'b1;
    end else begin
        arr_2_I_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_9_ce0 = 1'b1;
    end else begin
        arr_2_I_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_I_ce0 = 1'b1;
    end else begin
        arr_2_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_10_ce0 = 1'b1;
    end else begin
        arr_2_Q_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_11_ce0 = 1'b1;
    end else begin
        arr_2_Q_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_12_ce0 = 1'b1;
    end else begin
        arr_2_Q_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_13_ce0 = 1'b1;
    end else begin
        arr_2_Q_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_14_ce0 = 1'b1;
    end else begin
        arr_2_Q_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_15_ce0 = 1'b1;
    end else begin
        arr_2_Q_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_1_ce0 = 1'b1;
    end else begin
        arr_2_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_2_ce0 = 1'b1;
    end else begin
        arr_2_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_3_ce0 = 1'b1;
    end else begin
        arr_2_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_4_ce0 = 1'b1;
    end else begin
        arr_2_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_5_ce0 = 1'b1;
    end else begin
        arr_2_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_6_ce0 = 1'b1;
    end else begin
        arr_2_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_7_ce0 = 1'b1;
    end else begin
        arr_2_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_8_ce0 = 1'b1;
    end else begin
        arr_2_Q_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_9_ce0 = 1'b1;
    end else begin
        arr_2_Q_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_2_Q_ce0 = 1'b1;
    end else begin
        arr_2_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_1_ce0 = 1'b1;
    end else begin
        arr_3_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_1_we0 = 1'b1;
    end else begin
        arr_3_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_2_ce0 = 1'b1;
    end else begin
        arr_3_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_2_we0 = 1'b1;
    end else begin
        arr_3_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_3_ce0 = 1'b1;
    end else begin
        arr_3_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_3_we0 = 1'b1;
    end else begin
        arr_3_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_4_ce0 = 1'b1;
    end else begin
        arr_3_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_1166_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_4_we0 = 1'b1;
    end else begin
        arr_3_I_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_5_ce0 = 1'b1;
    end else begin
        arr_3_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_1166_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_5_we0 = 1'b1;
    end else begin
        arr_3_I_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_6_ce0 = 1'b1;
    end else begin
        arr_3_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_1166_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_6_we0 = 1'b1;
    end else begin
        arr_3_I_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_7_ce0 = 1'b1;
    end else begin
        arr_3_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_1166_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_7_we0 = 1'b1;
    end else begin
        arr_3_I_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_ce0 = 1'b1;
    end else begin
        arr_3_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_I_we0 = 1'b1;
    end else begin
        arr_3_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_1_ce0 = 1'b1;
    end else begin
        arr_3_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_1_we0 = 1'b1;
    end else begin
        arr_3_Q_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_2_ce0 = 1'b1;
    end else begin
        arr_3_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_2_we0 = 1'b1;
    end else begin
        arr_3_Q_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_3_ce0 = 1'b1;
    end else begin
        arr_3_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_3_we0 = 1'b1;
    end else begin
        arr_3_Q_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_4_ce0 = 1'b1;
    end else begin
        arr_3_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_1166_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_4_we0 = 1'b1;
    end else begin
        arr_3_Q_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_5_ce0 = 1'b1;
    end else begin
        arr_3_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_1166_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_5_we0 = 1'b1;
    end else begin
        arr_3_Q_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_6_ce0 = 1'b1;
    end else begin
        arr_3_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_1166_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_6_we0 = 1'b1;
    end else begin
        arr_3_Q_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_7_ce0 = 1'b1;
    end else begin
        arr_3_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_1166_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_7_we0 = 1'b1;
    end else begin
        arr_3_Q_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_ce0 = 1'b1;
    end else begin
        arr_3_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        arr_3_Q_we0 = 1'b1;
    end else begin
        arr_3_Q_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln191_fu_824_p2 = (ap_sig_allocacmp_i_11 + 9'd16);

assign add_ln193_1_fu_857_p2 = ($signed(sext_ln193_3_fu_853_p1) + $signed(sext_ln193_2_fu_849_p1));

assign add_ln193_2_fu_871_p2 = ($signed(sext_ln193_5_fu_867_p1) + $signed(sext_ln193_4_fu_863_p1));

assign add_ln193_3_fu_885_p2 = ($signed(sext_ln193_7_fu_881_p1) + $signed(sext_ln193_6_fu_877_p1));

assign add_ln193_4_fu_955_p2 = ($signed(sext_ln193_9_fu_951_p1) + $signed(sext_ln193_8_fu_947_p1));

assign add_ln193_5_fu_969_p2 = ($signed(sext_ln193_11_fu_965_p1) + $signed(sext_ln193_10_fu_961_p1));

assign add_ln193_6_fu_983_p2 = ($signed(sext_ln193_13_fu_979_p1) + $signed(sext_ln193_12_fu_975_p1));

assign add_ln193_7_fu_997_p2 = ($signed(sext_ln193_15_fu_993_p1) + $signed(sext_ln193_14_fu_989_p1));

assign add_ln193_fu_843_p2 = ($signed(sext_ln193_1_fu_839_p1) + $signed(sext_ln193_fu_835_p1));

assign add_ln194_1_fu_913_p2 = ($signed(sext_ln194_3_fu_909_p1) + $signed(sext_ln194_2_fu_905_p1));

assign add_ln194_2_fu_927_p2 = ($signed(sext_ln194_5_fu_923_p1) + $signed(sext_ln194_4_fu_919_p1));

assign add_ln194_3_fu_941_p2 = ($signed(sext_ln194_7_fu_937_p1) + $signed(sext_ln194_6_fu_933_p1));

assign add_ln194_4_fu_1011_p2 = ($signed(sext_ln194_9_fu_1007_p1) + $signed(sext_ln194_8_fu_1003_p1));

assign add_ln194_5_fu_1025_p2 = ($signed(sext_ln194_11_fu_1021_p1) + $signed(sext_ln194_10_fu_1017_p1));

assign add_ln194_6_fu_1039_p2 = ($signed(sext_ln194_13_fu_1035_p1) + $signed(sext_ln194_12_fu_1031_p1));

assign add_ln194_7_fu_1053_p2 = ($signed(sext_ln194_15_fu_1049_p1) + $signed(sext_ln194_14_fu_1045_p1));

assign add_ln194_fu_899_p2 = ($signed(sext_ln194_1_fu_895_p1) + $signed(sext_ln194_fu_891_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign arr_2_I_10_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_11_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_12_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_13_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_14_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_15_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_1_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_2_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_3_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_4_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_5_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_6_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_7_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_8_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_9_address0 = zext_ln191_fu_776_p1;

assign arr_2_I_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_10_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_11_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_12_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_13_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_14_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_15_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_1_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_2_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_3_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_4_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_5_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_6_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_7_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_8_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_9_address0 = zext_ln191_fu_776_p1;

assign arr_2_Q_address0 = zext_ln191_fu_776_p1;

assign arr_3_I_1_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_I_1_d0 = add_ln193_1_reg_1255;

assign arr_3_I_2_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_I_2_d0 = add_ln193_2_reg_1260;

assign arr_3_I_3_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_I_3_d0 = add_ln193_3_reg_1265;

assign arr_3_I_4_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_I_4_d0 = add_ln193_4_reg_1290;

assign arr_3_I_5_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_I_5_d0 = add_ln193_5_reg_1295;

assign arr_3_I_6_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_I_6_d0 = add_ln193_6_reg_1300;

assign arr_3_I_7_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_I_7_d0 = add_ln193_7_reg_1305;

assign arr_3_I_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_I_d0 = add_ln193_reg_1250;

assign arr_3_Q_1_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_Q_1_d0 = add_ln194_1_reg_1275;

assign arr_3_Q_2_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_Q_2_d0 = add_ln194_2_reg_1280;

assign arr_3_Q_3_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_Q_3_d0 = add_ln194_3_reg_1285;

assign arr_3_Q_4_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_Q_4_d0 = add_ln194_4_reg_1310;

assign arr_3_Q_5_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_Q_5_d0 = add_ln194_5_reg_1315;

assign arr_3_Q_6_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_Q_6_d0 = add_ln194_6_reg_1320;

assign arr_3_Q_7_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_Q_7_d0 = add_ln194_7_reg_1325;

assign arr_3_Q_address0 = zext_ln191_reg_1066_pp0_iter1_reg;

assign arr_3_Q_d0 = add_ln194_reg_1270;

assign icmp_ln191_fu_818_p2 = ((or_ln191_fu_812_p2 < 9'd280) ? 1'b1 : 1'b0);

assign lshr_ln_fu_766_p4 = {{ap_sig_allocacmp_i_11[8:4]}};

assign or_ln191_fu_812_p2 = (ap_sig_allocacmp_i_11 | 9'd8);

assign sext_ln193_10_fu_961_p1 = $signed(arr_2_I_10_q0);

assign sext_ln193_11_fu_965_p1 = $signed(arr_2_I_11_q0);

assign sext_ln193_12_fu_975_p1 = $signed(arr_2_I_12_q0);

assign sext_ln193_13_fu_979_p1 = $signed(arr_2_I_13_q0);

assign sext_ln193_14_fu_989_p1 = $signed(arr_2_I_14_q0);

assign sext_ln193_15_fu_993_p1 = $signed(arr_2_I_15_q0);

assign sext_ln193_1_fu_839_p1 = $signed(arr_2_I_1_q0);

assign sext_ln193_2_fu_849_p1 = $signed(arr_2_I_2_q0);

assign sext_ln193_3_fu_853_p1 = $signed(arr_2_I_3_q0);

assign sext_ln193_4_fu_863_p1 = $signed(arr_2_I_4_q0);

assign sext_ln193_5_fu_867_p1 = $signed(arr_2_I_5_q0);

assign sext_ln193_6_fu_877_p1 = $signed(arr_2_I_6_q0);

assign sext_ln193_7_fu_881_p1 = $signed(arr_2_I_7_q0);

assign sext_ln193_8_fu_947_p1 = $signed(arr_2_I_8_q0);

assign sext_ln193_9_fu_951_p1 = $signed(arr_2_I_9_q0);

assign sext_ln193_fu_835_p1 = $signed(arr_2_I_q0);

assign sext_ln194_10_fu_1017_p1 = $signed(arr_2_Q_10_q0);

assign sext_ln194_11_fu_1021_p1 = $signed(arr_2_Q_11_q0);

assign sext_ln194_12_fu_1031_p1 = $signed(arr_2_Q_12_q0);

assign sext_ln194_13_fu_1035_p1 = $signed(arr_2_Q_13_q0);

assign sext_ln194_14_fu_1045_p1 = $signed(arr_2_Q_14_q0);

assign sext_ln194_15_fu_1049_p1 = $signed(arr_2_Q_15_q0);

assign sext_ln194_1_fu_895_p1 = $signed(arr_2_Q_1_q0);

assign sext_ln194_2_fu_905_p1 = $signed(arr_2_Q_2_q0);

assign sext_ln194_3_fu_909_p1 = $signed(arr_2_Q_3_q0);

assign sext_ln194_4_fu_919_p1 = $signed(arr_2_Q_4_q0);

assign sext_ln194_5_fu_923_p1 = $signed(arr_2_Q_5_q0);

assign sext_ln194_6_fu_933_p1 = $signed(arr_2_Q_6_q0);

assign sext_ln194_7_fu_937_p1 = $signed(arr_2_Q_7_q0);

assign sext_ln194_8_fu_1003_p1 = $signed(arr_2_Q_8_q0);

assign sext_ln194_9_fu_1007_p1 = $signed(arr_2_Q_9_q0);

assign sext_ln194_fu_891_p1 = $signed(arr_2_Q_q0);

assign zext_ln191_fu_776_p1 = lshr_ln_fu_766_p4;

always @ (posedge ap_clk) begin
    zext_ln191_reg_1066[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln191_reg_1066_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_191_13
