

================================================================
== Vitis HLS Report for 'receiver_Pipeline_VITIS_LOOP_244_21'
================================================================
* Date:           Tue May  7 17:59:14 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        receiver
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.161 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        4|        4|  40.000 ns|  40.000 ns|    4|    4|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_244_21  |        2|        2|         1|          1|          1|     2|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 4 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%arr_10_I_1 = alloca i32 1"   --->   Operation 5 'alloca' 'arr_10_I_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%arr_10_I_1_3 = alloca i32 1"   --->   Operation 6 'alloca' 'arr_10_I_1_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%arr_10_Q_1 = alloca i32 1"   --->   Operation 7 'alloca' 'arr_10_Q_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%arr_10_Q_1_3 = alloca i32 1"   --->   Operation 8 'alloca' 'arr_10_Q_1_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%arr_9_Q_3_0125_reload_read = read i24 @_ssdm_op_Read.ap_auto.i24, i24 %arr_9_Q_3_0125_reload"   --->   Operation 9 'read' 'arr_9_Q_3_0125_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%arr_9_Q_1_0123_reload_read = read i24 @_ssdm_op_Read.ap_auto.i24, i24 %arr_9_Q_1_0123_reload"   --->   Operation 10 'read' 'arr_9_Q_1_0123_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%arr_9_Q_2_0124_reload_read = read i24 @_ssdm_op_Read.ap_auto.i24, i24 %arr_9_Q_2_0124_reload"   --->   Operation 11 'read' 'arr_9_Q_2_0124_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%arr_9_Q_0_0_reload_read = read i24 @_ssdm_op_Read.ap_auto.i24, i24 %arr_9_Q_0_0_reload"   --->   Operation 12 'read' 'arr_9_Q_0_0_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%arr_9_I_3_0122_reload_read = read i24 @_ssdm_op_Read.ap_auto.i24, i24 %arr_9_I_3_0122_reload"   --->   Operation 13 'read' 'arr_9_I_3_0122_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%arr_9_I_1_0120_reload_read = read i24 @_ssdm_op_Read.ap_auto.i24, i24 %arr_9_I_1_0120_reload"   --->   Operation 14 'read' 'arr_9_I_1_0120_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%arr_9_I_2_0121_reload_read = read i24 @_ssdm_op_Read.ap_auto.i24, i24 %arr_9_I_2_0121_reload"   --->   Operation 15 'read' 'arr_9_I_2_0121_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%arr_9_I_0_0_reload_read = read i24 @_ssdm_op_Read.ap_auto.i24, i24 %arr_9_I_0_0_reload"   --->   Operation 16 'read' 'arr_9_I_0_0_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln0 = store i24 0, i24 %arr_10_Q_1"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln0 = store i24 0, i24 %arr_10_I_1"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body799"   --->   Operation 20 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.16>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%i_4 = load i3 %i" [receiver.cpp:245]   --->   Operation 21 'load' 'i_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 22 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %i_4, i32 2" [receiver.cpp:244]   --->   Operation 23 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln244 = br i1 %tmp, void %for.body799.split, void %_ZN13ap_fixed_baseILi25ELi11ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei.exit.i472_ifconv.exitStub" [receiver.cpp:244]   --->   Operation 24 'br' 'br_ln244' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%arr_10_I_1_load_1 = load i24 %arr_10_I_1" [receiver.cpp:245]   --->   Operation 25 'load' 'arr_10_I_1_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%arr_10_I_1_3_load_1 = load i24 %arr_10_I_1_3" [receiver.cpp:245]   --->   Operation 26 'load' 'arr_10_I_1_3_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%arr_10_Q_1_load_1 = load i24 %arr_10_Q_1" [receiver.cpp:246]   --->   Operation 27 'load' 'arr_10_Q_1_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%arr_10_Q_1_3_load_1 = load i24 %arr_10_Q_1_3" [receiver.cpp:246]   --->   Operation 28 'load' 'arr_10_Q_1_3_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%empty = trunc i3 %i_4" [receiver.cpp:245]   --->   Operation 29 'trunc' 'empty' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%speclooptripcount_ln244 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2" [receiver.cpp:244]   --->   Operation 30 'speclooptripcount' 'speclooptripcount_ln244' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%specloopname_ln244 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [receiver.cpp:244]   --->   Operation 31 'specloopname' 'specloopname_ln244' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.56ns)   --->   "%icmp_ln245 = icmp_eq  i2 %empty, i2 0" [receiver.cpp:245]   --->   Operation 32 'icmp' 'icmp_ln245' <Predicate = (!tmp)> <Delay = 1.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node arr_10_I_0)   --->   "%select_ln245 = select i1 %icmp_ln245, i24 %arr_9_I_0_0_reload_read, i24 %arr_9_I_2_0121_reload_read" [receiver.cpp:245]   --->   Operation 33 'select' 'select_ln245' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln245_1)   --->   "%or_ln245 = or i2 %empty, i2 1" [receiver.cpp:245]   --->   Operation 34 'or' 'or_ln245' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.56ns) (out node of the LUT)   --->   "%icmp_ln245_1 = icmp_eq  i2 %or_ln245, i2 1" [receiver.cpp:245]   --->   Operation 35 'icmp' 'icmp_ln245_1' <Predicate = (!tmp)> <Delay = 1.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node arr_10_I_0)   --->   "%select_ln245_1 = select i1 %icmp_ln245_1, i24 %arr_9_I_1_0120_reload_read, i24 %arr_9_I_3_0122_reload_read" [receiver.cpp:245]   --->   Operation 36 'select' 'select_ln245_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (2.31ns) (out node of the LUT)   --->   "%arr_10_I_0 = add i24 %select_ln245_1, i24 %select_ln245" [receiver.cpp:245]   --->   Operation 37 'add' 'arr_10_I_0' <Predicate = (!tmp)> <Delay = 2.31> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %i_4, i32 1" [receiver.cpp:245]   --->   Operation 38 'bitselect' 'tmp_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.69ns)   --->   "%arr_10_I_1_5 = select i1 %tmp_1, i24 %arr_10_I_0, i24 %arr_10_I_1_3_load_1" [receiver.cpp:245]   --->   Operation 39 'select' 'arr_10_I_1_5' <Predicate = (!tmp)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.69ns)   --->   "%arr_10_I_1_6 = select i1 %tmp_1, i24 %arr_10_I_1_load_1, i24 %arr_10_I_0" [receiver.cpp:245]   --->   Operation 40 'select' 'arr_10_I_1_6' <Predicate = (!tmp)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node arr_10_Q_0)   --->   "%select_ln246 = select i1 %icmp_ln245, i24 %arr_9_Q_0_0_reload_read, i24 %arr_9_Q_2_0124_reload_read" [receiver.cpp:246]   --->   Operation 41 'select' 'select_ln246' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node arr_10_Q_0)   --->   "%select_ln246_1 = select i1 %icmp_ln245_1, i24 %arr_9_Q_1_0123_reload_read, i24 %arr_9_Q_3_0125_reload_read" [receiver.cpp:246]   --->   Operation 42 'select' 'select_ln246_1' <Predicate = (!tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (2.31ns) (out node of the LUT)   --->   "%arr_10_Q_0 = add i24 %select_ln246_1, i24 %select_ln246" [receiver.cpp:246]   --->   Operation 43 'add' 'arr_10_Q_0' <Predicate = (!tmp)> <Delay = 2.31> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.69ns)   --->   "%arr_10_Q_1_5 = select i1 %tmp_1, i24 %arr_10_Q_0, i24 %arr_10_Q_1_3_load_1" [receiver.cpp:246]   --->   Operation 44 'select' 'arr_10_Q_1_5' <Predicate = (!tmp)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.69ns)   --->   "%arr_10_Q_1_6 = select i1 %tmp_1, i24 %arr_10_Q_1_load_1, i24 %arr_10_Q_0" [receiver.cpp:246]   --->   Operation 45 'select' 'arr_10_Q_1_6' <Predicate = (!tmp)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.65ns)   --->   "%add_ln244 = add i3 %i_4, i3 2" [receiver.cpp:244]   --->   Operation 46 'add' 'add_ln244' <Predicate = (!tmp)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%store_ln244 = store i24 %arr_10_Q_1_5, i24 %arr_10_Q_1_3" [receiver.cpp:244]   --->   Operation 47 'store' 'store_ln244' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.58ns)   --->   "%store_ln244 = store i24 %arr_10_Q_1_6, i24 %arr_10_Q_1" [receiver.cpp:244]   --->   Operation 48 'store' 'store_ln244' <Predicate = (!tmp)> <Delay = 1.58>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%store_ln244 = store i24 %arr_10_I_1_5, i24 %arr_10_I_1_3" [receiver.cpp:244]   --->   Operation 49 'store' 'store_ln244' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.58ns)   --->   "%store_ln244 = store i24 %arr_10_I_1_6, i24 %arr_10_I_1" [receiver.cpp:244]   --->   Operation 50 'store' 'store_ln244' <Predicate = (!tmp)> <Delay = 1.58>
ST_2 : Operation 51 [1/1] (1.58ns)   --->   "%store_ln244 = store i3 %add_ln244, i3 %i" [receiver.cpp:244]   --->   Operation 51 'store' 'store_ln244' <Predicate = (!tmp)> <Delay = 1.58>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln244 = br void %for.body799" [receiver.cpp:244]   --->   Operation 52 'br' 'br_ln244' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%arr_10_I_1_load = load i24 %arr_10_I_1"   --->   Operation 53 'load' 'arr_10_I_1_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%arr_10_I_1_3_load = load i24 %arr_10_I_1_3"   --->   Operation 54 'load' 'arr_10_I_1_3_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%arr_10_Q_1_load = load i24 %arr_10_Q_1"   --->   Operation 55 'load' 'arr_10_Q_1_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%arr_10_Q_1_3_load = load i24 %arr_10_Q_1_3"   --->   Operation 56 'load' 'arr_10_Q_1_3_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i24P0A, i24 %arr_10_Q_1_0127_out, i24 %arr_10_Q_1_3_load"   --->   Operation 57 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i24P0A, i24 %arr_10_Q_0_0_out, i24 %arr_10_Q_1_load"   --->   Operation 58 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i24P0A, i24 %arr_10_I_1_0126_out, i24 %arr_10_I_1_3_load"   --->   Operation 59 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i24P0A, i24 %arr_10_I_0_0_out, i24 %arr_10_I_1_load"   --->   Operation 60 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 61 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation ('arr_10_Q[1]') [16]  (0.000 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'arr_10_Q[1]' [26]  (1.588 ns)

 <State 2>: 6.161ns
The critical path consists of the following:
	'load' operation ('i', receiver.cpp:245) on local variable 'i' [31]  (0.000 ns)
	'icmp' operation ('icmp_ln245', receiver.cpp:245) [43]  (1.565 ns)
	'select' operation ('select_ln246', receiver.cpp:246) [52]  (0.000 ns)
	'add' operation ('arr_10_Q[0]', receiver.cpp:246) [54]  (2.314 ns)
	'select' operation ('arr_10_Q[1]', receiver.cpp:246) [56]  (0.694 ns)
	'store' operation ('store_ln244', receiver.cpp:244) of variable 'arr_10_Q[1]', receiver.cpp:246 on local variable 'arr_10_Q[1]' [59]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
