-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity receiver_receiver_Pipeline_VITIS_LOOP_159_10 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arr_I_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_I_ce0 : OUT STD_LOGIC;
    arr_I_we0 : OUT STD_LOGIC;
    arr_I_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_Q_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_Q_ce0 : OUT STD_LOGIC;
    arr_Q_we0 : OUT STD_LOGIC;
    arr_Q_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_I_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_I_1_ce0 : OUT STD_LOGIC;
    arr_I_1_we0 : OUT STD_LOGIC;
    arr_I_1_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_Q_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_Q_1_ce0 : OUT STD_LOGIC;
    arr_Q_1_we0 : OUT STD_LOGIC;
    arr_Q_1_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_I_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_I_2_ce0 : OUT STD_LOGIC;
    arr_I_2_we0 : OUT STD_LOGIC;
    arr_I_2_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_Q_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_Q_2_ce0 : OUT STD_LOGIC;
    arr_Q_2_we0 : OUT STD_LOGIC;
    arr_Q_2_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_I_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_I_3_ce0 : OUT STD_LOGIC;
    arr_I_3_we0 : OUT STD_LOGIC;
    arr_I_3_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_Q_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_Q_3_ce0 : OUT STD_LOGIC;
    arr_Q_3_we0 : OUT STD_LOGIC;
    arr_Q_3_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_I_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_I_4_ce0 : OUT STD_LOGIC;
    arr_I_4_we0 : OUT STD_LOGIC;
    arr_I_4_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_Q_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_Q_4_ce0 : OUT STD_LOGIC;
    arr_Q_4_we0 : OUT STD_LOGIC;
    arr_Q_4_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_I_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_I_5_ce0 : OUT STD_LOGIC;
    arr_I_5_we0 : OUT STD_LOGIC;
    arr_I_5_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_Q_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_Q_5_ce0 : OUT STD_LOGIC;
    arr_Q_5_we0 : OUT STD_LOGIC;
    arr_Q_5_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_I_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_I_6_ce0 : OUT STD_LOGIC;
    arr_I_6_we0 : OUT STD_LOGIC;
    arr_I_6_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_Q_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_Q_6_ce0 : OUT STD_LOGIC;
    arr_Q_6_we0 : OUT STD_LOGIC;
    arr_Q_6_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_I_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_I_7_ce0 : OUT STD_LOGIC;
    arr_I_7_we0 : OUT STD_LOGIC;
    arr_I_7_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    arr_Q_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    arr_Q_7_ce0 : OUT STD_LOGIC;
    arr_Q_7_we0 : OUT STD_LOGIC;
    arr_Q_7_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    matched_I_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_0_ce0 : OUT STD_LOGIC;
    matched_I_0_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_0_ce1 : OUT STD_LOGIC;
    matched_I_0_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_4_ce0 : OUT STD_LOGIC;
    matched_I_4_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_4_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_4_ce1 : OUT STD_LOGIC;
    matched_I_4_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_8_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_8_ce0 : OUT STD_LOGIC;
    matched_I_8_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_8_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_8_ce1 : OUT STD_LOGIC;
    matched_I_8_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_12_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_12_ce0 : OUT STD_LOGIC;
    matched_I_12_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_12_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_12_ce1 : OUT STD_LOGIC;
    matched_I_12_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_1_ce0 : OUT STD_LOGIC;
    matched_I_1_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_1_ce1 : OUT STD_LOGIC;
    matched_I_1_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_5_ce0 : OUT STD_LOGIC;
    matched_I_5_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_5_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_5_ce1 : OUT STD_LOGIC;
    matched_I_5_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_9_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_9_ce0 : OUT STD_LOGIC;
    matched_I_9_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_9_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_9_ce1 : OUT STD_LOGIC;
    matched_I_9_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_13_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_13_ce0 : OUT STD_LOGIC;
    matched_I_13_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_13_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_13_ce1 : OUT STD_LOGIC;
    matched_I_13_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_2_ce0 : OUT STD_LOGIC;
    matched_I_2_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_2_ce1 : OUT STD_LOGIC;
    matched_I_2_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_6_ce0 : OUT STD_LOGIC;
    matched_I_6_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_6_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_6_ce1 : OUT STD_LOGIC;
    matched_I_6_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_10_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_10_ce0 : OUT STD_LOGIC;
    matched_I_10_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_10_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_10_ce1 : OUT STD_LOGIC;
    matched_I_10_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_14_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_14_ce0 : OUT STD_LOGIC;
    matched_I_14_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_14_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_14_ce1 : OUT STD_LOGIC;
    matched_I_14_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_3_ce0 : OUT STD_LOGIC;
    matched_I_3_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_3_ce1 : OUT STD_LOGIC;
    matched_I_3_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_7_ce0 : OUT STD_LOGIC;
    matched_I_7_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_7_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_7_ce1 : OUT STD_LOGIC;
    matched_I_7_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_11_ce0 : OUT STD_LOGIC;
    matched_I_11_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_11_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_11_ce1 : OUT STD_LOGIC;
    matched_I_11_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_15_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_15_ce0 : OUT STD_LOGIC;
    matched_I_15_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_I_15_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_I_15_ce1 : OUT STD_LOGIC;
    matched_I_15_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_4_ce0 : OUT STD_LOGIC;
    matched_Q_4_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_12_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_12_ce0 : OUT STD_LOGIC;
    matched_Q_12_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_5_ce0 : OUT STD_LOGIC;
    matched_Q_5_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_13_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_13_ce0 : OUT STD_LOGIC;
    matched_Q_13_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_6_ce0 : OUT STD_LOGIC;
    matched_Q_6_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_14_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_14_ce0 : OUT STD_LOGIC;
    matched_Q_14_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_7_ce0 : OUT STD_LOGIC;
    matched_Q_7_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_15_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_15_ce0 : OUT STD_LOGIC;
    matched_Q_15_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_0_ce0 : OUT STD_LOGIC;
    matched_Q_0_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_8_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_8_ce0 : OUT STD_LOGIC;
    matched_Q_8_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_1_ce0 : OUT STD_LOGIC;
    matched_Q_1_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_9_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_9_ce0 : OUT STD_LOGIC;
    matched_Q_9_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_2_ce0 : OUT STD_LOGIC;
    matched_Q_2_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_10_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_10_ce0 : OUT STD_LOGIC;
    matched_Q_10_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_3_ce0 : OUT STD_LOGIC;
    matched_Q_3_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    matched_Q_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matched_Q_11_ce0 : OUT STD_LOGIC;
    matched_Q_11_q0 : IN STD_LOGIC_VECTOR (17 downto 0) );
end;


architecture behav of receiver_receiver_Pipeline_VITIS_LOOP_159_10 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_8C : STD_LOGIC_VECTOR (10 downto 0) := "00010001100";
    constant ap_const_lv11_4EC : STD_LOGIC_VECTOR (10 downto 0) := "10011101100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_774 : STD_LOGIC_VECTOR (10 downto 0) := "11101110100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_775 : STD_LOGIC_VECTOR (10 downto 0) := "11101110101";
    constant ap_const_lv11_776 : STD_LOGIC_VECTOR (10 downto 0) := "11101110110";
    constant ap_const_lv11_777 : STD_LOGIC_VECTOR (10 downto 0) := "11101110111";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv11_778 : STD_LOGIC_VECTOR (10 downto 0) := "11101111000";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_779 : STD_LOGIC_VECTOR (10 downto 0) := "11101111001";
    constant ap_const_lv11_6 : STD_LOGIC_VECTOR (10 downto 0) := "00000000110";
    constant ap_const_lv11_77A : STD_LOGIC_VECTOR (10 downto 0) := "11101111010";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv11_77B : STD_LOGIC_VECTOR (10 downto 0) := "11101111011";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln159_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal preamble_upsampled_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal preamble_upsampled_ce0 : STD_LOGIC;
    signal preamble_upsampled_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal preamble_upsampled_ce1 : STD_LOGIC;
    signal preamble_upsampled_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_address2 : STD_LOGIC_VECTOR (10 downto 0);
    signal preamble_upsampled_ce2 : STD_LOGIC;
    signal preamble_upsampled_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_address3 : STD_LOGIC_VECTOR (10 downto 0);
    signal preamble_upsampled_ce3 : STD_LOGIC;
    signal preamble_upsampled_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_address4 : STD_LOGIC_VECTOR (10 downto 0);
    signal preamble_upsampled_ce4 : STD_LOGIC;
    signal preamble_upsampled_q4 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_address5 : STD_LOGIC_VECTOR (10 downto 0);
    signal preamble_upsampled_ce5 : STD_LOGIC;
    signal preamble_upsampled_q5 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_address6 : STD_LOGIC_VECTOR (10 downto 0);
    signal preamble_upsampled_ce6 : STD_LOGIC;
    signal preamble_upsampled_q6 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_address7 : STD_LOGIC_VECTOR (10 downto 0);
    signal preamble_upsampled_ce7 : STD_LOGIC;
    signal preamble_upsampled_q7 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal empty_fu_1101_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_reg_2074 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_reg_2074_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln9_reg_2087 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln9_reg_2087_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln9_reg_2087_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_2_reg_2127 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_2_reg_2127_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_2_reg_2127_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_3_reg_2167 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_3_reg_2167_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_3_reg_2167_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_4_reg_2207 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_4_reg_2207_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_4_reg_2207_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_6_reg_2247 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_6_reg_2247_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_6_reg_2247_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_8_reg_2287 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_8_reg_2287_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_8_reg_2287_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_s_reg_2327 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_s_reg_2327_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_s_reg_2327_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_10_reg_2367 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_10_reg_2367_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln161_10_reg_2367_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal matched_I_0_load_reg_2407 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_4_load_reg_2412 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_8_load_reg_2417 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_12_load_1_reg_2422 : STD_LOGIC_VECTOR (17 downto 0);
    signal preamble_upsampled_load_reg_2427 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_load_1_reg_2432 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_load_2_reg_2437 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_load_3_reg_2442 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_load_4_reg_2447 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_load_5_reg_2452 : STD_LOGIC_VECTOR (16 downto 0);
    signal preamble_upsampled_load_6_reg_2457 : STD_LOGIC_VECTOR (16 downto 0);
    signal matched_I_1_load_reg_2462 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_5_load_reg_2467 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_9_load_reg_2472 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_13_load_reg_2477 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_2_load_reg_2482 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_6_load_reg_2487 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_10_load_reg_2492 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_14_load_reg_2497 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_3_load_reg_2502 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_7_load_reg_2507 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_11_load_reg_2512 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_15_load_reg_2517 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_0_load_1_reg_2522 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_4_load_1_reg_2527 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_8_load_1_reg_2532 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_12_load_2_reg_2537 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_1_load_1_reg_2542 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_5_load_1_reg_2547 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_9_load_1_reg_2552 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_13_load_1_reg_2557 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_2_load_1_reg_2562 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_6_load_1_reg_2567 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_10_load_1_reg_2572 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_14_load_1_reg_2577 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_3_load_1_reg_2582 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_7_load_1_reg_2587 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_11_load_1_reg_2592 : STD_LOGIC_VECTOR (17 downto 0);
    signal matched_I_15_load_1_reg_2597 : STD_LOGIC_VECTOR (17 downto 0);
    signal preamble_upsampled_load_7_reg_2602 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln162_fu_1431_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_reg_2607 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_1_fu_1439_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_1_reg_2612 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_2_fu_1447_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_2_reg_2617 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_3_fu_1455_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_3_reg_2622 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_4_fu_1463_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_4_reg_2627 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_5_fu_1471_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_5_reg_2632 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_6_fu_1479_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_6_reg_2637 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_7_fu_1487_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln162_7_reg_2642 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_fu_1495_p15 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_2647 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln161_fu_1522_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln161_reg_2652 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_5_fu_1525_p15 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_5_reg_2657 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln161_3_fu_1552_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln161_3_reg_2662 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_6_fu_1555_p15 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_6_reg_2667 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln161_5_fu_1582_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln161_5_reg_2672 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_7_fu_1585_p15 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_7_reg_2677 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln161_7_fu_1612_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln161_7_reg_2682 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_8_fu_1615_p15 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_8_reg_2687 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln161_9_fu_1642_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln161_9_reg_2692 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_9_fu_1645_p15 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_reg_2697 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln161_11_fu_1672_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln161_11_reg_2702 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_s_fu_1675_p15 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_s_reg_2707 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln161_13_fu_1702_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln161_13_reg_2712 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_10_fu_1705_p15 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_reg_2717 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln161_14_fu_1732_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln161_14_reg_2722 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln9_reg_2727 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln162_1_reg_2732 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln162_2_reg_2737 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln162_3_reg_2742 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln162_4_reg_2747 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln162_5_reg_2752 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln162_6_reg_2757 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln162_7_reg_2762 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln161_1_fu_1887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_1_reg_2767 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln8_reg_2772 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln161_3_fu_1909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_3_reg_2777 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_5_fu_1913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_5_reg_2782 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_7_fu_1917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_7_reg_2787 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_10_fu_1921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_10_reg_2792 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_13_fu_1925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_13_reg_2797 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_16_fu_1929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_16_reg_2802 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_19_fu_1933_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_19_reg_2807 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln161_1_reg_2812 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln161_2_reg_2817 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln161_3_reg_2822 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln161_4_reg_2827 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln161_5_reg_2832 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln161_6_reg_2837 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln161_7_reg_2842 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln159_fu_1115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln161_fu_1149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_2_fu_1170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_4_fu_1191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_6_fu_1212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_8_fu_1243_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_9_fu_1259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_11_fu_1290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_12_fu_1306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_14_fu_1337_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_15_fu_1353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_17_fu_1384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_18_fu_1400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_9_fu_170 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln159_4_fu_1415_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln8_fu_1105_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln161_fu_1143_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_1_fu_1164_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_2_fu_1185_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln161_3_fu_1206_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln159_fu_1227_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln161_5_fu_1233_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln161_4_fu_1253_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln159_1_fu_1274_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln161_7_fu_1280_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln161_5_fu_1300_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln159_2_fu_1321_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln161_9_fu_1327_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln161_6_fu_1347_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln159_3_fu_1368_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln161_1_fu_1374_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln161_7_fu_1394_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln162_fu_1426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln162_fu_1738_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln162_1_fu_1757_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln162_2_fu_1776_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln162_3_fu_1795_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln162_4_fu_1814_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln162_5_fu_1833_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln162_6_fu_1852_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln162_7_fu_1871_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln161_fu_1894_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln161_fu_1894_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln161_1_fu_1940_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln161_1_fu_1940_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln161_2_fu_1958_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln161_2_fu_1958_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln161_3_fu_1976_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln161_3_fu_1976_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln161_4_fu_1994_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln161_4_fu_1994_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln161_5_fu_2012_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln161_5_fu_2012_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln161_6_fu_2030_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln161_6_fu_2030_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln161_7_fu_2048_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln161_7_fu_2048_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component receiver_mux_13_4_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        din3 : IN STD_LOGIC_VECTOR (17 downto 0);
        din4 : IN STD_LOGIC_VECTOR (17 downto 0);
        din5 : IN STD_LOGIC_VECTOR (17 downto 0);
        din6 : IN STD_LOGIC_VECTOR (17 downto 0);
        din7 : IN STD_LOGIC_VECTOR (17 downto 0);
        din8 : IN STD_LOGIC_VECTOR (17 downto 0);
        din9 : IN STD_LOGIC_VECTOR (17 downto 0);
        din10 : IN STD_LOGIC_VECTOR (17 downto 0);
        din11 : IN STD_LOGIC_VECTOR (17 downto 0);
        din12 : IN STD_LOGIC_VECTOR (17 downto 0);
        din13 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component receiver_mul_18s_17s_34_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component receiver_mul_17s_18s_34_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component receiver_receiver_Pipeline_VITIS_LOOP_159_10_preamble_upsampled_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address4 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address5 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address6 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address7 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component receiver_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    preamble_upsampled_U : component receiver_receiver_Pipeline_VITIS_LOOP_159_10_preamble_upsampled_ROM_AUTO_1R
    generic map (
        DataWidth => 17,
        AddressRange => 1120,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => preamble_upsampled_address0,
        ce0 => preamble_upsampled_ce0,
        q0 => preamble_upsampled_q0,
        address1 => preamble_upsampled_address1,
        ce1 => preamble_upsampled_ce1,
        q1 => preamble_upsampled_q1,
        address2 => preamble_upsampled_address2,
        ce2 => preamble_upsampled_ce2,
        q2 => preamble_upsampled_q2,
        address3 => preamble_upsampled_address3,
        ce3 => preamble_upsampled_ce3,
        q3 => preamble_upsampled_q3,
        address4 => preamble_upsampled_address4,
        ce4 => preamble_upsampled_ce4,
        q4 => preamble_upsampled_q4,
        address5 => preamble_upsampled_address5,
        ce5 => preamble_upsampled_ce5,
        q5 => preamble_upsampled_q5,
        address6 => preamble_upsampled_address6,
        ce6 => preamble_upsampled_ce6,
        q6 => preamble_upsampled_q6,
        address7 => preamble_upsampled_address7,
        ce7 => preamble_upsampled_ce7,
        q7 => preamble_upsampled_q7);

    mux_13_4_18_1_1_U257 : component receiver_mux_13_4_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        din4_WIDTH => 18,
        din5_WIDTH => 18,
        din6_WIDTH => 18,
        din7_WIDTH => 18,
        din8_WIDTH => 18,
        din9_WIDTH => 18,
        din10_WIDTH => 18,
        din11_WIDTH => 18,
        din12_WIDTH => 18,
        din13_WIDTH => 4,
        dout_WIDTH => 18)
    port map (
        din0 => matched_I_0_load_reg_2407,
        din1 => ap_const_lv18_0,
        din2 => ap_const_lv18_0,
        din3 => ap_const_lv18_0,
        din4 => matched_I_4_load_reg_2412,
        din5 => ap_const_lv18_0,
        din6 => ap_const_lv18_0,
        din7 => ap_const_lv18_0,
        din8 => matched_I_8_load_reg_2417,
        din9 => ap_const_lv18_0,
        din10 => ap_const_lv18_0,
        din11 => ap_const_lv18_0,
        din12 => matched_I_12_load_1_reg_2422,
        din13 => empty_reg_2074_pp0_iter1_reg,
        dout => tmp_4_fu_1495_p15);

    mux_13_4_18_1_1_U258 : component receiver_mux_13_4_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        din4_WIDTH => 18,
        din5_WIDTH => 18,
        din6_WIDTH => 18,
        din7_WIDTH => 18,
        din8_WIDTH => 18,
        din9_WIDTH => 18,
        din10_WIDTH => 18,
        din11_WIDTH => 18,
        din12_WIDTH => 18,
        din13_WIDTH => 4,
        dout_WIDTH => 18)
    port map (
        din0 => matched_I_1_load_reg_2462,
        din1 => ap_const_lv18_0,
        din2 => ap_const_lv18_0,
        din3 => ap_const_lv18_0,
        din4 => matched_I_5_load_reg_2467,
        din5 => ap_const_lv18_0,
        din6 => ap_const_lv18_0,
        din7 => ap_const_lv18_0,
        din8 => matched_I_9_load_reg_2472,
        din9 => ap_const_lv18_0,
        din10 => ap_const_lv18_0,
        din11 => ap_const_lv18_0,
        din12 => matched_I_13_load_reg_2477,
        din13 => empty_reg_2074_pp0_iter1_reg,
        dout => tmp_5_fu_1525_p15);

    mux_13_4_18_1_1_U259 : component receiver_mux_13_4_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        din4_WIDTH => 18,
        din5_WIDTH => 18,
        din6_WIDTH => 18,
        din7_WIDTH => 18,
        din8_WIDTH => 18,
        din9_WIDTH => 18,
        din10_WIDTH => 18,
        din11_WIDTH => 18,
        din12_WIDTH => 18,
        din13_WIDTH => 4,
        dout_WIDTH => 18)
    port map (
        din0 => matched_I_2_load_reg_2482,
        din1 => ap_const_lv18_0,
        din2 => ap_const_lv18_0,
        din3 => ap_const_lv18_0,
        din4 => matched_I_6_load_reg_2487,
        din5 => ap_const_lv18_0,
        din6 => ap_const_lv18_0,
        din7 => ap_const_lv18_0,
        din8 => matched_I_10_load_reg_2492,
        din9 => ap_const_lv18_0,
        din10 => ap_const_lv18_0,
        din11 => ap_const_lv18_0,
        din12 => matched_I_14_load_reg_2497,
        din13 => empty_reg_2074_pp0_iter1_reg,
        dout => tmp_6_fu_1555_p15);

    mux_13_4_18_1_1_U260 : component receiver_mux_13_4_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        din4_WIDTH => 18,
        din5_WIDTH => 18,
        din6_WIDTH => 18,
        din7_WIDTH => 18,
        din8_WIDTH => 18,
        din9_WIDTH => 18,
        din10_WIDTH => 18,
        din11_WIDTH => 18,
        din12_WIDTH => 18,
        din13_WIDTH => 4,
        dout_WIDTH => 18)
    port map (
        din0 => matched_I_3_load_reg_2502,
        din1 => ap_const_lv18_0,
        din2 => ap_const_lv18_0,
        din3 => ap_const_lv18_0,
        din4 => matched_I_7_load_reg_2507,
        din5 => ap_const_lv18_0,
        din6 => ap_const_lv18_0,
        din7 => ap_const_lv18_0,
        din8 => matched_I_11_load_reg_2512,
        din9 => ap_const_lv18_0,
        din10 => ap_const_lv18_0,
        din11 => ap_const_lv18_0,
        din12 => matched_I_15_load_reg_2517,
        din13 => empty_reg_2074_pp0_iter1_reg,
        dout => tmp_7_fu_1585_p15);

    mux_13_4_18_1_1_U261 : component receiver_mux_13_4_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        din4_WIDTH => 18,
        din5_WIDTH => 18,
        din6_WIDTH => 18,
        din7_WIDTH => 18,
        din8_WIDTH => 18,
        din9_WIDTH => 18,
        din10_WIDTH => 18,
        din11_WIDTH => 18,
        din12_WIDTH => 18,
        din13_WIDTH => 4,
        dout_WIDTH => 18)
    port map (
        din0 => matched_I_4_load_1_reg_2527,
        din1 => ap_const_lv18_0,
        din2 => ap_const_lv18_0,
        din3 => ap_const_lv18_0,
        din4 => matched_I_8_load_1_reg_2532,
        din5 => ap_const_lv18_0,
        din6 => ap_const_lv18_0,
        din7 => ap_const_lv18_0,
        din8 => matched_I_12_load_2_reg_2537,
        din9 => ap_const_lv18_0,
        din10 => ap_const_lv18_0,
        din11 => ap_const_lv18_0,
        din12 => matched_I_0_load_1_reg_2522,
        din13 => empty_reg_2074_pp0_iter1_reg,
        dout => tmp_8_fu_1615_p15);

    mux_13_4_18_1_1_U262 : component receiver_mux_13_4_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        din4_WIDTH => 18,
        din5_WIDTH => 18,
        din6_WIDTH => 18,
        din7_WIDTH => 18,
        din8_WIDTH => 18,
        din9_WIDTH => 18,
        din10_WIDTH => 18,
        din11_WIDTH => 18,
        din12_WIDTH => 18,
        din13_WIDTH => 4,
        dout_WIDTH => 18)
    port map (
        din0 => matched_I_5_load_1_reg_2547,
        din1 => ap_const_lv18_0,
        din2 => ap_const_lv18_0,
        din3 => ap_const_lv18_0,
        din4 => matched_I_9_load_1_reg_2552,
        din5 => ap_const_lv18_0,
        din6 => ap_const_lv18_0,
        din7 => ap_const_lv18_0,
        din8 => matched_I_13_load_1_reg_2557,
        din9 => ap_const_lv18_0,
        din10 => ap_const_lv18_0,
        din11 => ap_const_lv18_0,
        din12 => matched_I_1_load_1_reg_2542,
        din13 => empty_reg_2074_pp0_iter1_reg,
        dout => tmp_9_fu_1645_p15);

    mux_13_4_18_1_1_U263 : component receiver_mux_13_4_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        din4_WIDTH => 18,
        din5_WIDTH => 18,
        din6_WIDTH => 18,
        din7_WIDTH => 18,
        din8_WIDTH => 18,
        din9_WIDTH => 18,
        din10_WIDTH => 18,
        din11_WIDTH => 18,
        din12_WIDTH => 18,
        din13_WIDTH => 4,
        dout_WIDTH => 18)
    port map (
        din0 => matched_I_6_load_1_reg_2567,
        din1 => ap_const_lv18_0,
        din2 => ap_const_lv18_0,
        din3 => ap_const_lv18_0,
        din4 => matched_I_10_load_1_reg_2572,
        din5 => ap_const_lv18_0,
        din6 => ap_const_lv18_0,
        din7 => ap_const_lv18_0,
        din8 => matched_I_14_load_1_reg_2577,
        din9 => ap_const_lv18_0,
        din10 => ap_const_lv18_0,
        din11 => ap_const_lv18_0,
        din12 => matched_I_2_load_1_reg_2562,
        din13 => empty_reg_2074_pp0_iter1_reg,
        dout => tmp_s_fu_1675_p15);

    mux_13_4_18_1_1_U264 : component receiver_mux_13_4_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        din3_WIDTH => 18,
        din4_WIDTH => 18,
        din5_WIDTH => 18,
        din6_WIDTH => 18,
        din7_WIDTH => 18,
        din8_WIDTH => 18,
        din9_WIDTH => 18,
        din10_WIDTH => 18,
        din11_WIDTH => 18,
        din12_WIDTH => 18,
        din13_WIDTH => 4,
        dout_WIDTH => 18)
    port map (
        din0 => matched_I_7_load_1_reg_2587,
        din1 => ap_const_lv18_0,
        din2 => ap_const_lv18_0,
        din3 => ap_const_lv18_0,
        din4 => matched_I_11_load_1_reg_2592,
        din5 => ap_const_lv18_0,
        din6 => ap_const_lv18_0,
        din7 => ap_const_lv18_0,
        din8 => matched_I_15_load_1_reg_2597,
        din9 => ap_const_lv18_0,
        din10 => ap_const_lv18_0,
        din11 => ap_const_lv18_0,
        din12 => matched_I_3_load_1_reg_2582,
        din13 => empty_reg_2074_pp0_iter1_reg,
        dout => tmp_10_fu_1705_p15);

    mul_18s_17s_34_1_1_U265 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => select_ln162_reg_2607,
        din1 => preamble_upsampled_load_reg_2427,
        dout => mul_ln162_fu_1738_p2);

    mul_18s_17s_34_1_1_U266 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => select_ln162_1_reg_2612,
        din1 => preamble_upsampled_load_1_reg_2432,
        dout => mul_ln162_1_fu_1757_p2);

    mul_18s_17s_34_1_1_U267 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => select_ln162_2_reg_2617,
        din1 => preamble_upsampled_load_2_reg_2437,
        dout => mul_ln162_2_fu_1776_p2);

    mul_18s_17s_34_1_1_U268 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => select_ln162_3_reg_2622,
        din1 => preamble_upsampled_load_3_reg_2442,
        dout => mul_ln162_3_fu_1795_p2);

    mul_18s_17s_34_1_1_U269 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => select_ln162_4_reg_2627,
        din1 => preamble_upsampled_load_4_reg_2447,
        dout => mul_ln162_4_fu_1814_p2);

    mul_18s_17s_34_1_1_U270 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => select_ln162_5_reg_2632,
        din1 => preamble_upsampled_load_5_reg_2452,
        dout => mul_ln162_5_fu_1833_p2);

    mul_18s_17s_34_1_1_U271 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => select_ln162_6_reg_2637,
        din1 => preamble_upsampled_load_6_reg_2457,
        dout => mul_ln162_6_fu_1852_p2);

    mul_18s_17s_34_1_1_U272 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => select_ln162_7_reg_2642,
        din1 => preamble_upsampled_load_7_reg_2602,
        dout => mul_ln162_7_fu_1871_p2);

    mul_17s_18s_34_1_1_U273 : component receiver_mul_17s_18s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 34)
    port map (
        din0 => mul_ln161_fu_1894_p0,
        din1 => tmp_4_reg_2647,
        dout => mul_ln161_fu_1894_p2);

    mul_18s_17s_34_1_1_U274 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => tmp_5_reg_2657,
        din1 => mul_ln161_1_fu_1940_p1,
        dout => mul_ln161_1_fu_1940_p2);

    mul_18s_17s_34_1_1_U275 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => tmp_6_reg_2667,
        din1 => mul_ln161_2_fu_1958_p1,
        dout => mul_ln161_2_fu_1958_p2);

    mul_18s_17s_34_1_1_U276 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => tmp_7_reg_2677,
        din1 => mul_ln161_3_fu_1976_p1,
        dout => mul_ln161_3_fu_1976_p2);

    mul_18s_17s_34_1_1_U277 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => tmp_8_reg_2687,
        din1 => mul_ln161_4_fu_1994_p1,
        dout => mul_ln161_4_fu_1994_p2);

    mul_18s_17s_34_1_1_U278 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => tmp_9_reg_2697,
        din1 => mul_ln161_5_fu_2012_p1,
        dout => mul_ln161_5_fu_2012_p2);

    mul_18s_17s_34_1_1_U279 : component receiver_mul_18s_17s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 34)
    port map (
        din0 => tmp_s_reg_2707,
        din1 => mul_ln161_6_fu_2030_p1,
        dout => mul_ln161_6_fu_2030_p2);

    mul_17s_18s_34_1_1_U280 : component receiver_mul_17s_18s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 18,
        dout_WIDTH => 34)
    port map (
        din0 => mul_ln161_7_fu_2048_p0,
        din1 => tmp_10_reg_2717,
        dout => mul_ln161_7_fu_2048_p2);

    flow_control_loop_pipe_sequential_init_U : component receiver_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    i_9_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln159_fu_1095_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_9_fu_170 <= add_ln159_4_fu_1415_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_9_fu_170 <= ap_const_lv11_8C;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                empty_reg_2074_pp0_iter1_reg <= empty_reg_2074;
                lshr_ln161_10_reg_2367_pp0_iter1_reg <= lshr_ln161_10_reg_2367;
                lshr_ln161_2_reg_2127_pp0_iter1_reg <= lshr_ln161_2_reg_2127;
                lshr_ln161_3_reg_2167_pp0_iter1_reg <= lshr_ln161_3_reg_2167;
                lshr_ln161_4_reg_2207_pp0_iter1_reg <= lshr_ln161_4_reg_2207;
                lshr_ln161_6_reg_2247_pp0_iter1_reg <= lshr_ln161_6_reg_2247;
                lshr_ln161_8_reg_2287_pp0_iter1_reg <= lshr_ln161_8_reg_2287;
                lshr_ln161_s_reg_2327_pp0_iter1_reg <= lshr_ln161_s_reg_2327;
                lshr_ln9_reg_2087_pp0_iter1_reg <= lshr_ln9_reg_2087;
                select_ln162_1_reg_2612 <= select_ln162_1_fu_1439_p3;
                select_ln162_2_reg_2617 <= select_ln162_2_fu_1447_p3;
                select_ln162_3_reg_2622 <= select_ln162_3_fu_1455_p3;
                select_ln162_4_reg_2627 <= select_ln162_4_fu_1463_p3;
                select_ln162_5_reg_2632 <= select_ln162_5_fu_1471_p3;
                select_ln162_6_reg_2637 <= select_ln162_6_fu_1479_p3;
                select_ln162_7_reg_2642 <= select_ln162_7_fu_1487_p3;
                select_ln162_reg_2607 <= select_ln162_fu_1431_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                lshr_ln161_10_reg_2367_pp0_iter2_reg <= lshr_ln161_10_reg_2367_pp0_iter1_reg;
                lshr_ln161_2_reg_2127_pp0_iter2_reg <= lshr_ln161_2_reg_2127_pp0_iter1_reg;
                lshr_ln161_3_reg_2167_pp0_iter2_reg <= lshr_ln161_3_reg_2167_pp0_iter1_reg;
                lshr_ln161_4_reg_2207_pp0_iter2_reg <= lshr_ln161_4_reg_2207_pp0_iter1_reg;
                lshr_ln161_6_reg_2247_pp0_iter2_reg <= lshr_ln161_6_reg_2247_pp0_iter1_reg;
                lshr_ln161_8_reg_2287_pp0_iter2_reg <= lshr_ln161_8_reg_2287_pp0_iter1_reg;
                lshr_ln161_s_reg_2327_pp0_iter2_reg <= lshr_ln161_s_reg_2327_pp0_iter1_reg;
                lshr_ln9_reg_2087_pp0_iter2_reg <= lshr_ln9_reg_2087_pp0_iter1_reg;
                sext_ln161_11_reg_2702 <= sext_ln161_11_fu_1672_p1;
                sext_ln161_13_reg_2712 <= sext_ln161_13_fu_1702_p1;
                sext_ln161_14_reg_2722 <= sext_ln161_14_fu_1732_p1;
                sext_ln161_3_reg_2662 <= sext_ln161_3_fu_1552_p1;
                sext_ln161_5_reg_2672 <= sext_ln161_5_fu_1582_p1;
                sext_ln161_7_reg_2682 <= sext_ln161_7_fu_1612_p1;
                sext_ln161_9_reg_2692 <= sext_ln161_9_fu_1642_p1;
                sext_ln161_reg_2652 <= sext_ln161_fu_1522_p1;
                tmp_10_reg_2717 <= tmp_10_fu_1705_p15;
                tmp_4_reg_2647 <= tmp_4_fu_1495_p15;
                tmp_5_reg_2657 <= tmp_5_fu_1525_p15;
                tmp_6_reg_2667 <= tmp_6_fu_1555_p15;
                tmp_7_reg_2677 <= tmp_7_fu_1585_p15;
                tmp_8_reg_2687 <= tmp_8_fu_1615_p15;
                tmp_9_reg_2697 <= tmp_9_fu_1645_p15;
                tmp_s_reg_2707 <= tmp_s_fu_1675_p15;
                trunc_ln161_1_reg_2812 <= mul_ln161_1_fu_1940_p2(33 downto 16);
                trunc_ln161_2_reg_2817 <= mul_ln161_2_fu_1958_p2(33 downto 16);
                trunc_ln161_3_reg_2822 <= mul_ln161_3_fu_1976_p2(33 downto 16);
                trunc_ln161_4_reg_2827 <= mul_ln161_4_fu_1994_p2(33 downto 16);
                trunc_ln161_5_reg_2832 <= mul_ln161_5_fu_2012_p2(33 downto 16);
                trunc_ln161_6_reg_2837 <= mul_ln161_6_fu_2030_p2(33 downto 16);
                trunc_ln161_7_reg_2842 <= mul_ln161_7_fu_2048_p2(33 downto 16);
                trunc_ln162_1_reg_2732 <= mul_ln162_1_fu_1757_p2(33 downto 16);
                trunc_ln162_2_reg_2737 <= mul_ln162_2_fu_1776_p2(33 downto 16);
                trunc_ln162_3_reg_2742 <= mul_ln162_3_fu_1795_p2(33 downto 16);
                trunc_ln162_4_reg_2747 <= mul_ln162_4_fu_1814_p2(33 downto 16);
                trunc_ln162_5_reg_2752 <= mul_ln162_5_fu_1833_p2(33 downto 16);
                trunc_ln162_6_reg_2757 <= mul_ln162_6_fu_1852_p2(33 downto 16);
                trunc_ln162_7_reg_2762 <= mul_ln162_7_fu_1871_p2(33 downto 16);
                trunc_ln8_reg_2772 <= mul_ln161_fu_1894_p2(33 downto 16);
                trunc_ln9_reg_2727 <= mul_ln162_fu_1738_p2(33 downto 16);
                    zext_ln161_10_reg_2792(7 downto 0) <= zext_ln161_10_fu_1921_p1(7 downto 0);
                    zext_ln161_13_reg_2797(7 downto 0) <= zext_ln161_13_fu_1925_p1(7 downto 0);
                    zext_ln161_16_reg_2802(7 downto 0) <= zext_ln161_16_fu_1929_p1(7 downto 0);
                    zext_ln161_19_reg_2807(7 downto 0) <= zext_ln161_19_fu_1933_p1(7 downto 0);
                    zext_ln161_1_reg_2767(7 downto 0) <= zext_ln161_1_fu_1887_p1(7 downto 0);
                    zext_ln161_3_reg_2777(7 downto 0) <= zext_ln161_3_fu_1909_p1(7 downto 0);
                    zext_ln161_5_reg_2782(7 downto 0) <= zext_ln161_5_fu_1913_p1(7 downto 0);
                    zext_ln161_7_reg_2787(7 downto 0) <= zext_ln161_7_fu_1917_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln159_fu_1095_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_reg_2074 <= empty_fu_1101_p1;
                lshr_ln161_10_reg_2367 <= add_ln161_7_fu_1394_p2(10 downto 3);
                lshr_ln161_2_reg_2127 <= add_ln161_1_fu_1164_p2(10 downto 3);
                lshr_ln161_3_reg_2167 <= add_ln161_2_fu_1185_p2(10 downto 3);
                lshr_ln161_4_reg_2207 <= add_ln161_3_fu_1206_p2(10 downto 3);
                lshr_ln161_6_reg_2247 <= add_ln161_4_fu_1253_p2(10 downto 3);
                lshr_ln161_8_reg_2287 <= add_ln161_5_fu_1300_p2(10 downto 3);
                lshr_ln161_s_reg_2327 <= add_ln161_6_fu_1347_p2(10 downto 3);
                lshr_ln9_reg_2087 <= add_ln161_fu_1143_p2(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                matched_I_0_load_1_reg_2522 <= matched_I_0_q0;
                matched_I_0_load_reg_2407 <= matched_I_0_q1;
                matched_I_10_load_1_reg_2572 <= matched_I_10_q0;
                matched_I_10_load_reg_2492 <= matched_I_10_q1;
                matched_I_11_load_1_reg_2592 <= matched_I_11_q0;
                matched_I_11_load_reg_2512 <= matched_I_11_q1;
                matched_I_12_load_1_reg_2422 <= matched_I_12_q1;
                matched_I_12_load_2_reg_2537 <= matched_I_12_q0;
                matched_I_13_load_1_reg_2557 <= matched_I_13_q0;
                matched_I_13_load_reg_2477 <= matched_I_13_q1;
                matched_I_14_load_1_reg_2577 <= matched_I_14_q0;
                matched_I_14_load_reg_2497 <= matched_I_14_q1;
                matched_I_15_load_1_reg_2597 <= matched_I_15_q0;
                matched_I_15_load_reg_2517 <= matched_I_15_q1;
                matched_I_1_load_1_reg_2542 <= matched_I_1_q0;
                matched_I_1_load_reg_2462 <= matched_I_1_q1;
                matched_I_2_load_1_reg_2562 <= matched_I_2_q0;
                matched_I_2_load_reg_2482 <= matched_I_2_q1;
                matched_I_3_load_1_reg_2582 <= matched_I_3_q0;
                matched_I_3_load_reg_2502 <= matched_I_3_q1;
                matched_I_4_load_1_reg_2527 <= matched_I_4_q0;
                matched_I_4_load_reg_2412 <= matched_I_4_q1;
                matched_I_5_load_1_reg_2547 <= matched_I_5_q0;
                matched_I_5_load_reg_2467 <= matched_I_5_q1;
                matched_I_6_load_1_reg_2567 <= matched_I_6_q0;
                matched_I_6_load_reg_2487 <= matched_I_6_q1;
                matched_I_7_load_1_reg_2587 <= matched_I_7_q0;
                matched_I_7_load_reg_2507 <= matched_I_7_q1;
                matched_I_8_load_1_reg_2532 <= matched_I_8_q0;
                matched_I_8_load_reg_2417 <= matched_I_8_q1;
                matched_I_9_load_1_reg_2552 <= matched_I_9_q0;
                matched_I_9_load_reg_2472 <= matched_I_9_q1;
                preamble_upsampled_load_1_reg_2432 <= preamble_upsampled_q6;
                preamble_upsampled_load_2_reg_2437 <= preamble_upsampled_q5;
                preamble_upsampled_load_3_reg_2442 <= preamble_upsampled_q4;
                preamble_upsampled_load_4_reg_2447 <= preamble_upsampled_q3;
                preamble_upsampled_load_5_reg_2452 <= preamble_upsampled_q2;
                preamble_upsampled_load_6_reg_2457 <= preamble_upsampled_q1;
                preamble_upsampled_load_7_reg_2602 <= preamble_upsampled_q0;
                preamble_upsampled_load_reg_2427 <= preamble_upsampled_q7;
            end if;
        end if;
    end process;
    zext_ln161_1_reg_2767(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln161_3_reg_2777(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln161_5_reg_2782(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln161_7_reg_2787(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln161_10_reg_2792(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln161_13_reg_2797(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln161_16_reg_2802(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln161_19_reg_2807(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln159_1_fu_1274_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_5));
    add_ln159_2_fu_1321_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_6));
    add_ln159_3_fu_1368_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_7));
    add_ln159_4_fu_1415_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_8));
    add_ln159_fu_1227_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_4));
    add_ln161_1_fu_1164_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_775));
    add_ln161_2_fu_1185_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_776));
    add_ln161_3_fu_1206_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_777));
    add_ln161_4_fu_1253_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_778));
    add_ln161_5_fu_1300_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_779));
    add_ln161_6_fu_1347_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_77A));
    add_ln161_7_fu_1394_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_77B));
    add_ln161_fu_1143_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv11_774));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln159_fu_1095_p2)
    begin
        if (((icmp_ln159_fu_1095_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_9_fu_170, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i <= ap_const_lv11_8C;
        else 
            ap_sig_allocacmp_i <= i_9_fu_170;
        end if; 
    end process;

    arr_I_1_address0 <= zext_ln161_3_reg_2777(8 - 1 downto 0);

    arr_I_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_1_ce0 <= ap_const_logic_1;
        else 
            arr_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_1_d0 <= trunc_ln161_1_reg_2812;

    arr_I_1_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_1_we0 <= ap_const_logic_1;
        else 
            arr_I_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_2_address0 <= zext_ln161_5_reg_2782(8 - 1 downto 0);

    arr_I_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_2_ce0 <= ap_const_logic_1;
        else 
            arr_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_2_d0 <= trunc_ln161_2_reg_2817;

    arr_I_2_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_2_we0 <= ap_const_logic_1;
        else 
            arr_I_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_3_address0 <= zext_ln161_7_reg_2787(8 - 1 downto 0);

    arr_I_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_3_ce0 <= ap_const_logic_1;
        else 
            arr_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_3_d0 <= trunc_ln161_3_reg_2822;

    arr_I_3_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_3_we0 <= ap_const_logic_1;
        else 
            arr_I_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_4_address0 <= zext_ln161_10_reg_2792(8 - 1 downto 0);

    arr_I_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_4_ce0 <= ap_const_logic_1;
        else 
            arr_I_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_4_d0 <= trunc_ln161_4_reg_2827;

    arr_I_4_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_4_we0 <= ap_const_logic_1;
        else 
            arr_I_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_5_address0 <= zext_ln161_13_reg_2797(8 - 1 downto 0);

    arr_I_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_5_ce0 <= ap_const_logic_1;
        else 
            arr_I_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_5_d0 <= trunc_ln161_5_reg_2832;

    arr_I_5_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_5_we0 <= ap_const_logic_1;
        else 
            arr_I_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_6_address0 <= zext_ln161_16_reg_2802(8 - 1 downto 0);

    arr_I_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_6_ce0 <= ap_const_logic_1;
        else 
            arr_I_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_6_d0 <= trunc_ln161_6_reg_2837;

    arr_I_6_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_6_we0 <= ap_const_logic_1;
        else 
            arr_I_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_7_address0 <= zext_ln161_19_reg_2807(8 - 1 downto 0);

    arr_I_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_7_ce0 <= ap_const_logic_1;
        else 
            arr_I_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_7_d0 <= trunc_ln161_7_reg_2842;

    arr_I_7_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_7_we0 <= ap_const_logic_1;
        else 
            arr_I_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_address0 <= zext_ln161_1_reg_2767(8 - 1 downto 0);

    arr_I_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_ce0 <= ap_const_logic_1;
        else 
            arr_I_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_I_d0 <= trunc_ln8_reg_2772;

    arr_I_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            arr_I_we0 <= ap_const_logic_1;
        else 
            arr_I_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_1_address0 <= zext_ln161_3_fu_1909_p1(8 - 1 downto 0);

    arr_Q_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_1_ce0 <= ap_const_logic_1;
        else 
            arr_Q_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_1_d0 <= trunc_ln162_1_reg_2732;

    arr_Q_1_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_1_we0 <= ap_const_logic_1;
        else 
            arr_Q_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_2_address0 <= zext_ln161_5_fu_1913_p1(8 - 1 downto 0);

    arr_Q_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_2_ce0 <= ap_const_logic_1;
        else 
            arr_Q_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_2_d0 <= trunc_ln162_2_reg_2737;

    arr_Q_2_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_2_we0 <= ap_const_logic_1;
        else 
            arr_Q_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_3_address0 <= zext_ln161_7_fu_1917_p1(8 - 1 downto 0);

    arr_Q_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_3_ce0 <= ap_const_logic_1;
        else 
            arr_Q_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_3_d0 <= trunc_ln162_3_reg_2742;

    arr_Q_3_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_3_we0 <= ap_const_logic_1;
        else 
            arr_Q_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_4_address0 <= zext_ln161_10_fu_1921_p1(8 - 1 downto 0);

    arr_Q_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_4_ce0 <= ap_const_logic_1;
        else 
            arr_Q_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_4_d0 <= trunc_ln162_4_reg_2747;

    arr_Q_4_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_4_we0 <= ap_const_logic_1;
        else 
            arr_Q_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_5_address0 <= zext_ln161_13_fu_1925_p1(8 - 1 downto 0);

    arr_Q_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_5_ce0 <= ap_const_logic_1;
        else 
            arr_Q_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_5_d0 <= trunc_ln162_5_reg_2752;

    arr_Q_5_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_5_we0 <= ap_const_logic_1;
        else 
            arr_Q_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_6_address0 <= zext_ln161_16_fu_1929_p1(8 - 1 downto 0);

    arr_Q_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_6_ce0 <= ap_const_logic_1;
        else 
            arr_Q_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_6_d0 <= trunc_ln162_6_reg_2757;

    arr_Q_6_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_6_we0 <= ap_const_logic_1;
        else 
            arr_Q_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_7_address0 <= zext_ln161_19_fu_1933_p1(8 - 1 downto 0);

    arr_Q_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_7_ce0 <= ap_const_logic_1;
        else 
            arr_Q_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_7_d0 <= trunc_ln162_7_reg_2762;

    arr_Q_7_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_7_we0 <= ap_const_logic_1;
        else 
            arr_Q_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_address0 <= zext_ln161_1_fu_1887_p1(8 - 1 downto 0);

    arr_Q_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_ce0 <= ap_const_logic_1;
        else 
            arr_Q_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    arr_Q_d0 <= trunc_ln9_reg_2727;

    arr_Q_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            arr_Q_we0 <= ap_const_logic_1;
        else 
            arr_Q_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_1101_p1 <= ap_sig_allocacmp_i(4 - 1 downto 0);
    icmp_ln159_fu_1095_p2 <= "1" when (unsigned(ap_sig_allocacmp_i) < unsigned(ap_const_lv11_4EC)) else "0";
    icmp_ln162_fu_1426_p2 <= "1" when (empty_reg_2074 = ap_const_lv4_C) else "0";
    lshr_ln161_1_fu_1374_p4 <= add_ln159_3_fu_1368_p2(10 downto 4);
    lshr_ln161_5_fu_1233_p4 <= add_ln159_fu_1227_p2(10 downto 4);
    lshr_ln161_7_fu_1280_p4 <= add_ln159_1_fu_1274_p2(10 downto 4);
    lshr_ln161_9_fu_1327_p4 <= add_ln159_2_fu_1321_p2(10 downto 4);
    lshr_ln8_fu_1105_p4 <= ap_sig_allocacmp_i(10 downto 4);
    matched_I_0_address0 <= zext_ln161_8_fu_1243_p1(8 - 1 downto 0);
    matched_I_0_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_0_ce0 <= ap_const_logic_1;
        else 
            matched_I_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_0_ce1 <= ap_const_logic_1;
        else 
            matched_I_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_10_address0 <= zext_ln161_14_fu_1337_p1(8 - 1 downto 0);
    matched_I_10_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_10_ce0 <= ap_const_logic_1;
        else 
            matched_I_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_10_ce1 <= ap_const_logic_1;
        else 
            matched_I_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_11_address0 <= zext_ln161_17_fu_1384_p1(8 - 1 downto 0);
    matched_I_11_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_11_ce0 <= ap_const_logic_1;
        else 
            matched_I_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_11_ce1 <= ap_const_logic_1;
        else 
            matched_I_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_12_address0 <= zext_ln161_8_fu_1243_p1(8 - 1 downto 0);
    matched_I_12_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_12_ce0 <= ap_const_logic_1;
        else 
            matched_I_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_12_ce1 <= ap_const_logic_1;
        else 
            matched_I_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_13_address0 <= zext_ln161_11_fu_1290_p1(8 - 1 downto 0);
    matched_I_13_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_13_ce0 <= ap_const_logic_1;
        else 
            matched_I_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_13_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_13_ce1 <= ap_const_logic_1;
        else 
            matched_I_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_14_address0 <= zext_ln161_14_fu_1337_p1(8 - 1 downto 0);
    matched_I_14_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_14_ce0 <= ap_const_logic_1;
        else 
            matched_I_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_14_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_14_ce1 <= ap_const_logic_1;
        else 
            matched_I_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_15_address0 <= zext_ln161_17_fu_1384_p1(8 - 1 downto 0);
    matched_I_15_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_15_ce0 <= ap_const_logic_1;
        else 
            matched_I_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_15_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_15_ce1 <= ap_const_logic_1;
        else 
            matched_I_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_1_address0 <= zext_ln161_11_fu_1290_p1(8 - 1 downto 0);
    matched_I_1_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_1_ce0 <= ap_const_logic_1;
        else 
            matched_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_1_ce1 <= ap_const_logic_1;
        else 
            matched_I_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_2_address0 <= zext_ln161_14_fu_1337_p1(8 - 1 downto 0);
    matched_I_2_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_2_ce0 <= ap_const_logic_1;
        else 
            matched_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_2_ce1 <= ap_const_logic_1;
        else 
            matched_I_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_3_address0 <= zext_ln161_17_fu_1384_p1(8 - 1 downto 0);
    matched_I_3_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_3_ce0 <= ap_const_logic_1;
        else 
            matched_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_3_ce1 <= ap_const_logic_1;
        else 
            matched_I_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_4_address0 <= zext_ln161_8_fu_1243_p1(8 - 1 downto 0);
    matched_I_4_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_4_ce0 <= ap_const_logic_1;
        else 
            matched_I_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_4_ce1 <= ap_const_logic_1;
        else 
            matched_I_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_5_address0 <= zext_ln161_11_fu_1290_p1(8 - 1 downto 0);
    matched_I_5_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_5_ce0 <= ap_const_logic_1;
        else 
            matched_I_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_5_ce1 <= ap_const_logic_1;
        else 
            matched_I_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_6_address0 <= zext_ln161_14_fu_1337_p1(8 - 1 downto 0);
    matched_I_6_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_6_ce0 <= ap_const_logic_1;
        else 
            matched_I_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_6_ce1 <= ap_const_logic_1;
        else 
            matched_I_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_7_address0 <= zext_ln161_17_fu_1384_p1(8 - 1 downto 0);
    matched_I_7_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_7_ce0 <= ap_const_logic_1;
        else 
            matched_I_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_7_ce1 <= ap_const_logic_1;
        else 
            matched_I_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_8_address0 <= zext_ln161_8_fu_1243_p1(8 - 1 downto 0);
    matched_I_8_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_8_ce0 <= ap_const_logic_1;
        else 
            matched_I_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_8_ce1 <= ap_const_logic_1;
        else 
            matched_I_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_I_9_address0 <= zext_ln161_11_fu_1290_p1(8 - 1 downto 0);
    matched_I_9_address1 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_I_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_9_ce0 <= ap_const_logic_1;
        else 
            matched_I_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matched_I_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_I_9_ce1 <= ap_const_logic_1;
        else 
            matched_I_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_0_address0 <= zext_ln161_8_fu_1243_p1(8 - 1 downto 0);

    matched_Q_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_0_ce0 <= ap_const_logic_1;
        else 
            matched_Q_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_10_address0 <= zext_ln161_14_fu_1337_p1(8 - 1 downto 0);

    matched_Q_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_10_ce0 <= ap_const_logic_1;
        else 
            matched_Q_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_11_address0 <= zext_ln161_17_fu_1384_p1(8 - 1 downto 0);

    matched_Q_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_11_ce0 <= ap_const_logic_1;
        else 
            matched_Q_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_12_address0 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_Q_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_12_ce0 <= ap_const_logic_1;
        else 
            matched_Q_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_13_address0 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_Q_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_13_ce0 <= ap_const_logic_1;
        else 
            matched_Q_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_14_address0 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_Q_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_14_ce0 <= ap_const_logic_1;
        else 
            matched_Q_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_15_address0 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_Q_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_15_ce0 <= ap_const_logic_1;
        else 
            matched_Q_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_1_address0 <= zext_ln161_11_fu_1290_p1(8 - 1 downto 0);

    matched_Q_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_1_ce0 <= ap_const_logic_1;
        else 
            matched_Q_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_2_address0 <= zext_ln161_14_fu_1337_p1(8 - 1 downto 0);

    matched_Q_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_2_ce0 <= ap_const_logic_1;
        else 
            matched_Q_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_3_address0 <= zext_ln161_17_fu_1384_p1(8 - 1 downto 0);

    matched_Q_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_3_ce0 <= ap_const_logic_1;
        else 
            matched_Q_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_4_address0 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_Q_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_4_ce0 <= ap_const_logic_1;
        else 
            matched_Q_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_5_address0 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_Q_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_5_ce0 <= ap_const_logic_1;
        else 
            matched_Q_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_6_address0 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_Q_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_6_ce0 <= ap_const_logic_1;
        else 
            matched_Q_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_7_address0 <= zext_ln159_fu_1115_p1(8 - 1 downto 0);

    matched_Q_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_7_ce0 <= ap_const_logic_1;
        else 
            matched_Q_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_8_address0 <= zext_ln161_8_fu_1243_p1(8 - 1 downto 0);

    matched_Q_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_8_ce0 <= ap_const_logic_1;
        else 
            matched_Q_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    matched_Q_9_address0 <= zext_ln161_11_fu_1290_p1(8 - 1 downto 0);

    matched_Q_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matched_Q_9_ce0 <= ap_const_logic_1;
        else 
            matched_Q_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln161_1_fu_1940_p1 <= sext_ln161_3_reg_2662(17 - 1 downto 0);
    mul_ln161_2_fu_1958_p1 <= sext_ln161_5_reg_2672(17 - 1 downto 0);
    mul_ln161_3_fu_1976_p1 <= sext_ln161_7_reg_2682(17 - 1 downto 0);
    mul_ln161_4_fu_1994_p1 <= sext_ln161_9_reg_2692(17 - 1 downto 0);
    mul_ln161_5_fu_2012_p1 <= sext_ln161_11_reg_2702(17 - 1 downto 0);
    mul_ln161_6_fu_2030_p1 <= sext_ln161_13_reg_2712(17 - 1 downto 0);
    mul_ln161_7_fu_2048_p0 <= sext_ln161_14_reg_2722(17 - 1 downto 0);
    mul_ln161_fu_1894_p0 <= sext_ln161_reg_2652(17 - 1 downto 0);
    preamble_upsampled_address0 <= zext_ln161_18_fu_1400_p1(11 - 1 downto 0);
    preamble_upsampled_address1 <= zext_ln161_15_fu_1353_p1(11 - 1 downto 0);
    preamble_upsampled_address2 <= zext_ln161_12_fu_1306_p1(11 - 1 downto 0);
    preamble_upsampled_address3 <= zext_ln161_9_fu_1259_p1(11 - 1 downto 0);
    preamble_upsampled_address4 <= zext_ln161_6_fu_1212_p1(11 - 1 downto 0);
    preamble_upsampled_address5 <= zext_ln161_4_fu_1191_p1(11 - 1 downto 0);
    preamble_upsampled_address6 <= zext_ln161_2_fu_1170_p1(11 - 1 downto 0);
    preamble_upsampled_address7 <= zext_ln161_fu_1149_p1(11 - 1 downto 0);

    preamble_upsampled_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            preamble_upsampled_ce0 <= ap_const_logic_1;
        else 
            preamble_upsampled_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    preamble_upsampled_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            preamble_upsampled_ce1 <= ap_const_logic_1;
        else 
            preamble_upsampled_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    preamble_upsampled_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            preamble_upsampled_ce2 <= ap_const_logic_1;
        else 
            preamble_upsampled_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    preamble_upsampled_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            preamble_upsampled_ce3 <= ap_const_logic_1;
        else 
            preamble_upsampled_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    preamble_upsampled_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            preamble_upsampled_ce4 <= ap_const_logic_1;
        else 
            preamble_upsampled_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    preamble_upsampled_ce5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            preamble_upsampled_ce5 <= ap_const_logic_1;
        else 
            preamble_upsampled_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    preamble_upsampled_ce6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            preamble_upsampled_ce6 <= ap_const_logic_1;
        else 
            preamble_upsampled_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    preamble_upsampled_ce7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            preamble_upsampled_ce7 <= ap_const_logic_1;
        else 
            preamble_upsampled_ce7 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln162_1_fu_1439_p3 <= 
        matched_Q_13_q0 when (icmp_ln162_fu_1426_p2(0) = '1') else 
        matched_Q_5_q0;
    select_ln162_2_fu_1447_p3 <= 
        matched_Q_14_q0 when (icmp_ln162_fu_1426_p2(0) = '1') else 
        matched_Q_6_q0;
    select_ln162_3_fu_1455_p3 <= 
        matched_Q_15_q0 when (icmp_ln162_fu_1426_p2(0) = '1') else 
        matched_Q_7_q0;
    select_ln162_4_fu_1463_p3 <= 
        matched_Q_0_q0 when (icmp_ln162_fu_1426_p2(0) = '1') else 
        matched_Q_8_q0;
    select_ln162_5_fu_1471_p3 <= 
        matched_Q_1_q0 when (icmp_ln162_fu_1426_p2(0) = '1') else 
        matched_Q_9_q0;
    select_ln162_6_fu_1479_p3 <= 
        matched_Q_2_q0 when (icmp_ln162_fu_1426_p2(0) = '1') else 
        matched_Q_10_q0;
    select_ln162_7_fu_1487_p3 <= 
        matched_Q_3_q0 when (icmp_ln162_fu_1426_p2(0) = '1') else 
        matched_Q_11_q0;
    select_ln162_fu_1431_p3 <= 
        matched_Q_12_q0 when (icmp_ln162_fu_1426_p2(0) = '1') else 
        matched_Q_4_q0;
        sext_ln161_11_fu_1672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(preamble_upsampled_load_5_reg_2452),34));

        sext_ln161_13_fu_1702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(preamble_upsampled_load_6_reg_2457),34));

        sext_ln161_14_fu_1732_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(preamble_upsampled_load_7_reg_2602),34));

        sext_ln161_3_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(preamble_upsampled_load_1_reg_2432),34));

        sext_ln161_5_fu_1582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(preamble_upsampled_load_2_reg_2437),34));

        sext_ln161_7_fu_1612_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(preamble_upsampled_load_3_reg_2442),34));

        sext_ln161_9_fu_1642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(preamble_upsampled_load_4_reg_2447),34));

        sext_ln161_fu_1522_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(preamble_upsampled_load_reg_2427),34));

    zext_ln159_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln8_fu_1105_p4),64));
    zext_ln161_10_fu_1921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_6_reg_2247_pp0_iter2_reg),64));
    zext_ln161_11_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_7_fu_1280_p4),64));
    zext_ln161_12_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_5_fu_1300_p2),64));
    zext_ln161_13_fu_1925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_8_reg_2287_pp0_iter2_reg),64));
    zext_ln161_14_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_9_fu_1327_p4),64));
    zext_ln161_15_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_6_fu_1347_p2),64));
    zext_ln161_16_fu_1929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_s_reg_2327_pp0_iter2_reg),64));
    zext_ln161_17_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_1_fu_1374_p4),64));
    zext_ln161_18_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_7_fu_1394_p2),64));
    zext_ln161_19_fu_1933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_10_reg_2367_pp0_iter2_reg),64));
    zext_ln161_1_fu_1887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln9_reg_2087_pp0_iter2_reg),64));
    zext_ln161_2_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_1_fu_1164_p2),64));
    zext_ln161_3_fu_1909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_2_reg_2127_pp0_iter2_reg),64));
    zext_ln161_4_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_2_fu_1185_p2),64));
    zext_ln161_5_fu_1913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_3_reg_2167_pp0_iter2_reg),64));
    zext_ln161_6_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_3_fu_1206_p2),64));
    zext_ln161_7_fu_1917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_4_reg_2207_pp0_iter2_reg),64));
    zext_ln161_8_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln161_5_fu_1233_p4),64));
    zext_ln161_9_fu_1259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_4_fu_1253_p2),64));
    zext_ln161_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_fu_1143_p2),64));
end behav;
