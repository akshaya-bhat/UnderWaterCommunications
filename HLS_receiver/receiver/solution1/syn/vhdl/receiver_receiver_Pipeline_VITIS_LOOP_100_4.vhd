-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity receiver_receiver_Pipeline_VITIS_LOOP_100_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    filt_I_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_ce0 : OUT STD_LOGIC;
    filt_I_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_ce1 : OUT STD_LOGIC;
    filt_I_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_1_ce0 : OUT STD_LOGIC;
    filt_I_1_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_1_ce1 : OUT STD_LOGIC;
    filt_I_1_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_1_I_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_I_ce0 : OUT STD_LOGIC;
    filt_1_I_we0 : OUT STD_LOGIC;
    filt_1_I_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_ce0 : OUT STD_LOGIC;
    filt_Q_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_ce1 : OUT STD_LOGIC;
    filt_Q_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_1_ce0 : OUT STD_LOGIC;
    filt_Q_1_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_1_ce1 : OUT STD_LOGIC;
    filt_Q_1_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_1_Q_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_Q_ce0 : OUT STD_LOGIC;
    filt_1_Q_we0 : OUT STD_LOGIC;
    filt_1_Q_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_I_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_2_ce0 : OUT STD_LOGIC;
    filt_I_2_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_2_ce1 : OUT STD_LOGIC;
    filt_I_2_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_3_ce0 : OUT STD_LOGIC;
    filt_I_3_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_3_ce1 : OUT STD_LOGIC;
    filt_I_3_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_1_I_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_I_1_ce0 : OUT STD_LOGIC;
    filt_1_I_1_we0 : OUT STD_LOGIC;
    filt_1_I_1_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_2_ce0 : OUT STD_LOGIC;
    filt_Q_2_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_2_ce1 : OUT STD_LOGIC;
    filt_Q_2_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_3_ce0 : OUT STD_LOGIC;
    filt_Q_3_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_3_ce1 : OUT STD_LOGIC;
    filt_Q_3_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_1_Q_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_Q_1_ce0 : OUT STD_LOGIC;
    filt_1_Q_1_we0 : OUT STD_LOGIC;
    filt_1_Q_1_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_I_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_4_ce0 : OUT STD_LOGIC;
    filt_I_4_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_4_ce1 : OUT STD_LOGIC;
    filt_I_4_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_5_ce0 : OUT STD_LOGIC;
    filt_I_5_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_5_ce1 : OUT STD_LOGIC;
    filt_I_5_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_1_I_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_I_2_ce0 : OUT STD_LOGIC;
    filt_1_I_2_we0 : OUT STD_LOGIC;
    filt_1_I_2_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_4_ce0 : OUT STD_LOGIC;
    filt_Q_4_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_4_ce1 : OUT STD_LOGIC;
    filt_Q_4_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_5_ce0 : OUT STD_LOGIC;
    filt_Q_5_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_5_ce1 : OUT STD_LOGIC;
    filt_Q_5_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_1_Q_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_Q_2_ce0 : OUT STD_LOGIC;
    filt_1_Q_2_we0 : OUT STD_LOGIC;
    filt_1_Q_2_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_I_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_6_ce0 : OUT STD_LOGIC;
    filt_I_6_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_6_ce1 : OUT STD_LOGIC;
    filt_I_6_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_7_ce0 : OUT STD_LOGIC;
    filt_I_7_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_I_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_I_7_ce1 : OUT STD_LOGIC;
    filt_I_7_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_1_I_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_I_3_ce0 : OUT STD_LOGIC;
    filt_1_I_3_we0 : OUT STD_LOGIC;
    filt_1_I_3_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_6_ce0 : OUT STD_LOGIC;
    filt_Q_6_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_6_ce1 : OUT STD_LOGIC;
    filt_Q_6_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_7_ce0 : OUT STD_LOGIC;
    filt_Q_7_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_Q_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    filt_Q_7_ce1 : OUT STD_LOGIC;
    filt_Q_7_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    filt_1_Q_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_Q_3_ce0 : OUT STD_LOGIC;
    filt_1_Q_3_we0 : OUT STD_LOGIC;
    filt_1_Q_3_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_1_I_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_I_4_ce0 : OUT STD_LOGIC;
    filt_1_I_4_we0 : OUT STD_LOGIC;
    filt_1_I_4_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_1_Q_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_Q_4_ce0 : OUT STD_LOGIC;
    filt_1_Q_4_we0 : OUT STD_LOGIC;
    filt_1_Q_4_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_1_I_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_I_5_ce0 : OUT STD_LOGIC;
    filt_1_I_5_we0 : OUT STD_LOGIC;
    filt_1_I_5_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_1_Q_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_Q_5_ce0 : OUT STD_LOGIC;
    filt_1_Q_5_we0 : OUT STD_LOGIC;
    filt_1_Q_5_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_1_I_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_I_6_ce0 : OUT STD_LOGIC;
    filt_1_I_6_we0 : OUT STD_LOGIC;
    filt_1_I_6_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_1_Q_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_Q_6_ce0 : OUT STD_LOGIC;
    filt_1_Q_6_we0 : OUT STD_LOGIC;
    filt_1_Q_6_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_1_I_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_I_7_ce0 : OUT STD_LOGIC;
    filt_1_I_7_we0 : OUT STD_LOGIC;
    filt_1_I_7_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    filt_1_Q_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filt_1_Q_7_ce0 : OUT STD_LOGIC;
    filt_1_Q_7_we0 : OUT STD_LOGIC;
    filt_1_Q_7_d0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
end;


architecture behav of receiver_receiver_Pipeline_VITIS_LOOP_100_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln100_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal lshr_ln3_reg_941 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln3_reg_941_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln102_fu_805_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_reg_1096 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_1_fu_811_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_1_reg_1101 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_2_fu_817_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_2_reg_1106 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_3_fu_823_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_3_reg_1111 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_4_fu_829_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_4_reg_1116 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_5_fu_835_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_5_reg_1121 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_6_fu_841_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_6_reg_1126 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_7_fu_847_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln102_7_reg_1131 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_fu_853_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_reg_1136 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_1_fu_859_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_1_reg_1141 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_2_fu_865_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_2_reg_1146 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_3_fu_871_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_3_reg_1151 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_4_fu_877_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_4_reg_1156 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_5_fu_883_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_5_reg_1161 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_6_fu_889_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_6_reg_1166 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_7_fu_895_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln103_7_reg_1171 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln100_fu_738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln102_1_fu_774_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln102_fu_901_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_3_fu_102 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln100_fu_794_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln2_fu_728_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln102_fu_768_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component receiver_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component receiver_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_3_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln100_fu_722_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_3_fu_102 <= add_ln100_fu_794_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_3_fu_102 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln102_1_reg_1101 <= add_ln102_1_fu_811_p2;
                add_ln102_2_reg_1106 <= add_ln102_2_fu_817_p2;
                add_ln102_3_reg_1111 <= add_ln102_3_fu_823_p2;
                add_ln102_4_reg_1116 <= add_ln102_4_fu_829_p2;
                add_ln102_5_reg_1121 <= add_ln102_5_fu_835_p2;
                add_ln102_6_reg_1126 <= add_ln102_6_fu_841_p2;
                add_ln102_7_reg_1131 <= add_ln102_7_fu_847_p2;
                add_ln102_reg_1096 <= add_ln102_fu_805_p2;
                add_ln103_1_reg_1141 <= add_ln103_1_fu_859_p2;
                add_ln103_2_reg_1146 <= add_ln103_2_fu_865_p2;
                add_ln103_3_reg_1151 <= add_ln103_3_fu_871_p2;
                add_ln103_4_reg_1156 <= add_ln103_4_fu_877_p2;
                add_ln103_5_reg_1161 <= add_ln103_5_fu_883_p2;
                add_ln103_6_reg_1166 <= add_ln103_6_fu_889_p2;
                add_ln103_7_reg_1171 <= add_ln103_7_fu_895_p2;
                add_ln103_reg_1136 <= add_ln103_fu_853_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                lshr_ln3_reg_941_pp0_iter1_reg <= lshr_ln3_reg_941;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln100_fu_722_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lshr_ln3_reg_941 <= ap_sig_allocacmp_i(6 downto 4);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln100_fu_794_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv7_10));
    add_ln102_1_fu_811_p2 <= std_logic_vector(unsigned(filt_I_3_q1) + unsigned(filt_I_2_q1));
    add_ln102_2_fu_817_p2 <= std_logic_vector(unsigned(filt_I_5_q1) + unsigned(filt_I_4_q1));
    add_ln102_3_fu_823_p2 <= std_logic_vector(unsigned(filt_I_7_q1) + unsigned(filt_I_6_q1));
    add_ln102_4_fu_829_p2 <= std_logic_vector(unsigned(filt_I_1_q0) + unsigned(filt_I_q0));
    add_ln102_5_fu_835_p2 <= std_logic_vector(unsigned(filt_I_3_q0) + unsigned(filt_I_2_q0));
    add_ln102_6_fu_841_p2 <= std_logic_vector(unsigned(filt_I_5_q0) + unsigned(filt_I_4_q0));
    add_ln102_7_fu_847_p2 <= std_logic_vector(unsigned(filt_I_7_q0) + unsigned(filt_I_6_q0));
    add_ln102_fu_805_p2 <= std_logic_vector(unsigned(filt_I_1_q1) + unsigned(filt_I_q1));
    add_ln103_1_fu_859_p2 <= std_logic_vector(unsigned(filt_Q_1_q0) + unsigned(filt_Q_q0));
    add_ln103_2_fu_865_p2 <= std_logic_vector(unsigned(filt_Q_3_q1) + unsigned(filt_Q_2_q1));
    add_ln103_3_fu_871_p2 <= std_logic_vector(unsigned(filt_Q_3_q0) + unsigned(filt_Q_2_q0));
    add_ln103_4_fu_877_p2 <= std_logic_vector(unsigned(filt_Q_5_q1) + unsigned(filt_Q_4_q1));
    add_ln103_5_fu_883_p2 <= std_logic_vector(unsigned(filt_Q_5_q0) + unsigned(filt_Q_4_q0));
    add_ln103_6_fu_889_p2 <= std_logic_vector(unsigned(filt_Q_7_q1) + unsigned(filt_Q_6_q1));
    add_ln103_7_fu_895_p2 <= std_logic_vector(unsigned(filt_Q_7_q0) + unsigned(filt_Q_6_q0));
    add_ln103_fu_853_p2 <= std_logic_vector(unsigned(filt_Q_1_q1) + unsigned(filt_Q_q1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln100_fu_722_p2)
    begin
        if (((icmp_ln100_fu_722_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_3_fu_102, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_i <= i_3_fu_102;
        end if; 
    end process;

    filt_1_I_1_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_I_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_1_ce0 <= ap_const_logic_1;
        else 
            filt_1_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_1_d0 <= add_ln102_1_reg_1101;

    filt_1_I_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_1_we0 <= ap_const_logic_1;
        else 
            filt_1_I_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_2_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_I_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_2_ce0 <= ap_const_logic_1;
        else 
            filt_1_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_2_d0 <= add_ln102_2_reg_1106;

    filt_1_I_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_2_we0 <= ap_const_logic_1;
        else 
            filt_1_I_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_3_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_I_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_3_ce0 <= ap_const_logic_1;
        else 
            filt_1_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_3_d0 <= add_ln102_3_reg_1111;

    filt_1_I_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_3_we0 <= ap_const_logic_1;
        else 
            filt_1_I_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_4_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_I_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_4_ce0 <= ap_const_logic_1;
        else 
            filt_1_I_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_4_d0 <= add_ln102_4_reg_1116;

    filt_1_I_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_4_we0 <= ap_const_logic_1;
        else 
            filt_1_I_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_5_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_I_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_5_ce0 <= ap_const_logic_1;
        else 
            filt_1_I_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_5_d0 <= add_ln102_5_reg_1121;

    filt_1_I_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_5_we0 <= ap_const_logic_1;
        else 
            filt_1_I_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_6_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_I_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_6_ce0 <= ap_const_logic_1;
        else 
            filt_1_I_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_6_d0 <= add_ln102_6_reg_1126;

    filt_1_I_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_6_we0 <= ap_const_logic_1;
        else 
            filt_1_I_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_7_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_I_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_7_ce0 <= ap_const_logic_1;
        else 
            filt_1_I_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_7_d0 <= add_ln102_7_reg_1131;

    filt_1_I_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_7_we0 <= ap_const_logic_1;
        else 
            filt_1_I_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_I_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_ce0 <= ap_const_logic_1;
        else 
            filt_1_I_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_I_d0 <= add_ln102_reg_1096;

    filt_1_I_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_I_we0 <= ap_const_logic_1;
        else 
            filt_1_I_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_1_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_Q_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_1_ce0 <= ap_const_logic_1;
        else 
            filt_1_Q_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_1_d0 <= add_ln103_2_reg_1146;

    filt_1_Q_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_1_we0 <= ap_const_logic_1;
        else 
            filt_1_Q_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_2_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_Q_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_2_ce0 <= ap_const_logic_1;
        else 
            filt_1_Q_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_2_d0 <= add_ln103_4_reg_1156;

    filt_1_Q_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_2_we0 <= ap_const_logic_1;
        else 
            filt_1_Q_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_3_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_Q_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_3_ce0 <= ap_const_logic_1;
        else 
            filt_1_Q_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_3_d0 <= add_ln103_6_reg_1166;

    filt_1_Q_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_3_we0 <= ap_const_logic_1;
        else 
            filt_1_Q_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_4_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_Q_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_4_ce0 <= ap_const_logic_1;
        else 
            filt_1_Q_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_4_d0 <= add_ln103_1_reg_1141;

    filt_1_Q_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_4_we0 <= ap_const_logic_1;
        else 
            filt_1_Q_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_5_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_Q_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_5_ce0 <= ap_const_logic_1;
        else 
            filt_1_Q_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_5_d0 <= add_ln103_3_reg_1151;

    filt_1_Q_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_5_we0 <= ap_const_logic_1;
        else 
            filt_1_Q_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_6_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_Q_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_6_ce0 <= ap_const_logic_1;
        else 
            filt_1_Q_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_6_d0 <= add_ln103_5_reg_1161;

    filt_1_Q_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_6_we0 <= ap_const_logic_1;
        else 
            filt_1_Q_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_7_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_Q_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_7_ce0 <= ap_const_logic_1;
        else 
            filt_1_Q_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_7_d0 <= add_ln103_7_reg_1171;

    filt_1_Q_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_7_we0 <= ap_const_logic_1;
        else 
            filt_1_Q_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_address0 <= zext_ln102_fu_901_p1(3 - 1 downto 0);

    filt_1_Q_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_ce0 <= ap_const_logic_1;
        else 
            filt_1_Q_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_1_Q_d0 <= add_ln103_reg_1136;

    filt_1_Q_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_1_Q_we0 <= ap_const_logic_1;
        else 
            filt_1_Q_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filt_I_1_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_I_1_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_I_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_1_ce0 <= ap_const_logic_1;
        else 
            filt_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_I_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_1_ce1 <= ap_const_logic_1;
        else 
            filt_I_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_I_2_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_I_2_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_I_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_2_ce0 <= ap_const_logic_1;
        else 
            filt_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_I_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_2_ce1 <= ap_const_logic_1;
        else 
            filt_I_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_I_3_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_I_3_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_I_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_3_ce0 <= ap_const_logic_1;
        else 
            filt_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_I_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_3_ce1 <= ap_const_logic_1;
        else 
            filt_I_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_I_4_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_I_4_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_I_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_4_ce0 <= ap_const_logic_1;
        else 
            filt_I_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_I_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_4_ce1 <= ap_const_logic_1;
        else 
            filt_I_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_I_5_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_I_5_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_I_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_5_ce0 <= ap_const_logic_1;
        else 
            filt_I_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_I_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_5_ce1 <= ap_const_logic_1;
        else 
            filt_I_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_I_6_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_I_6_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_I_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_6_ce0 <= ap_const_logic_1;
        else 
            filt_I_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_I_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_6_ce1 <= ap_const_logic_1;
        else 
            filt_I_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_I_7_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_I_7_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_I_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_7_ce0 <= ap_const_logic_1;
        else 
            filt_I_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_I_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_7_ce1 <= ap_const_logic_1;
        else 
            filt_I_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_I_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_I_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_I_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_ce0 <= ap_const_logic_1;
        else 
            filt_I_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_I_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_I_ce1 <= ap_const_logic_1;
        else 
            filt_I_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_Q_1_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_Q_1_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_Q_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_1_ce0 <= ap_const_logic_1;
        else 
            filt_Q_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_Q_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_1_ce1 <= ap_const_logic_1;
        else 
            filt_Q_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_Q_2_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_Q_2_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_Q_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_2_ce0 <= ap_const_logic_1;
        else 
            filt_Q_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_Q_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_2_ce1 <= ap_const_logic_1;
        else 
            filt_Q_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_Q_3_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_Q_3_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_Q_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_3_ce0 <= ap_const_logic_1;
        else 
            filt_Q_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_Q_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_3_ce1 <= ap_const_logic_1;
        else 
            filt_Q_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_Q_4_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_Q_4_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_Q_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_4_ce0 <= ap_const_logic_1;
        else 
            filt_Q_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_Q_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_4_ce1 <= ap_const_logic_1;
        else 
            filt_Q_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_Q_5_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_Q_5_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_Q_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_5_ce0 <= ap_const_logic_1;
        else 
            filt_Q_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_Q_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_5_ce1 <= ap_const_logic_1;
        else 
            filt_Q_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_Q_6_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_Q_6_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_Q_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_6_ce0 <= ap_const_logic_1;
        else 
            filt_Q_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_Q_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_6_ce1 <= ap_const_logic_1;
        else 
            filt_Q_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_Q_7_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_Q_7_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_Q_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_7_ce0 <= ap_const_logic_1;
        else 
            filt_Q_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_Q_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_7_ce1 <= ap_const_logic_1;
        else 
            filt_Q_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    filt_Q_address0 <= zext_ln102_1_fu_774_p1(4 - 1 downto 0);
    filt_Q_address1 <= zext_ln100_fu_738_p1(4 - 1 downto 0);

    filt_Q_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_ce0 <= ap_const_logic_1;
        else 
            filt_Q_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    filt_Q_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            filt_Q_ce1 <= ap_const_logic_1;
        else 
            filt_Q_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln100_fu_722_p2 <= "1" when (unsigned(ap_sig_allocacmp_i) < unsigned(ap_const_lv7_60)) else "0";
    lshr_ln2_fu_728_p4 <= ap_sig_allocacmp_i(6 downto 3);
    or_ln102_fu_768_p2 <= (lshr_ln2_fu_728_p4 or ap_const_lv4_1);
    zext_ln100_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2_fu_728_p4),64));
    zext_ln102_1_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln102_fu_768_p2),64));
    zext_ln102_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln3_reg_941_pp0_iter1_reg),64));
end behav;
