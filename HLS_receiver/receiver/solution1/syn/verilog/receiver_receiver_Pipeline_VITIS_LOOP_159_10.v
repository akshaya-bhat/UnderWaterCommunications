// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_159_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_I_address0,
        arr_I_ce0,
        arr_I_we0,
        arr_I_d0,
        arr_Q_address0,
        arr_Q_ce0,
        arr_Q_we0,
        arr_Q_d0,
        arr_I_1_address0,
        arr_I_1_ce0,
        arr_I_1_we0,
        arr_I_1_d0,
        arr_Q_1_address0,
        arr_Q_1_ce0,
        arr_Q_1_we0,
        arr_Q_1_d0,
        arr_I_2_address0,
        arr_I_2_ce0,
        arr_I_2_we0,
        arr_I_2_d0,
        arr_Q_2_address0,
        arr_Q_2_ce0,
        arr_Q_2_we0,
        arr_Q_2_d0,
        arr_I_3_address0,
        arr_I_3_ce0,
        arr_I_3_we0,
        arr_I_3_d0,
        arr_Q_3_address0,
        arr_Q_3_ce0,
        arr_Q_3_we0,
        arr_Q_3_d0,
        arr_I_4_address0,
        arr_I_4_ce0,
        arr_I_4_we0,
        arr_I_4_d0,
        arr_Q_4_address0,
        arr_Q_4_ce0,
        arr_Q_4_we0,
        arr_Q_4_d0,
        arr_I_5_address0,
        arr_I_5_ce0,
        arr_I_5_we0,
        arr_I_5_d0,
        arr_Q_5_address0,
        arr_Q_5_ce0,
        arr_Q_5_we0,
        arr_Q_5_d0,
        arr_I_6_address0,
        arr_I_6_ce0,
        arr_I_6_we0,
        arr_I_6_d0,
        arr_Q_6_address0,
        arr_Q_6_ce0,
        arr_Q_6_we0,
        arr_Q_6_d0,
        arr_I_7_address0,
        arr_I_7_ce0,
        arr_I_7_we0,
        arr_I_7_d0,
        arr_Q_7_address0,
        arr_Q_7_ce0,
        arr_Q_7_we0,
        arr_Q_7_d0,
        matched_I_0_address0,
        matched_I_0_ce0,
        matched_I_0_q0,
        matched_I_0_address1,
        matched_I_0_ce1,
        matched_I_0_q1,
        matched_I_4_address0,
        matched_I_4_ce0,
        matched_I_4_q0,
        matched_I_4_address1,
        matched_I_4_ce1,
        matched_I_4_q1,
        matched_I_8_address0,
        matched_I_8_ce0,
        matched_I_8_q0,
        matched_I_8_address1,
        matched_I_8_ce1,
        matched_I_8_q1,
        matched_I_12_address0,
        matched_I_12_ce0,
        matched_I_12_q0,
        matched_I_12_address1,
        matched_I_12_ce1,
        matched_I_12_q1,
        matched_I_1_address0,
        matched_I_1_ce0,
        matched_I_1_q0,
        matched_I_1_address1,
        matched_I_1_ce1,
        matched_I_1_q1,
        matched_I_5_address0,
        matched_I_5_ce0,
        matched_I_5_q0,
        matched_I_5_address1,
        matched_I_5_ce1,
        matched_I_5_q1,
        matched_I_9_address0,
        matched_I_9_ce0,
        matched_I_9_q0,
        matched_I_9_address1,
        matched_I_9_ce1,
        matched_I_9_q1,
        matched_I_13_address0,
        matched_I_13_ce0,
        matched_I_13_q0,
        matched_I_13_address1,
        matched_I_13_ce1,
        matched_I_13_q1,
        matched_I_2_address0,
        matched_I_2_ce0,
        matched_I_2_q0,
        matched_I_2_address1,
        matched_I_2_ce1,
        matched_I_2_q1,
        matched_I_6_address0,
        matched_I_6_ce0,
        matched_I_6_q0,
        matched_I_6_address1,
        matched_I_6_ce1,
        matched_I_6_q1,
        matched_I_10_address0,
        matched_I_10_ce0,
        matched_I_10_q0,
        matched_I_10_address1,
        matched_I_10_ce1,
        matched_I_10_q1,
        matched_I_14_address0,
        matched_I_14_ce0,
        matched_I_14_q0,
        matched_I_14_address1,
        matched_I_14_ce1,
        matched_I_14_q1,
        matched_I_3_address0,
        matched_I_3_ce0,
        matched_I_3_q0,
        matched_I_3_address1,
        matched_I_3_ce1,
        matched_I_3_q1,
        matched_I_7_address0,
        matched_I_7_ce0,
        matched_I_7_q0,
        matched_I_7_address1,
        matched_I_7_ce1,
        matched_I_7_q1,
        matched_I_11_address0,
        matched_I_11_ce0,
        matched_I_11_q0,
        matched_I_11_address1,
        matched_I_11_ce1,
        matched_I_11_q1,
        matched_I_15_address0,
        matched_I_15_ce0,
        matched_I_15_q0,
        matched_I_15_address1,
        matched_I_15_ce1,
        matched_I_15_q1,
        matched_Q_4_address0,
        matched_Q_4_ce0,
        matched_Q_4_q0,
        matched_Q_12_address0,
        matched_Q_12_ce0,
        matched_Q_12_q0,
        matched_Q_5_address0,
        matched_Q_5_ce0,
        matched_Q_5_q0,
        matched_Q_13_address0,
        matched_Q_13_ce0,
        matched_Q_13_q0,
        matched_Q_6_address0,
        matched_Q_6_ce0,
        matched_Q_6_q0,
        matched_Q_14_address0,
        matched_Q_14_ce0,
        matched_Q_14_q0,
        matched_Q_7_address0,
        matched_Q_7_ce0,
        matched_Q_7_q0,
        matched_Q_15_address0,
        matched_Q_15_ce0,
        matched_Q_15_q0,
        matched_Q_0_address0,
        matched_Q_0_ce0,
        matched_Q_0_q0,
        matched_Q_8_address0,
        matched_Q_8_ce0,
        matched_Q_8_q0,
        matched_Q_1_address0,
        matched_Q_1_ce0,
        matched_Q_1_q0,
        matched_Q_9_address0,
        matched_Q_9_ce0,
        matched_Q_9_q0,
        matched_Q_2_address0,
        matched_Q_2_ce0,
        matched_Q_2_q0,
        matched_Q_10_address0,
        matched_Q_10_ce0,
        matched_Q_10_q0,
        matched_Q_3_address0,
        matched_Q_3_ce0,
        matched_Q_3_q0,
        matched_Q_11_address0,
        matched_Q_11_ce0,
        matched_Q_11_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] arr_I_address0;
output   arr_I_ce0;
output   arr_I_we0;
output  [17:0] arr_I_d0;
output  [7:0] arr_Q_address0;
output   arr_Q_ce0;
output   arr_Q_we0;
output  [17:0] arr_Q_d0;
output  [7:0] arr_I_1_address0;
output   arr_I_1_ce0;
output   arr_I_1_we0;
output  [17:0] arr_I_1_d0;
output  [7:0] arr_Q_1_address0;
output   arr_Q_1_ce0;
output   arr_Q_1_we0;
output  [17:0] arr_Q_1_d0;
output  [7:0] arr_I_2_address0;
output   arr_I_2_ce0;
output   arr_I_2_we0;
output  [17:0] arr_I_2_d0;
output  [7:0] arr_Q_2_address0;
output   arr_Q_2_ce0;
output   arr_Q_2_we0;
output  [17:0] arr_Q_2_d0;
output  [7:0] arr_I_3_address0;
output   arr_I_3_ce0;
output   arr_I_3_we0;
output  [17:0] arr_I_3_d0;
output  [7:0] arr_Q_3_address0;
output   arr_Q_3_ce0;
output   arr_Q_3_we0;
output  [17:0] arr_Q_3_d0;
output  [7:0] arr_I_4_address0;
output   arr_I_4_ce0;
output   arr_I_4_we0;
output  [17:0] arr_I_4_d0;
output  [7:0] arr_Q_4_address0;
output   arr_Q_4_ce0;
output   arr_Q_4_we0;
output  [17:0] arr_Q_4_d0;
output  [7:0] arr_I_5_address0;
output   arr_I_5_ce0;
output   arr_I_5_we0;
output  [17:0] arr_I_5_d0;
output  [7:0] arr_Q_5_address0;
output   arr_Q_5_ce0;
output   arr_Q_5_we0;
output  [17:0] arr_Q_5_d0;
output  [7:0] arr_I_6_address0;
output   arr_I_6_ce0;
output   arr_I_6_we0;
output  [17:0] arr_I_6_d0;
output  [7:0] arr_Q_6_address0;
output   arr_Q_6_ce0;
output   arr_Q_6_we0;
output  [17:0] arr_Q_6_d0;
output  [7:0] arr_I_7_address0;
output   arr_I_7_ce0;
output   arr_I_7_we0;
output  [17:0] arr_I_7_d0;
output  [7:0] arr_Q_7_address0;
output   arr_Q_7_ce0;
output   arr_Q_7_we0;
output  [17:0] arr_Q_7_d0;
output  [7:0] matched_I_0_address0;
output   matched_I_0_ce0;
input  [17:0] matched_I_0_q0;
output  [7:0] matched_I_0_address1;
output   matched_I_0_ce1;
input  [17:0] matched_I_0_q1;
output  [7:0] matched_I_4_address0;
output   matched_I_4_ce0;
input  [17:0] matched_I_4_q0;
output  [7:0] matched_I_4_address1;
output   matched_I_4_ce1;
input  [17:0] matched_I_4_q1;
output  [7:0] matched_I_8_address0;
output   matched_I_8_ce0;
input  [17:0] matched_I_8_q0;
output  [7:0] matched_I_8_address1;
output   matched_I_8_ce1;
input  [17:0] matched_I_8_q1;
output  [7:0] matched_I_12_address0;
output   matched_I_12_ce0;
input  [17:0] matched_I_12_q0;
output  [7:0] matched_I_12_address1;
output   matched_I_12_ce1;
input  [17:0] matched_I_12_q1;
output  [7:0] matched_I_1_address0;
output   matched_I_1_ce0;
input  [17:0] matched_I_1_q0;
output  [7:0] matched_I_1_address1;
output   matched_I_1_ce1;
input  [17:0] matched_I_1_q1;
output  [7:0] matched_I_5_address0;
output   matched_I_5_ce0;
input  [17:0] matched_I_5_q0;
output  [7:0] matched_I_5_address1;
output   matched_I_5_ce1;
input  [17:0] matched_I_5_q1;
output  [7:0] matched_I_9_address0;
output   matched_I_9_ce0;
input  [17:0] matched_I_9_q0;
output  [7:0] matched_I_9_address1;
output   matched_I_9_ce1;
input  [17:0] matched_I_9_q1;
output  [7:0] matched_I_13_address0;
output   matched_I_13_ce0;
input  [17:0] matched_I_13_q0;
output  [7:0] matched_I_13_address1;
output   matched_I_13_ce1;
input  [17:0] matched_I_13_q1;
output  [7:0] matched_I_2_address0;
output   matched_I_2_ce0;
input  [17:0] matched_I_2_q0;
output  [7:0] matched_I_2_address1;
output   matched_I_2_ce1;
input  [17:0] matched_I_2_q1;
output  [7:0] matched_I_6_address0;
output   matched_I_6_ce0;
input  [17:0] matched_I_6_q0;
output  [7:0] matched_I_6_address1;
output   matched_I_6_ce1;
input  [17:0] matched_I_6_q1;
output  [7:0] matched_I_10_address0;
output   matched_I_10_ce0;
input  [17:0] matched_I_10_q0;
output  [7:0] matched_I_10_address1;
output   matched_I_10_ce1;
input  [17:0] matched_I_10_q1;
output  [7:0] matched_I_14_address0;
output   matched_I_14_ce0;
input  [17:0] matched_I_14_q0;
output  [7:0] matched_I_14_address1;
output   matched_I_14_ce1;
input  [17:0] matched_I_14_q1;
output  [7:0] matched_I_3_address0;
output   matched_I_3_ce0;
input  [17:0] matched_I_3_q0;
output  [7:0] matched_I_3_address1;
output   matched_I_3_ce1;
input  [17:0] matched_I_3_q1;
output  [7:0] matched_I_7_address0;
output   matched_I_7_ce0;
input  [17:0] matched_I_7_q0;
output  [7:0] matched_I_7_address1;
output   matched_I_7_ce1;
input  [17:0] matched_I_7_q1;
output  [7:0] matched_I_11_address0;
output   matched_I_11_ce0;
input  [17:0] matched_I_11_q0;
output  [7:0] matched_I_11_address1;
output   matched_I_11_ce1;
input  [17:0] matched_I_11_q1;
output  [7:0] matched_I_15_address0;
output   matched_I_15_ce0;
input  [17:0] matched_I_15_q0;
output  [7:0] matched_I_15_address1;
output   matched_I_15_ce1;
input  [17:0] matched_I_15_q1;
output  [7:0] matched_Q_4_address0;
output   matched_Q_4_ce0;
input  [17:0] matched_Q_4_q0;
output  [7:0] matched_Q_12_address0;
output   matched_Q_12_ce0;
input  [17:0] matched_Q_12_q0;
output  [7:0] matched_Q_5_address0;
output   matched_Q_5_ce0;
input  [17:0] matched_Q_5_q0;
output  [7:0] matched_Q_13_address0;
output   matched_Q_13_ce0;
input  [17:0] matched_Q_13_q0;
output  [7:0] matched_Q_6_address0;
output   matched_Q_6_ce0;
input  [17:0] matched_Q_6_q0;
output  [7:0] matched_Q_14_address0;
output   matched_Q_14_ce0;
input  [17:0] matched_Q_14_q0;
output  [7:0] matched_Q_7_address0;
output   matched_Q_7_ce0;
input  [17:0] matched_Q_7_q0;
output  [7:0] matched_Q_15_address0;
output   matched_Q_15_ce0;
input  [17:0] matched_Q_15_q0;
output  [7:0] matched_Q_0_address0;
output   matched_Q_0_ce0;
input  [17:0] matched_Q_0_q0;
output  [7:0] matched_Q_8_address0;
output   matched_Q_8_ce0;
input  [17:0] matched_Q_8_q0;
output  [7:0] matched_Q_1_address0;
output   matched_Q_1_ce0;
input  [17:0] matched_Q_1_q0;
output  [7:0] matched_Q_9_address0;
output   matched_Q_9_ce0;
input  [17:0] matched_Q_9_q0;
output  [7:0] matched_Q_2_address0;
output   matched_Q_2_ce0;
input  [17:0] matched_Q_2_q0;
output  [7:0] matched_Q_10_address0;
output   matched_Q_10_ce0;
input  [17:0] matched_Q_10_q0;
output  [7:0] matched_Q_3_address0;
output   matched_Q_3_ce0;
input  [17:0] matched_Q_3_q0;
output  [7:0] matched_Q_11_address0;
output   matched_Q_11_ce0;
input  [17:0] matched_Q_11_q0;

reg ap_idle;
reg arr_I_ce0;
reg arr_I_we0;
reg arr_Q_ce0;
reg arr_Q_we0;
reg arr_I_1_ce0;
reg arr_I_1_we0;
reg arr_Q_1_ce0;
reg arr_Q_1_we0;
reg arr_I_2_ce0;
reg arr_I_2_we0;
reg arr_Q_2_ce0;
reg arr_Q_2_we0;
reg arr_I_3_ce0;
reg arr_I_3_we0;
reg arr_Q_3_ce0;
reg arr_Q_3_we0;
reg arr_I_4_ce0;
reg arr_I_4_we0;
reg arr_Q_4_ce0;
reg arr_Q_4_we0;
reg arr_I_5_ce0;
reg arr_I_5_we0;
reg arr_Q_5_ce0;
reg arr_Q_5_we0;
reg arr_I_6_ce0;
reg arr_I_6_we0;
reg arr_Q_6_ce0;
reg arr_Q_6_we0;
reg arr_I_7_ce0;
reg arr_I_7_we0;
reg arr_Q_7_ce0;
reg arr_Q_7_we0;
reg matched_I_0_ce0;
reg matched_I_0_ce1;
reg matched_I_4_ce0;
reg matched_I_4_ce1;
reg matched_I_8_ce0;
reg matched_I_8_ce1;
reg matched_I_12_ce0;
reg matched_I_12_ce1;
reg matched_I_1_ce0;
reg matched_I_1_ce1;
reg matched_I_5_ce0;
reg matched_I_5_ce1;
reg matched_I_9_ce0;
reg matched_I_9_ce1;
reg matched_I_13_ce0;
reg matched_I_13_ce1;
reg matched_I_2_ce0;
reg matched_I_2_ce1;
reg matched_I_6_ce0;
reg matched_I_6_ce1;
reg matched_I_10_ce0;
reg matched_I_10_ce1;
reg matched_I_14_ce0;
reg matched_I_14_ce1;
reg matched_I_3_ce0;
reg matched_I_3_ce1;
reg matched_I_7_ce0;
reg matched_I_7_ce1;
reg matched_I_11_ce0;
reg matched_I_11_ce1;
reg matched_I_15_ce0;
reg matched_I_15_ce1;
reg matched_Q_4_ce0;
reg matched_Q_12_ce0;
reg matched_Q_5_ce0;
reg matched_Q_13_ce0;
reg matched_Q_6_ce0;
reg matched_Q_14_ce0;
reg matched_Q_7_ce0;
reg matched_Q_15_ce0;
reg matched_Q_0_ce0;
reg matched_Q_8_ce0;
reg matched_Q_1_ce0;
reg matched_Q_9_ce0;
reg matched_Q_2_ce0;
reg matched_Q_10_ce0;
reg matched_Q_3_ce0;
reg matched_Q_11_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln159_fu_1095_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [10:0] preamble_upsampled_address0;
reg    preamble_upsampled_ce0;
wire   [16:0] preamble_upsampled_q0;
wire   [10:0] preamble_upsampled_address1;
reg    preamble_upsampled_ce1;
wire   [16:0] preamble_upsampled_q1;
wire   [10:0] preamble_upsampled_address2;
reg    preamble_upsampled_ce2;
wire   [16:0] preamble_upsampled_q2;
wire   [10:0] preamble_upsampled_address3;
reg    preamble_upsampled_ce3;
wire   [16:0] preamble_upsampled_q3;
wire   [10:0] preamble_upsampled_address4;
reg    preamble_upsampled_ce4;
wire   [16:0] preamble_upsampled_q4;
wire   [10:0] preamble_upsampled_address5;
reg    preamble_upsampled_ce5;
wire   [16:0] preamble_upsampled_q5;
wire   [10:0] preamble_upsampled_address6;
reg    preamble_upsampled_ce6;
wire   [16:0] preamble_upsampled_q6;
wire   [10:0] preamble_upsampled_address7;
reg    preamble_upsampled_ce7;
wire   [16:0] preamble_upsampled_q7;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] empty_fu_1101_p1;
reg   [3:0] empty_reg_2074;
reg   [3:0] empty_reg_2074_pp0_iter1_reg;
reg   [7:0] lshr_ln9_reg_2087;
reg   [7:0] lshr_ln9_reg_2087_pp0_iter1_reg;
reg   [7:0] lshr_ln9_reg_2087_pp0_iter2_reg;
reg   [7:0] lshr_ln161_2_reg_2127;
reg   [7:0] lshr_ln161_2_reg_2127_pp0_iter1_reg;
reg   [7:0] lshr_ln161_2_reg_2127_pp0_iter2_reg;
reg   [7:0] lshr_ln161_3_reg_2167;
reg   [7:0] lshr_ln161_3_reg_2167_pp0_iter1_reg;
reg   [7:0] lshr_ln161_3_reg_2167_pp0_iter2_reg;
reg   [7:0] lshr_ln161_4_reg_2207;
reg   [7:0] lshr_ln161_4_reg_2207_pp0_iter1_reg;
reg   [7:0] lshr_ln161_4_reg_2207_pp0_iter2_reg;
reg   [7:0] lshr_ln161_6_reg_2247;
reg   [7:0] lshr_ln161_6_reg_2247_pp0_iter1_reg;
reg   [7:0] lshr_ln161_6_reg_2247_pp0_iter2_reg;
reg   [7:0] lshr_ln161_8_reg_2287;
reg   [7:0] lshr_ln161_8_reg_2287_pp0_iter1_reg;
reg   [7:0] lshr_ln161_8_reg_2287_pp0_iter2_reg;
reg   [7:0] lshr_ln161_s_reg_2327;
reg   [7:0] lshr_ln161_s_reg_2327_pp0_iter1_reg;
reg   [7:0] lshr_ln161_s_reg_2327_pp0_iter2_reg;
reg   [7:0] lshr_ln161_10_reg_2367;
reg   [7:0] lshr_ln161_10_reg_2367_pp0_iter1_reg;
reg   [7:0] lshr_ln161_10_reg_2367_pp0_iter2_reg;
reg   [17:0] matched_I_0_load_reg_2407;
reg   [17:0] matched_I_4_load_reg_2412;
reg   [17:0] matched_I_8_load_reg_2417;
reg   [17:0] matched_I_12_load_1_reg_2422;
reg  signed [16:0] preamble_upsampled_load_reg_2427;
reg  signed [16:0] preamble_upsampled_load_1_reg_2432;
reg  signed [16:0] preamble_upsampled_load_2_reg_2437;
reg  signed [16:0] preamble_upsampled_load_3_reg_2442;
reg  signed [16:0] preamble_upsampled_load_4_reg_2447;
reg  signed [16:0] preamble_upsampled_load_5_reg_2452;
reg  signed [16:0] preamble_upsampled_load_6_reg_2457;
reg   [17:0] matched_I_1_load_reg_2462;
reg   [17:0] matched_I_5_load_reg_2467;
reg   [17:0] matched_I_9_load_reg_2472;
reg   [17:0] matched_I_13_load_reg_2477;
reg   [17:0] matched_I_2_load_reg_2482;
reg   [17:0] matched_I_6_load_reg_2487;
reg   [17:0] matched_I_10_load_reg_2492;
reg   [17:0] matched_I_14_load_reg_2497;
reg   [17:0] matched_I_3_load_reg_2502;
reg   [17:0] matched_I_7_load_reg_2507;
reg   [17:0] matched_I_11_load_reg_2512;
reg   [17:0] matched_I_15_load_reg_2517;
reg   [17:0] matched_I_0_load_1_reg_2522;
reg   [17:0] matched_I_4_load_1_reg_2527;
reg   [17:0] matched_I_8_load_1_reg_2532;
reg   [17:0] matched_I_12_load_2_reg_2537;
reg   [17:0] matched_I_1_load_1_reg_2542;
reg   [17:0] matched_I_5_load_1_reg_2547;
reg   [17:0] matched_I_9_load_1_reg_2552;
reg   [17:0] matched_I_13_load_1_reg_2557;
reg   [17:0] matched_I_2_load_1_reg_2562;
reg   [17:0] matched_I_6_load_1_reg_2567;
reg   [17:0] matched_I_10_load_1_reg_2572;
reg   [17:0] matched_I_14_load_1_reg_2577;
reg   [17:0] matched_I_3_load_1_reg_2582;
reg   [17:0] matched_I_7_load_1_reg_2587;
reg   [17:0] matched_I_11_load_1_reg_2592;
reg   [17:0] matched_I_15_load_1_reg_2597;
reg  signed [16:0] preamble_upsampled_load_7_reg_2602;
wire   [17:0] select_ln162_fu_1431_p3;
reg  signed [17:0] select_ln162_reg_2607;
wire   [17:0] select_ln162_1_fu_1439_p3;
reg  signed [17:0] select_ln162_1_reg_2612;
wire   [17:0] select_ln162_2_fu_1447_p3;
reg  signed [17:0] select_ln162_2_reg_2617;
wire   [17:0] select_ln162_3_fu_1455_p3;
reg  signed [17:0] select_ln162_3_reg_2622;
wire   [17:0] select_ln162_4_fu_1463_p3;
reg  signed [17:0] select_ln162_4_reg_2627;
wire   [17:0] select_ln162_5_fu_1471_p3;
reg  signed [17:0] select_ln162_5_reg_2632;
wire   [17:0] select_ln162_6_fu_1479_p3;
reg  signed [17:0] select_ln162_6_reg_2637;
wire   [17:0] select_ln162_7_fu_1487_p3;
reg  signed [17:0] select_ln162_7_reg_2642;
wire   [17:0] tmp_4_fu_1495_p15;
reg  signed [17:0] tmp_4_reg_2647;
wire  signed [33:0] sext_ln161_fu_1522_p1;
reg  signed [33:0] sext_ln161_reg_2652;
wire   [17:0] tmp_5_fu_1525_p15;
reg  signed [17:0] tmp_5_reg_2657;
wire  signed [33:0] sext_ln161_3_fu_1552_p1;
reg  signed [33:0] sext_ln161_3_reg_2662;
wire   [17:0] tmp_6_fu_1555_p15;
reg  signed [17:0] tmp_6_reg_2667;
wire  signed [33:0] sext_ln161_5_fu_1582_p1;
reg  signed [33:0] sext_ln161_5_reg_2672;
wire   [17:0] tmp_7_fu_1585_p15;
reg  signed [17:0] tmp_7_reg_2677;
wire  signed [33:0] sext_ln161_7_fu_1612_p1;
reg  signed [33:0] sext_ln161_7_reg_2682;
wire   [17:0] tmp_8_fu_1615_p15;
reg  signed [17:0] tmp_8_reg_2687;
wire  signed [33:0] sext_ln161_9_fu_1642_p1;
reg  signed [33:0] sext_ln161_9_reg_2692;
wire   [17:0] tmp_9_fu_1645_p15;
reg  signed [17:0] tmp_9_reg_2697;
wire  signed [33:0] sext_ln161_11_fu_1672_p1;
reg  signed [33:0] sext_ln161_11_reg_2702;
wire   [17:0] tmp_s_fu_1675_p15;
reg  signed [17:0] tmp_s_reg_2707;
wire  signed [33:0] sext_ln161_13_fu_1702_p1;
reg  signed [33:0] sext_ln161_13_reg_2712;
wire   [17:0] tmp_10_fu_1705_p15;
reg  signed [17:0] tmp_10_reg_2717;
wire  signed [33:0] sext_ln161_14_fu_1732_p1;
reg  signed [33:0] sext_ln161_14_reg_2722;
reg   [17:0] trunc_ln9_reg_2727;
reg   [17:0] trunc_ln162_1_reg_2732;
reg   [17:0] trunc_ln162_2_reg_2737;
reg   [17:0] trunc_ln162_3_reg_2742;
reg   [17:0] trunc_ln162_4_reg_2747;
reg   [17:0] trunc_ln162_5_reg_2752;
reg   [17:0] trunc_ln162_6_reg_2757;
reg   [17:0] trunc_ln162_7_reg_2762;
wire   [63:0] zext_ln161_1_fu_1887_p1;
reg   [63:0] zext_ln161_1_reg_2767;
reg   [17:0] trunc_ln8_reg_2772;
wire   [63:0] zext_ln161_3_fu_1909_p1;
reg   [63:0] zext_ln161_3_reg_2777;
wire   [63:0] zext_ln161_5_fu_1913_p1;
reg   [63:0] zext_ln161_5_reg_2782;
wire   [63:0] zext_ln161_7_fu_1917_p1;
reg   [63:0] zext_ln161_7_reg_2787;
wire   [63:0] zext_ln161_10_fu_1921_p1;
reg   [63:0] zext_ln161_10_reg_2792;
wire   [63:0] zext_ln161_13_fu_1925_p1;
reg   [63:0] zext_ln161_13_reg_2797;
wire   [63:0] zext_ln161_16_fu_1929_p1;
reg   [63:0] zext_ln161_16_reg_2802;
wire   [63:0] zext_ln161_19_fu_1933_p1;
reg   [63:0] zext_ln161_19_reg_2807;
reg   [17:0] trunc_ln161_1_reg_2812;
reg   [17:0] trunc_ln161_2_reg_2817;
reg   [17:0] trunc_ln161_3_reg_2822;
reg   [17:0] trunc_ln161_4_reg_2827;
reg   [17:0] trunc_ln161_5_reg_2832;
reg   [17:0] trunc_ln161_6_reg_2837;
reg   [17:0] trunc_ln161_7_reg_2842;
wire   [63:0] zext_ln159_fu_1115_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln161_fu_1149_p1;
wire   [63:0] zext_ln161_2_fu_1170_p1;
wire   [63:0] zext_ln161_4_fu_1191_p1;
wire   [63:0] zext_ln161_6_fu_1212_p1;
wire   [63:0] zext_ln161_8_fu_1243_p1;
wire   [63:0] zext_ln161_9_fu_1259_p1;
wire   [63:0] zext_ln161_11_fu_1290_p1;
wire   [63:0] zext_ln161_12_fu_1306_p1;
wire   [63:0] zext_ln161_14_fu_1337_p1;
wire   [63:0] zext_ln161_15_fu_1353_p1;
wire   [63:0] zext_ln161_17_fu_1384_p1;
wire   [63:0] zext_ln161_18_fu_1400_p1;
reg   [10:0] i_9_fu_170;
wire   [10:0] add_ln159_4_fu_1415_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_i;
wire   [6:0] lshr_ln8_fu_1105_p4;
wire   [10:0] add_ln161_fu_1143_p2;
wire   [10:0] add_ln161_1_fu_1164_p2;
wire   [10:0] add_ln161_2_fu_1185_p2;
wire   [10:0] add_ln161_3_fu_1206_p2;
wire   [10:0] add_ln159_fu_1227_p2;
wire   [6:0] lshr_ln161_5_fu_1233_p4;
wire   [10:0] add_ln161_4_fu_1253_p2;
wire   [10:0] add_ln159_1_fu_1274_p2;
wire   [6:0] lshr_ln161_7_fu_1280_p4;
wire   [10:0] add_ln161_5_fu_1300_p2;
wire   [10:0] add_ln159_2_fu_1321_p2;
wire   [6:0] lshr_ln161_9_fu_1327_p4;
wire   [10:0] add_ln161_6_fu_1347_p2;
wire   [10:0] add_ln159_3_fu_1368_p2;
wire   [6:0] lshr_ln161_1_fu_1374_p4;
wire   [10:0] add_ln161_7_fu_1394_p2;
wire   [0:0] icmp_ln162_fu_1426_p2;
wire   [33:0] mul_ln162_fu_1738_p2;
wire   [33:0] mul_ln162_1_fu_1757_p2;
wire   [33:0] mul_ln162_2_fu_1776_p2;
wire   [33:0] mul_ln162_3_fu_1795_p2;
wire   [33:0] mul_ln162_4_fu_1814_p2;
wire   [33:0] mul_ln162_5_fu_1833_p2;
wire   [33:0] mul_ln162_6_fu_1852_p2;
wire   [33:0] mul_ln162_7_fu_1871_p2;
wire  signed [16:0] mul_ln161_fu_1894_p0;
wire   [33:0] mul_ln161_fu_1894_p2;
wire  signed [16:0] mul_ln161_1_fu_1940_p1;
wire   [33:0] mul_ln161_1_fu_1940_p2;
wire  signed [16:0] mul_ln161_2_fu_1958_p1;
wire   [33:0] mul_ln161_2_fu_1958_p2;
wire  signed [16:0] mul_ln161_3_fu_1976_p1;
wire   [33:0] mul_ln161_3_fu_1976_p2;
wire  signed [16:0] mul_ln161_4_fu_1994_p1;
wire   [33:0] mul_ln161_4_fu_1994_p2;
wire  signed [16:0] mul_ln161_5_fu_2012_p1;
wire   [33:0] mul_ln161_5_fu_2012_p2;
wire  signed [16:0] mul_ln161_6_fu_2030_p1;
wire   [33:0] mul_ln161_6_fu_2030_p2;
wire  signed [16:0] mul_ln161_7_fu_2048_p0;
wire   [33:0] mul_ln161_7_fu_2048_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_receiver_Pipeline_VITIS_LOOP_159_10_preamble_upsampled_ROM_AUTO_1R #(
    .DataWidth( 17 ),
    .AddressRange( 1120 ),
    .AddressWidth( 11 ))
preamble_upsampled_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(preamble_upsampled_address0),
    .ce0(preamble_upsampled_ce0),
    .q0(preamble_upsampled_q0),
    .address1(preamble_upsampled_address1),
    .ce1(preamble_upsampled_ce1),
    .q1(preamble_upsampled_q1),
    .address2(preamble_upsampled_address2),
    .ce2(preamble_upsampled_ce2),
    .q2(preamble_upsampled_q2),
    .address3(preamble_upsampled_address3),
    .ce3(preamble_upsampled_ce3),
    .q3(preamble_upsampled_q3),
    .address4(preamble_upsampled_address4),
    .ce4(preamble_upsampled_ce4),
    .q4(preamble_upsampled_q4),
    .address5(preamble_upsampled_address5),
    .ce5(preamble_upsampled_ce5),
    .q5(preamble_upsampled_q5),
    .address6(preamble_upsampled_address6),
    .ce6(preamble_upsampled_ce6),
    .q6(preamble_upsampled_q6),
    .address7(preamble_upsampled_address7),
    .ce7(preamble_upsampled_ce7),
    .q7(preamble_upsampled_q7)
);

receiver_mux_13_4_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 4 ),
    .dout_WIDTH( 18 ))
mux_13_4_18_1_1_U257(
    .din0(matched_I_0_load_reg_2407),
    .din1(18'd0),
    .din2(18'd0),
    .din3(18'd0),
    .din4(matched_I_4_load_reg_2412),
    .din5(18'd0),
    .din6(18'd0),
    .din7(18'd0),
    .din8(matched_I_8_load_reg_2417),
    .din9(18'd0),
    .din10(18'd0),
    .din11(18'd0),
    .din12(matched_I_12_load_1_reg_2422),
    .din13(empty_reg_2074_pp0_iter1_reg),
    .dout(tmp_4_fu_1495_p15)
);

receiver_mux_13_4_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 4 ),
    .dout_WIDTH( 18 ))
mux_13_4_18_1_1_U258(
    .din0(matched_I_1_load_reg_2462),
    .din1(18'd0),
    .din2(18'd0),
    .din3(18'd0),
    .din4(matched_I_5_load_reg_2467),
    .din5(18'd0),
    .din6(18'd0),
    .din7(18'd0),
    .din8(matched_I_9_load_reg_2472),
    .din9(18'd0),
    .din10(18'd0),
    .din11(18'd0),
    .din12(matched_I_13_load_reg_2477),
    .din13(empty_reg_2074_pp0_iter1_reg),
    .dout(tmp_5_fu_1525_p15)
);

receiver_mux_13_4_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 4 ),
    .dout_WIDTH( 18 ))
mux_13_4_18_1_1_U259(
    .din0(matched_I_2_load_reg_2482),
    .din1(18'd0),
    .din2(18'd0),
    .din3(18'd0),
    .din4(matched_I_6_load_reg_2487),
    .din5(18'd0),
    .din6(18'd0),
    .din7(18'd0),
    .din8(matched_I_10_load_reg_2492),
    .din9(18'd0),
    .din10(18'd0),
    .din11(18'd0),
    .din12(matched_I_14_load_reg_2497),
    .din13(empty_reg_2074_pp0_iter1_reg),
    .dout(tmp_6_fu_1555_p15)
);

receiver_mux_13_4_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 4 ),
    .dout_WIDTH( 18 ))
mux_13_4_18_1_1_U260(
    .din0(matched_I_3_load_reg_2502),
    .din1(18'd0),
    .din2(18'd0),
    .din3(18'd0),
    .din4(matched_I_7_load_reg_2507),
    .din5(18'd0),
    .din6(18'd0),
    .din7(18'd0),
    .din8(matched_I_11_load_reg_2512),
    .din9(18'd0),
    .din10(18'd0),
    .din11(18'd0),
    .din12(matched_I_15_load_reg_2517),
    .din13(empty_reg_2074_pp0_iter1_reg),
    .dout(tmp_7_fu_1585_p15)
);

receiver_mux_13_4_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 4 ),
    .dout_WIDTH( 18 ))
mux_13_4_18_1_1_U261(
    .din0(matched_I_4_load_1_reg_2527),
    .din1(18'd0),
    .din2(18'd0),
    .din3(18'd0),
    .din4(matched_I_8_load_1_reg_2532),
    .din5(18'd0),
    .din6(18'd0),
    .din7(18'd0),
    .din8(matched_I_12_load_2_reg_2537),
    .din9(18'd0),
    .din10(18'd0),
    .din11(18'd0),
    .din12(matched_I_0_load_1_reg_2522),
    .din13(empty_reg_2074_pp0_iter1_reg),
    .dout(tmp_8_fu_1615_p15)
);

receiver_mux_13_4_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 4 ),
    .dout_WIDTH( 18 ))
mux_13_4_18_1_1_U262(
    .din0(matched_I_5_load_1_reg_2547),
    .din1(18'd0),
    .din2(18'd0),
    .din3(18'd0),
    .din4(matched_I_9_load_1_reg_2552),
    .din5(18'd0),
    .din6(18'd0),
    .din7(18'd0),
    .din8(matched_I_13_load_1_reg_2557),
    .din9(18'd0),
    .din10(18'd0),
    .din11(18'd0),
    .din12(matched_I_1_load_1_reg_2542),
    .din13(empty_reg_2074_pp0_iter1_reg),
    .dout(tmp_9_fu_1645_p15)
);

receiver_mux_13_4_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 4 ),
    .dout_WIDTH( 18 ))
mux_13_4_18_1_1_U263(
    .din0(matched_I_6_load_1_reg_2567),
    .din1(18'd0),
    .din2(18'd0),
    .din3(18'd0),
    .din4(matched_I_10_load_1_reg_2572),
    .din5(18'd0),
    .din6(18'd0),
    .din7(18'd0),
    .din8(matched_I_14_load_1_reg_2577),
    .din9(18'd0),
    .din10(18'd0),
    .din11(18'd0),
    .din12(matched_I_2_load_1_reg_2562),
    .din13(empty_reg_2074_pp0_iter1_reg),
    .dout(tmp_s_fu_1675_p15)
);

receiver_mux_13_4_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 4 ),
    .dout_WIDTH( 18 ))
mux_13_4_18_1_1_U264(
    .din0(matched_I_7_load_1_reg_2587),
    .din1(18'd0),
    .din2(18'd0),
    .din3(18'd0),
    .din4(matched_I_11_load_1_reg_2592),
    .din5(18'd0),
    .din6(18'd0),
    .din7(18'd0),
    .din8(matched_I_15_load_1_reg_2597),
    .din9(18'd0),
    .din10(18'd0),
    .din11(18'd0),
    .din12(matched_I_3_load_1_reg_2582),
    .din13(empty_reg_2074_pp0_iter1_reg),
    .dout(tmp_10_fu_1705_p15)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U265(
    .din0(select_ln162_reg_2607),
    .din1(preamble_upsampled_load_reg_2427),
    .dout(mul_ln162_fu_1738_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U266(
    .din0(select_ln162_1_reg_2612),
    .din1(preamble_upsampled_load_1_reg_2432),
    .dout(mul_ln162_1_fu_1757_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U267(
    .din0(select_ln162_2_reg_2617),
    .din1(preamble_upsampled_load_2_reg_2437),
    .dout(mul_ln162_2_fu_1776_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U268(
    .din0(select_ln162_3_reg_2622),
    .din1(preamble_upsampled_load_3_reg_2442),
    .dout(mul_ln162_3_fu_1795_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U269(
    .din0(select_ln162_4_reg_2627),
    .din1(preamble_upsampled_load_4_reg_2447),
    .dout(mul_ln162_4_fu_1814_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U270(
    .din0(select_ln162_5_reg_2632),
    .din1(preamble_upsampled_load_5_reg_2452),
    .dout(mul_ln162_5_fu_1833_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U271(
    .din0(select_ln162_6_reg_2637),
    .din1(preamble_upsampled_load_6_reg_2457),
    .dout(mul_ln162_6_fu_1852_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U272(
    .din0(select_ln162_7_reg_2642),
    .din1(preamble_upsampled_load_7_reg_2602),
    .dout(mul_ln162_7_fu_1871_p2)
);

receiver_mul_17s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_17s_18s_34_1_1_U273(
    .din0(mul_ln161_fu_1894_p0),
    .din1(tmp_4_reg_2647),
    .dout(mul_ln161_fu_1894_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U274(
    .din0(tmp_5_reg_2657),
    .din1(mul_ln161_1_fu_1940_p1),
    .dout(mul_ln161_1_fu_1940_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U275(
    .din0(tmp_6_reg_2667),
    .din1(mul_ln161_2_fu_1958_p1),
    .dout(mul_ln161_2_fu_1958_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U276(
    .din0(tmp_7_reg_2677),
    .din1(mul_ln161_3_fu_1976_p1),
    .dout(mul_ln161_3_fu_1976_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U277(
    .din0(tmp_8_reg_2687),
    .din1(mul_ln161_4_fu_1994_p1),
    .dout(mul_ln161_4_fu_1994_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U278(
    .din0(tmp_9_reg_2697),
    .din1(mul_ln161_5_fu_2012_p1),
    .dout(mul_ln161_5_fu_2012_p2)
);

receiver_mul_18s_17s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 34 ))
mul_18s_17s_34_1_1_U279(
    .din0(tmp_s_reg_2707),
    .din1(mul_ln161_6_fu_2030_p1),
    .dout(mul_ln161_6_fu_2030_p2)
);

receiver_mul_17s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_17s_18s_34_1_1_U280(
    .din0(mul_ln161_7_fu_2048_p0),
    .din1(tmp_10_reg_2717),
    .dout(mul_ln161_7_fu_2048_p2)
);

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln159_fu_1095_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_9_fu_170 <= add_ln159_4_fu_1415_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_9_fu_170 <= 11'd140;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_reg_2074_pp0_iter1_reg <= empty_reg_2074;
        lshr_ln161_10_reg_2367_pp0_iter1_reg <= lshr_ln161_10_reg_2367;
        lshr_ln161_2_reg_2127_pp0_iter1_reg <= lshr_ln161_2_reg_2127;
        lshr_ln161_3_reg_2167_pp0_iter1_reg <= lshr_ln161_3_reg_2167;
        lshr_ln161_4_reg_2207_pp0_iter1_reg <= lshr_ln161_4_reg_2207;
        lshr_ln161_6_reg_2247_pp0_iter1_reg <= lshr_ln161_6_reg_2247;
        lshr_ln161_8_reg_2287_pp0_iter1_reg <= lshr_ln161_8_reg_2287;
        lshr_ln161_s_reg_2327_pp0_iter1_reg <= lshr_ln161_s_reg_2327;
        lshr_ln9_reg_2087_pp0_iter1_reg <= lshr_ln9_reg_2087;
        select_ln162_1_reg_2612 <= select_ln162_1_fu_1439_p3;
        select_ln162_2_reg_2617 <= select_ln162_2_fu_1447_p3;
        select_ln162_3_reg_2622 <= select_ln162_3_fu_1455_p3;
        select_ln162_4_reg_2627 <= select_ln162_4_fu_1463_p3;
        select_ln162_5_reg_2632 <= select_ln162_5_fu_1471_p3;
        select_ln162_6_reg_2637 <= select_ln162_6_fu_1479_p3;
        select_ln162_7_reg_2642 <= select_ln162_7_fu_1487_p3;
        select_ln162_reg_2607 <= select_ln162_fu_1431_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        lshr_ln161_10_reg_2367_pp0_iter2_reg <= lshr_ln161_10_reg_2367_pp0_iter1_reg;
        lshr_ln161_2_reg_2127_pp0_iter2_reg <= lshr_ln161_2_reg_2127_pp0_iter1_reg;
        lshr_ln161_3_reg_2167_pp0_iter2_reg <= lshr_ln161_3_reg_2167_pp0_iter1_reg;
        lshr_ln161_4_reg_2207_pp0_iter2_reg <= lshr_ln161_4_reg_2207_pp0_iter1_reg;
        lshr_ln161_6_reg_2247_pp0_iter2_reg <= lshr_ln161_6_reg_2247_pp0_iter1_reg;
        lshr_ln161_8_reg_2287_pp0_iter2_reg <= lshr_ln161_8_reg_2287_pp0_iter1_reg;
        lshr_ln161_s_reg_2327_pp0_iter2_reg <= lshr_ln161_s_reg_2327_pp0_iter1_reg;
        lshr_ln9_reg_2087_pp0_iter2_reg <= lshr_ln9_reg_2087_pp0_iter1_reg;
        sext_ln161_11_reg_2702 <= sext_ln161_11_fu_1672_p1;
        sext_ln161_13_reg_2712 <= sext_ln161_13_fu_1702_p1;
        sext_ln161_14_reg_2722 <= sext_ln161_14_fu_1732_p1;
        sext_ln161_3_reg_2662 <= sext_ln161_3_fu_1552_p1;
        sext_ln161_5_reg_2672 <= sext_ln161_5_fu_1582_p1;
        sext_ln161_7_reg_2682 <= sext_ln161_7_fu_1612_p1;
        sext_ln161_9_reg_2692 <= sext_ln161_9_fu_1642_p1;
        sext_ln161_reg_2652 <= sext_ln161_fu_1522_p1;
        tmp_10_reg_2717 <= tmp_10_fu_1705_p15;
        tmp_4_reg_2647 <= tmp_4_fu_1495_p15;
        tmp_5_reg_2657 <= tmp_5_fu_1525_p15;
        tmp_6_reg_2667 <= tmp_6_fu_1555_p15;
        tmp_7_reg_2677 <= tmp_7_fu_1585_p15;
        tmp_8_reg_2687 <= tmp_8_fu_1615_p15;
        tmp_9_reg_2697 <= tmp_9_fu_1645_p15;
        tmp_s_reg_2707 <= tmp_s_fu_1675_p15;
        trunc_ln161_1_reg_2812 <= {{mul_ln161_1_fu_1940_p2[33:16]}};
        trunc_ln161_2_reg_2817 <= {{mul_ln161_2_fu_1958_p2[33:16]}};
        trunc_ln161_3_reg_2822 <= {{mul_ln161_3_fu_1976_p2[33:16]}};
        trunc_ln161_4_reg_2827 <= {{mul_ln161_4_fu_1994_p2[33:16]}};
        trunc_ln161_5_reg_2832 <= {{mul_ln161_5_fu_2012_p2[33:16]}};
        trunc_ln161_6_reg_2837 <= {{mul_ln161_6_fu_2030_p2[33:16]}};
        trunc_ln161_7_reg_2842 <= {{mul_ln161_7_fu_2048_p2[33:16]}};
        trunc_ln162_1_reg_2732 <= {{mul_ln162_1_fu_1757_p2[33:16]}};
        trunc_ln162_2_reg_2737 <= {{mul_ln162_2_fu_1776_p2[33:16]}};
        trunc_ln162_3_reg_2742 <= {{mul_ln162_3_fu_1795_p2[33:16]}};
        trunc_ln162_4_reg_2747 <= {{mul_ln162_4_fu_1814_p2[33:16]}};
        trunc_ln162_5_reg_2752 <= {{mul_ln162_5_fu_1833_p2[33:16]}};
        trunc_ln162_6_reg_2757 <= {{mul_ln162_6_fu_1852_p2[33:16]}};
        trunc_ln162_7_reg_2762 <= {{mul_ln162_7_fu_1871_p2[33:16]}};
        trunc_ln8_reg_2772 <= {{mul_ln161_fu_1894_p2[33:16]}};
        trunc_ln9_reg_2727 <= {{mul_ln162_fu_1738_p2[33:16]}};
        zext_ln161_10_reg_2792[7 : 0] <= zext_ln161_10_fu_1921_p1[7 : 0];
        zext_ln161_13_reg_2797[7 : 0] <= zext_ln161_13_fu_1925_p1[7 : 0];
        zext_ln161_16_reg_2802[7 : 0] <= zext_ln161_16_fu_1929_p1[7 : 0];
        zext_ln161_19_reg_2807[7 : 0] <= zext_ln161_19_fu_1933_p1[7 : 0];
        zext_ln161_1_reg_2767[7 : 0] <= zext_ln161_1_fu_1887_p1[7 : 0];
        zext_ln161_3_reg_2777[7 : 0] <= zext_ln161_3_fu_1909_p1[7 : 0];
        zext_ln161_5_reg_2782[7 : 0] <= zext_ln161_5_fu_1913_p1[7 : 0];
        zext_ln161_7_reg_2787[7 : 0] <= zext_ln161_7_fu_1917_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_fu_1095_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_2074 <= empty_fu_1101_p1;
        lshr_ln161_10_reg_2367 <= {{add_ln161_7_fu_1394_p2[10:3]}};
        lshr_ln161_2_reg_2127 <= {{add_ln161_1_fu_1164_p2[10:3]}};
        lshr_ln161_3_reg_2167 <= {{add_ln161_2_fu_1185_p2[10:3]}};
        lshr_ln161_4_reg_2207 <= {{add_ln161_3_fu_1206_p2[10:3]}};
        lshr_ln161_6_reg_2247 <= {{add_ln161_4_fu_1253_p2[10:3]}};
        lshr_ln161_8_reg_2287 <= {{add_ln161_5_fu_1300_p2[10:3]}};
        lshr_ln161_s_reg_2327 <= {{add_ln161_6_fu_1347_p2[10:3]}};
        lshr_ln9_reg_2087 <= {{add_ln161_fu_1143_p2[10:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_0_load_1_reg_2522 <= matched_I_0_q0;
        matched_I_0_load_reg_2407 <= matched_I_0_q1;
        matched_I_10_load_1_reg_2572 <= matched_I_10_q0;
        matched_I_10_load_reg_2492 <= matched_I_10_q1;
        matched_I_11_load_1_reg_2592 <= matched_I_11_q0;
        matched_I_11_load_reg_2512 <= matched_I_11_q1;
        matched_I_12_load_1_reg_2422 <= matched_I_12_q1;
        matched_I_12_load_2_reg_2537 <= matched_I_12_q0;
        matched_I_13_load_1_reg_2557 <= matched_I_13_q0;
        matched_I_13_load_reg_2477 <= matched_I_13_q1;
        matched_I_14_load_1_reg_2577 <= matched_I_14_q0;
        matched_I_14_load_reg_2497 <= matched_I_14_q1;
        matched_I_15_load_1_reg_2597 <= matched_I_15_q0;
        matched_I_15_load_reg_2517 <= matched_I_15_q1;
        matched_I_1_load_1_reg_2542 <= matched_I_1_q0;
        matched_I_1_load_reg_2462 <= matched_I_1_q1;
        matched_I_2_load_1_reg_2562 <= matched_I_2_q0;
        matched_I_2_load_reg_2482 <= matched_I_2_q1;
        matched_I_3_load_1_reg_2582 <= matched_I_3_q0;
        matched_I_3_load_reg_2502 <= matched_I_3_q1;
        matched_I_4_load_1_reg_2527 <= matched_I_4_q0;
        matched_I_4_load_reg_2412 <= matched_I_4_q1;
        matched_I_5_load_1_reg_2547 <= matched_I_5_q0;
        matched_I_5_load_reg_2467 <= matched_I_5_q1;
        matched_I_6_load_1_reg_2567 <= matched_I_6_q0;
        matched_I_6_load_reg_2487 <= matched_I_6_q1;
        matched_I_7_load_1_reg_2587 <= matched_I_7_q0;
        matched_I_7_load_reg_2507 <= matched_I_7_q1;
        matched_I_8_load_1_reg_2532 <= matched_I_8_q0;
        matched_I_8_load_reg_2417 <= matched_I_8_q1;
        matched_I_9_load_1_reg_2552 <= matched_I_9_q0;
        matched_I_9_load_reg_2472 <= matched_I_9_q1;
        preamble_upsampled_load_1_reg_2432 <= preamble_upsampled_q6;
        preamble_upsampled_load_2_reg_2437 <= preamble_upsampled_q5;
        preamble_upsampled_load_3_reg_2442 <= preamble_upsampled_q4;
        preamble_upsampled_load_4_reg_2447 <= preamble_upsampled_q3;
        preamble_upsampled_load_5_reg_2452 <= preamble_upsampled_q2;
        preamble_upsampled_load_6_reg_2457 <= preamble_upsampled_q1;
        preamble_upsampled_load_7_reg_2602 <= preamble_upsampled_q0;
        preamble_upsampled_load_reg_2427 <= preamble_upsampled_q7;
    end
end

always @ (*) begin
    if (((icmp_ln159_fu_1095_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i = 11'd140;
    end else begin
        ap_sig_allocacmp_i = i_9_fu_170;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_1_ce0 = 1'b1;
    end else begin
        arr_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_1_we0 = 1'b1;
    end else begin
        arr_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_2_ce0 = 1'b1;
    end else begin
        arr_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_2_we0 = 1'b1;
    end else begin
        arr_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_3_ce0 = 1'b1;
    end else begin
        arr_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_3_we0 = 1'b1;
    end else begin
        arr_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_4_ce0 = 1'b1;
    end else begin
        arr_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_4_we0 = 1'b1;
    end else begin
        arr_I_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_5_ce0 = 1'b1;
    end else begin
        arr_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_5_we0 = 1'b1;
    end else begin
        arr_I_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_6_ce0 = 1'b1;
    end else begin
        arr_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_6_we0 = 1'b1;
    end else begin
        arr_I_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_7_ce0 = 1'b1;
    end else begin
        arr_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_7_we0 = 1'b1;
    end else begin
        arr_I_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_ce0 = 1'b1;
    end else begin
        arr_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        arr_I_we0 = 1'b1;
    end else begin
        arr_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_1_ce0 = 1'b1;
    end else begin
        arr_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_1_we0 = 1'b1;
    end else begin
        arr_Q_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_2_ce0 = 1'b1;
    end else begin
        arr_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_2_we0 = 1'b1;
    end else begin
        arr_Q_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_3_ce0 = 1'b1;
    end else begin
        arr_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_3_we0 = 1'b1;
    end else begin
        arr_Q_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_4_ce0 = 1'b1;
    end else begin
        arr_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_4_we0 = 1'b1;
    end else begin
        arr_Q_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_5_ce0 = 1'b1;
    end else begin
        arr_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_5_we0 = 1'b1;
    end else begin
        arr_Q_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_6_ce0 = 1'b1;
    end else begin
        arr_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_6_we0 = 1'b1;
    end else begin
        arr_Q_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_7_ce0 = 1'b1;
    end else begin
        arr_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_7_we0 = 1'b1;
    end else begin
        arr_Q_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_ce0 = 1'b1;
    end else begin
        arr_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        arr_Q_we0 = 1'b1;
    end else begin
        arr_Q_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_0_ce0 = 1'b1;
    end else begin
        matched_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_0_ce1 = 1'b1;
    end else begin
        matched_I_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_10_ce0 = 1'b1;
    end else begin
        matched_I_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_10_ce1 = 1'b1;
    end else begin
        matched_I_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_11_ce0 = 1'b1;
    end else begin
        matched_I_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_11_ce1 = 1'b1;
    end else begin
        matched_I_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_12_ce0 = 1'b1;
    end else begin
        matched_I_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_12_ce1 = 1'b1;
    end else begin
        matched_I_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_13_ce0 = 1'b1;
    end else begin
        matched_I_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_13_ce1 = 1'b1;
    end else begin
        matched_I_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_14_ce0 = 1'b1;
    end else begin
        matched_I_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_14_ce1 = 1'b1;
    end else begin
        matched_I_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_15_ce0 = 1'b1;
    end else begin
        matched_I_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_15_ce1 = 1'b1;
    end else begin
        matched_I_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_1_ce0 = 1'b1;
    end else begin
        matched_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_1_ce1 = 1'b1;
    end else begin
        matched_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_2_ce0 = 1'b1;
    end else begin
        matched_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_2_ce1 = 1'b1;
    end else begin
        matched_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_3_ce0 = 1'b1;
    end else begin
        matched_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_3_ce1 = 1'b1;
    end else begin
        matched_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_4_ce0 = 1'b1;
    end else begin
        matched_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_4_ce1 = 1'b1;
    end else begin
        matched_I_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_5_ce0 = 1'b1;
    end else begin
        matched_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_5_ce1 = 1'b1;
    end else begin
        matched_I_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_6_ce0 = 1'b1;
    end else begin
        matched_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_6_ce1 = 1'b1;
    end else begin
        matched_I_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_7_ce0 = 1'b1;
    end else begin
        matched_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_7_ce1 = 1'b1;
    end else begin
        matched_I_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_8_ce0 = 1'b1;
    end else begin
        matched_I_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_8_ce1 = 1'b1;
    end else begin
        matched_I_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_9_ce0 = 1'b1;
    end else begin
        matched_I_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_I_9_ce1 = 1'b1;
    end else begin
        matched_I_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_0_ce0 = 1'b1;
    end else begin
        matched_Q_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_10_ce0 = 1'b1;
    end else begin
        matched_Q_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_11_ce0 = 1'b1;
    end else begin
        matched_Q_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_12_ce0 = 1'b1;
    end else begin
        matched_Q_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_13_ce0 = 1'b1;
    end else begin
        matched_Q_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_14_ce0 = 1'b1;
    end else begin
        matched_Q_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_15_ce0 = 1'b1;
    end else begin
        matched_Q_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_1_ce0 = 1'b1;
    end else begin
        matched_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_2_ce0 = 1'b1;
    end else begin
        matched_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_3_ce0 = 1'b1;
    end else begin
        matched_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_4_ce0 = 1'b1;
    end else begin
        matched_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_5_ce0 = 1'b1;
    end else begin
        matched_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_6_ce0 = 1'b1;
    end else begin
        matched_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_7_ce0 = 1'b1;
    end else begin
        matched_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_8_ce0 = 1'b1;
    end else begin
        matched_Q_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matched_Q_9_ce0 = 1'b1;
    end else begin
        matched_Q_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        preamble_upsampled_ce0 = 1'b1;
    end else begin
        preamble_upsampled_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        preamble_upsampled_ce1 = 1'b1;
    end else begin
        preamble_upsampled_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        preamble_upsampled_ce2 = 1'b1;
    end else begin
        preamble_upsampled_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        preamble_upsampled_ce3 = 1'b1;
    end else begin
        preamble_upsampled_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        preamble_upsampled_ce4 = 1'b1;
    end else begin
        preamble_upsampled_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        preamble_upsampled_ce5 = 1'b1;
    end else begin
        preamble_upsampled_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        preamble_upsampled_ce6 = 1'b1;
    end else begin
        preamble_upsampled_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        preamble_upsampled_ce7 = 1'b1;
    end else begin
        preamble_upsampled_ce7 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln159_1_fu_1274_p2 = (ap_sig_allocacmp_i + 11'd5);

assign add_ln159_2_fu_1321_p2 = (ap_sig_allocacmp_i + 11'd6);

assign add_ln159_3_fu_1368_p2 = (ap_sig_allocacmp_i + 11'd7);

assign add_ln159_4_fu_1415_p2 = (ap_sig_allocacmp_i + 11'd8);

assign add_ln159_fu_1227_p2 = (ap_sig_allocacmp_i + 11'd4);

assign add_ln161_1_fu_1164_p2 = ($signed(ap_sig_allocacmp_i) + $signed(11'd1909));

assign add_ln161_2_fu_1185_p2 = ($signed(ap_sig_allocacmp_i) + $signed(11'd1910));

assign add_ln161_3_fu_1206_p2 = ($signed(ap_sig_allocacmp_i) + $signed(11'd1911));

assign add_ln161_4_fu_1253_p2 = ($signed(ap_sig_allocacmp_i) + $signed(11'd1912));

assign add_ln161_5_fu_1300_p2 = ($signed(ap_sig_allocacmp_i) + $signed(11'd1913));

assign add_ln161_6_fu_1347_p2 = ($signed(ap_sig_allocacmp_i) + $signed(11'd1914));

assign add_ln161_7_fu_1394_p2 = ($signed(ap_sig_allocacmp_i) + $signed(11'd1915));

assign add_ln161_fu_1143_p2 = ($signed(ap_sig_allocacmp_i) + $signed(11'd1908));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign arr_I_1_address0 = zext_ln161_3_reg_2777;

assign arr_I_1_d0 = trunc_ln161_1_reg_2812;

assign arr_I_2_address0 = zext_ln161_5_reg_2782;

assign arr_I_2_d0 = trunc_ln161_2_reg_2817;

assign arr_I_3_address0 = zext_ln161_7_reg_2787;

assign arr_I_3_d0 = trunc_ln161_3_reg_2822;

assign arr_I_4_address0 = zext_ln161_10_reg_2792;

assign arr_I_4_d0 = trunc_ln161_4_reg_2827;

assign arr_I_5_address0 = zext_ln161_13_reg_2797;

assign arr_I_5_d0 = trunc_ln161_5_reg_2832;

assign arr_I_6_address0 = zext_ln161_16_reg_2802;

assign arr_I_6_d0 = trunc_ln161_6_reg_2837;

assign arr_I_7_address0 = zext_ln161_19_reg_2807;

assign arr_I_7_d0 = trunc_ln161_7_reg_2842;

assign arr_I_address0 = zext_ln161_1_reg_2767;

assign arr_I_d0 = trunc_ln8_reg_2772;

assign arr_Q_1_address0 = zext_ln161_3_fu_1909_p1;

assign arr_Q_1_d0 = trunc_ln162_1_reg_2732;

assign arr_Q_2_address0 = zext_ln161_5_fu_1913_p1;

assign arr_Q_2_d0 = trunc_ln162_2_reg_2737;

assign arr_Q_3_address0 = zext_ln161_7_fu_1917_p1;

assign arr_Q_3_d0 = trunc_ln162_3_reg_2742;

assign arr_Q_4_address0 = zext_ln161_10_fu_1921_p1;

assign arr_Q_4_d0 = trunc_ln162_4_reg_2747;

assign arr_Q_5_address0 = zext_ln161_13_fu_1925_p1;

assign arr_Q_5_d0 = trunc_ln162_5_reg_2752;

assign arr_Q_6_address0 = zext_ln161_16_fu_1929_p1;

assign arr_Q_6_d0 = trunc_ln162_6_reg_2757;

assign arr_Q_7_address0 = zext_ln161_19_fu_1933_p1;

assign arr_Q_7_d0 = trunc_ln162_7_reg_2762;

assign arr_Q_address0 = zext_ln161_1_fu_1887_p1;

assign arr_Q_d0 = trunc_ln9_reg_2727;

assign empty_fu_1101_p1 = ap_sig_allocacmp_i[3:0];

assign icmp_ln159_fu_1095_p2 = ((ap_sig_allocacmp_i < 11'd1260) ? 1'b1 : 1'b0);

assign icmp_ln162_fu_1426_p2 = ((empty_reg_2074 == 4'd12) ? 1'b1 : 1'b0);

assign lshr_ln161_1_fu_1374_p4 = {{add_ln159_3_fu_1368_p2[10:4]}};

assign lshr_ln161_5_fu_1233_p4 = {{add_ln159_fu_1227_p2[10:4]}};

assign lshr_ln161_7_fu_1280_p4 = {{add_ln159_1_fu_1274_p2[10:4]}};

assign lshr_ln161_9_fu_1327_p4 = {{add_ln159_2_fu_1321_p2[10:4]}};

assign lshr_ln8_fu_1105_p4 = {{ap_sig_allocacmp_i[10:4]}};

assign matched_I_0_address0 = zext_ln161_8_fu_1243_p1;

assign matched_I_0_address1 = zext_ln159_fu_1115_p1;

assign matched_I_10_address0 = zext_ln161_14_fu_1337_p1;

assign matched_I_10_address1 = zext_ln159_fu_1115_p1;

assign matched_I_11_address0 = zext_ln161_17_fu_1384_p1;

assign matched_I_11_address1 = zext_ln159_fu_1115_p1;

assign matched_I_12_address0 = zext_ln161_8_fu_1243_p1;

assign matched_I_12_address1 = zext_ln159_fu_1115_p1;

assign matched_I_13_address0 = zext_ln161_11_fu_1290_p1;

assign matched_I_13_address1 = zext_ln159_fu_1115_p1;

assign matched_I_14_address0 = zext_ln161_14_fu_1337_p1;

assign matched_I_14_address1 = zext_ln159_fu_1115_p1;

assign matched_I_15_address0 = zext_ln161_17_fu_1384_p1;

assign matched_I_15_address1 = zext_ln159_fu_1115_p1;

assign matched_I_1_address0 = zext_ln161_11_fu_1290_p1;

assign matched_I_1_address1 = zext_ln159_fu_1115_p1;

assign matched_I_2_address0 = zext_ln161_14_fu_1337_p1;

assign matched_I_2_address1 = zext_ln159_fu_1115_p1;

assign matched_I_3_address0 = zext_ln161_17_fu_1384_p1;

assign matched_I_3_address1 = zext_ln159_fu_1115_p1;

assign matched_I_4_address0 = zext_ln161_8_fu_1243_p1;

assign matched_I_4_address1 = zext_ln159_fu_1115_p1;

assign matched_I_5_address0 = zext_ln161_11_fu_1290_p1;

assign matched_I_5_address1 = zext_ln159_fu_1115_p1;

assign matched_I_6_address0 = zext_ln161_14_fu_1337_p1;

assign matched_I_6_address1 = zext_ln159_fu_1115_p1;

assign matched_I_7_address0 = zext_ln161_17_fu_1384_p1;

assign matched_I_7_address1 = zext_ln159_fu_1115_p1;

assign matched_I_8_address0 = zext_ln161_8_fu_1243_p1;

assign matched_I_8_address1 = zext_ln159_fu_1115_p1;

assign matched_I_9_address0 = zext_ln161_11_fu_1290_p1;

assign matched_I_9_address1 = zext_ln159_fu_1115_p1;

assign matched_Q_0_address0 = zext_ln161_8_fu_1243_p1;

assign matched_Q_10_address0 = zext_ln161_14_fu_1337_p1;

assign matched_Q_11_address0 = zext_ln161_17_fu_1384_p1;

assign matched_Q_12_address0 = zext_ln159_fu_1115_p1;

assign matched_Q_13_address0 = zext_ln159_fu_1115_p1;

assign matched_Q_14_address0 = zext_ln159_fu_1115_p1;

assign matched_Q_15_address0 = zext_ln159_fu_1115_p1;

assign matched_Q_1_address0 = zext_ln161_11_fu_1290_p1;

assign matched_Q_2_address0 = zext_ln161_14_fu_1337_p1;

assign matched_Q_3_address0 = zext_ln161_17_fu_1384_p1;

assign matched_Q_4_address0 = zext_ln159_fu_1115_p1;

assign matched_Q_5_address0 = zext_ln159_fu_1115_p1;

assign matched_Q_6_address0 = zext_ln159_fu_1115_p1;

assign matched_Q_7_address0 = zext_ln159_fu_1115_p1;

assign matched_Q_8_address0 = zext_ln161_8_fu_1243_p1;

assign matched_Q_9_address0 = zext_ln161_11_fu_1290_p1;

assign mul_ln161_1_fu_1940_p1 = sext_ln161_3_reg_2662;

assign mul_ln161_2_fu_1958_p1 = sext_ln161_5_reg_2672;

assign mul_ln161_3_fu_1976_p1 = sext_ln161_7_reg_2682;

assign mul_ln161_4_fu_1994_p1 = sext_ln161_9_reg_2692;

assign mul_ln161_5_fu_2012_p1 = sext_ln161_11_reg_2702;

assign mul_ln161_6_fu_2030_p1 = sext_ln161_13_reg_2712;

assign mul_ln161_7_fu_2048_p0 = sext_ln161_14_reg_2722;

assign mul_ln161_fu_1894_p0 = sext_ln161_reg_2652;

assign preamble_upsampled_address0 = zext_ln161_18_fu_1400_p1;

assign preamble_upsampled_address1 = zext_ln161_15_fu_1353_p1;

assign preamble_upsampled_address2 = zext_ln161_12_fu_1306_p1;

assign preamble_upsampled_address3 = zext_ln161_9_fu_1259_p1;

assign preamble_upsampled_address4 = zext_ln161_6_fu_1212_p1;

assign preamble_upsampled_address5 = zext_ln161_4_fu_1191_p1;

assign preamble_upsampled_address6 = zext_ln161_2_fu_1170_p1;

assign preamble_upsampled_address7 = zext_ln161_fu_1149_p1;

assign select_ln162_1_fu_1439_p3 = ((icmp_ln162_fu_1426_p2[0:0] == 1'b1) ? matched_Q_13_q0 : matched_Q_5_q0);

assign select_ln162_2_fu_1447_p3 = ((icmp_ln162_fu_1426_p2[0:0] == 1'b1) ? matched_Q_14_q0 : matched_Q_6_q0);

assign select_ln162_3_fu_1455_p3 = ((icmp_ln162_fu_1426_p2[0:0] == 1'b1) ? matched_Q_15_q0 : matched_Q_7_q0);

assign select_ln162_4_fu_1463_p3 = ((icmp_ln162_fu_1426_p2[0:0] == 1'b1) ? matched_Q_0_q0 : matched_Q_8_q0);

assign select_ln162_5_fu_1471_p3 = ((icmp_ln162_fu_1426_p2[0:0] == 1'b1) ? matched_Q_1_q0 : matched_Q_9_q0);

assign select_ln162_6_fu_1479_p3 = ((icmp_ln162_fu_1426_p2[0:0] == 1'b1) ? matched_Q_2_q0 : matched_Q_10_q0);

assign select_ln162_7_fu_1487_p3 = ((icmp_ln162_fu_1426_p2[0:0] == 1'b1) ? matched_Q_3_q0 : matched_Q_11_q0);

assign select_ln162_fu_1431_p3 = ((icmp_ln162_fu_1426_p2[0:0] == 1'b1) ? matched_Q_12_q0 : matched_Q_4_q0);

assign sext_ln161_11_fu_1672_p1 = preamble_upsampled_load_5_reg_2452;

assign sext_ln161_13_fu_1702_p1 = preamble_upsampled_load_6_reg_2457;

assign sext_ln161_14_fu_1732_p1 = preamble_upsampled_load_7_reg_2602;

assign sext_ln161_3_fu_1552_p1 = preamble_upsampled_load_1_reg_2432;

assign sext_ln161_5_fu_1582_p1 = preamble_upsampled_load_2_reg_2437;

assign sext_ln161_7_fu_1612_p1 = preamble_upsampled_load_3_reg_2442;

assign sext_ln161_9_fu_1642_p1 = preamble_upsampled_load_4_reg_2447;

assign sext_ln161_fu_1522_p1 = preamble_upsampled_load_reg_2427;

assign zext_ln159_fu_1115_p1 = lshr_ln8_fu_1105_p4;

assign zext_ln161_10_fu_1921_p1 = lshr_ln161_6_reg_2247_pp0_iter2_reg;

assign zext_ln161_11_fu_1290_p1 = lshr_ln161_7_fu_1280_p4;

assign zext_ln161_12_fu_1306_p1 = add_ln161_5_fu_1300_p2;

assign zext_ln161_13_fu_1925_p1 = lshr_ln161_8_reg_2287_pp0_iter2_reg;

assign zext_ln161_14_fu_1337_p1 = lshr_ln161_9_fu_1327_p4;

assign zext_ln161_15_fu_1353_p1 = add_ln161_6_fu_1347_p2;

assign zext_ln161_16_fu_1929_p1 = lshr_ln161_s_reg_2327_pp0_iter2_reg;

assign zext_ln161_17_fu_1384_p1 = lshr_ln161_1_fu_1374_p4;

assign zext_ln161_18_fu_1400_p1 = add_ln161_7_fu_1394_p2;

assign zext_ln161_19_fu_1933_p1 = lshr_ln161_10_reg_2367_pp0_iter2_reg;

assign zext_ln161_1_fu_1887_p1 = lshr_ln9_reg_2087_pp0_iter2_reg;

assign zext_ln161_2_fu_1170_p1 = add_ln161_1_fu_1164_p2;

assign zext_ln161_3_fu_1909_p1 = lshr_ln161_2_reg_2127_pp0_iter2_reg;

assign zext_ln161_4_fu_1191_p1 = add_ln161_2_fu_1185_p2;

assign zext_ln161_5_fu_1913_p1 = lshr_ln161_3_reg_2167_pp0_iter2_reg;

assign zext_ln161_6_fu_1212_p1 = add_ln161_3_fu_1206_p2;

assign zext_ln161_7_fu_1917_p1 = lshr_ln161_4_reg_2207_pp0_iter2_reg;

assign zext_ln161_8_fu_1243_p1 = lshr_ln161_5_fu_1233_p4;

assign zext_ln161_9_fu_1259_p1 = add_ln161_4_fu_1253_p2;

assign zext_ln161_fu_1149_p1 = add_ln161_fu_1143_p2;

always @ (posedge ap_clk) begin
    zext_ln161_1_reg_2767[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln161_3_reg_2777[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln161_5_reg_2782[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln161_7_reg_2787[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln161_10_reg_2792[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln161_13_reg_2797[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln161_16_reg_2802[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln161_19_reg_2807[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_159_10
