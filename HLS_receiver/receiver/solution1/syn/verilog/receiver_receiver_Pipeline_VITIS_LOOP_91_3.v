// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_91_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        filt_I_address0,
        filt_I_ce0,
        filt_I_we0,
        filt_I_d0,
        filt_Q_address0,
        filt_Q_ce0,
        filt_Q_we0,
        filt_Q_d0,
        filt_I_1_address0,
        filt_I_1_ce0,
        filt_I_1_we0,
        filt_I_1_d0,
        filt_Q_1_address0,
        filt_Q_1_ce0,
        filt_Q_1_we0,
        filt_Q_1_d0,
        filt_I_2_address0,
        filt_I_2_ce0,
        filt_I_2_we0,
        filt_I_2_d0,
        filt_Q_2_address0,
        filt_Q_2_ce0,
        filt_Q_2_we0,
        filt_Q_2_d0,
        filt_I_3_address0,
        filt_I_3_ce0,
        filt_I_3_we0,
        filt_I_3_d0,
        filt_Q_3_address0,
        filt_Q_3_ce0,
        filt_Q_3_we0,
        filt_Q_3_d0,
        filt_I_4_address0,
        filt_I_4_ce0,
        filt_I_4_we0,
        filt_I_4_d0,
        filt_Q_4_address0,
        filt_Q_4_ce0,
        filt_Q_4_we0,
        filt_Q_4_d0,
        filt_I_5_address0,
        filt_I_5_ce0,
        filt_I_5_we0,
        filt_I_5_d0,
        filt_Q_5_address0,
        filt_Q_5_ce0,
        filt_Q_5_we0,
        filt_Q_5_d0,
        filt_I_6_address0,
        filt_I_6_ce0,
        filt_I_6_we0,
        filt_I_6_d0,
        filt_Q_6_address0,
        filt_Q_6_ce0,
        filt_Q_6_we0,
        filt_Q_6_d0,
        filt_I_7_address0,
        filt_I_7_ce0,
        filt_I_7_we0,
        filt_I_7_d0,
        filt_Q_7_address0,
        filt_Q_7_ce0,
        filt_Q_7_we0,
        filt_Q_7_d0,
        delay_line_I_address0,
        delay_line_I_ce0,
        delay_line_I_q0,
        delay_line_I_address1,
        delay_line_I_ce1,
        delay_line_I_q1,
        delay_line_Q_address0,
        delay_line_Q_ce0,
        delay_line_Q_q0,
        delay_line_Q_address1,
        delay_line_Q_ce1,
        delay_line_Q_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] filt_I_address0;
output   filt_I_ce0;
output   filt_I_we0;
output  [17:0] filt_I_d0;
output  [3:0] filt_Q_address0;
output   filt_Q_ce0;
output   filt_Q_we0;
output  [17:0] filt_Q_d0;
output  [3:0] filt_I_1_address0;
output   filt_I_1_ce0;
output   filt_I_1_we0;
output  [17:0] filt_I_1_d0;
output  [3:0] filt_Q_1_address0;
output   filt_Q_1_ce0;
output   filt_Q_1_we0;
output  [17:0] filt_Q_1_d0;
output  [3:0] filt_I_2_address0;
output   filt_I_2_ce0;
output   filt_I_2_we0;
output  [17:0] filt_I_2_d0;
output  [3:0] filt_Q_2_address0;
output   filt_Q_2_ce0;
output   filt_Q_2_we0;
output  [17:0] filt_Q_2_d0;
output  [3:0] filt_I_3_address0;
output   filt_I_3_ce0;
output   filt_I_3_we0;
output  [17:0] filt_I_3_d0;
output  [3:0] filt_Q_3_address0;
output   filt_Q_3_ce0;
output   filt_Q_3_we0;
output  [17:0] filt_Q_3_d0;
output  [3:0] filt_I_4_address0;
output   filt_I_4_ce0;
output   filt_I_4_we0;
output  [17:0] filt_I_4_d0;
output  [3:0] filt_Q_4_address0;
output   filt_Q_4_ce0;
output   filt_Q_4_we0;
output  [17:0] filt_Q_4_d0;
output  [3:0] filt_I_5_address0;
output   filt_I_5_ce0;
output   filt_I_5_we0;
output  [17:0] filt_I_5_d0;
output  [3:0] filt_Q_5_address0;
output   filt_Q_5_ce0;
output   filt_Q_5_we0;
output  [17:0] filt_Q_5_d0;
output  [3:0] filt_I_6_address0;
output   filt_I_6_ce0;
output   filt_I_6_we0;
output  [17:0] filt_I_6_d0;
output  [3:0] filt_Q_6_address0;
output   filt_Q_6_ce0;
output   filt_Q_6_we0;
output  [17:0] filt_Q_6_d0;
output  [3:0] filt_I_7_address0;
output   filt_I_7_ce0;
output   filt_I_7_we0;
output  [17:0] filt_I_7_d0;
output  [3:0] filt_Q_7_address0;
output   filt_Q_7_ce0;
output   filt_Q_7_we0;
output  [17:0] filt_Q_7_d0;
output  [6:0] delay_line_I_address0;
output   delay_line_I_ce0;
input  [17:0] delay_line_I_q0;
output  [6:0] delay_line_I_address1;
output   delay_line_I_ce1;
input  [17:0] delay_line_I_q1;
output  [6:0] delay_line_Q_address0;
output   delay_line_Q_ce0;
input  [17:0] delay_line_Q_q0;
output  [6:0] delay_line_Q_address1;
output   delay_line_Q_ce1;
input  [17:0] delay_line_Q_q1;

reg ap_idle;
reg filt_I_ce0;
reg filt_I_we0;
reg filt_Q_ce0;
reg filt_Q_we0;
reg filt_I_1_ce0;
reg filt_I_1_we0;
reg filt_Q_1_ce0;
reg filt_Q_1_we0;
reg filt_I_2_ce0;
reg filt_I_2_we0;
reg filt_Q_2_ce0;
reg filt_Q_2_we0;
reg filt_I_3_ce0;
reg filt_I_3_we0;
reg filt_Q_3_ce0;
reg filt_Q_3_we0;
reg filt_I_4_ce0;
reg filt_I_4_we0;
reg filt_Q_4_ce0;
reg filt_Q_4_we0;
reg filt_I_5_ce0;
reg filt_I_5_we0;
reg filt_Q_5_ce0;
reg filt_Q_5_we0;
reg filt_I_6_ce0;
reg filt_I_6_we0;
reg filt_Q_6_ce0;
reg filt_Q_6_we0;
reg filt_I_7_ce0;
reg filt_I_7_we0;
reg filt_Q_7_ce0;
reg filt_Q_7_we0;
reg[6:0] delay_line_I_address0;
reg delay_line_I_ce0;
reg[6:0] delay_line_I_address1;
reg delay_line_I_ce1;
reg[6:0] delay_line_Q_address0;
reg delay_line_Q_ce0;
reg[6:0] delay_line_Q_address1;
reg delay_line_Q_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln91_reg_1068;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [6:0] h_address0;
reg    h_ce0;
wire   [15:0] h_q0;
reg   [6:0] h_address1;
reg    h_ce1;
wire   [15:0] h_q1;
reg  signed [17:0] reg_521;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] reg_525;
reg  signed [17:0] reg_529;
reg  signed [17:0] reg_533;
reg   [15:0] reg_537;
reg  signed [17:0] reg_541;
reg   [6:0] i_1_reg_1037;
reg   [3:0] lshr_ln1_reg_1048;
wire   [0:0] icmp_ln91_fu_576_p2;
reg   [17:0] trunc_ln1_reg_1117;
reg   [17:0] trunc_ln2_reg_1122;
reg   [17:0] trunc_ln93_1_reg_1127;
reg   [17:0] trunc_ln94_1_reg_1132;
wire   [63:0] zext_ln91_fu_725_p1;
reg   [63:0] zext_ln91_reg_1167;
reg   [17:0] trunc_ln93_2_reg_1183;
reg   [17:0] trunc_ln94_2_reg_1188;
reg   [17:0] trunc_ln93_3_reg_1193;
reg   [17:0] trunc_ln94_3_reg_1198;
reg   [17:0] trunc_ln93_4_reg_1233;
reg   [17:0] trunc_ln94_4_reg_1238;
reg   [17:0] trunc_ln93_5_reg_1243;
reg   [17:0] trunc_ln94_5_reg_1248;
reg   [17:0] trunc_ln93_6_reg_1253;
reg   [17:0] trunc_ln94_6_reg_1258;
reg   [17:0] trunc_ln93_7_reg_1263;
reg   [17:0] trunc_ln94_7_reg_1268;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage2_subdone;
wire   [63:0] i_2_cast_fu_553_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln91_1_fu_582_p1;
wire   [63:0] zext_ln93_fu_594_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln93_1_fu_606_p1;
wire   [63:0] zext_ln93_2_fu_706_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln93_3_fu_718_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln93_4_fu_825_p1;
wire   [63:0] zext_ln93_5_fu_837_p1;
reg   [6:0] i_fu_90;
wire   [6:0] add_ln91_fu_844_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_1;
wire   [6:0] or_ln91_fu_570_p2;
wire   [6:0] or_ln91_1_fu_589_p2;
wire   [6:0] or_ln91_2_fu_601_p2;
wire  signed [15:0] mul_ln93_fu_621_p0;
wire  signed [33:0] sext_ln93_1_fu_617_p1;
wire   [33:0] mul_ln93_fu_621_p2;
wire  signed [15:0] mul_ln94_fu_641_p1;
wire   [33:0] mul_ln94_fu_641_p2;
wire  signed [15:0] mul_ln93_1_fu_665_p0;
wire  signed [33:0] sext_ln93_3_fu_661_p1;
wire   [33:0] mul_ln93_1_fu_665_p2;
wire  signed [15:0] mul_ln94_1_fu_685_p1;
wire   [33:0] mul_ln94_1_fu_685_p2;
wire   [6:0] or_ln91_3_fu_701_p2;
wire   [6:0] or_ln91_4_fu_713_p2;
wire  signed [15:0] mul_ln93_2_fu_740_p0;
wire  signed [33:0] sext_ln93_5_fu_736_p1;
wire   [33:0] mul_ln93_2_fu_740_p2;
wire  signed [15:0] mul_ln94_2_fu_760_p1;
wire   [33:0] mul_ln94_2_fu_760_p2;
wire  signed [15:0] mul_ln93_3_fu_784_p0;
wire  signed [33:0] sext_ln93_7_fu_780_p1;
wire   [33:0] mul_ln93_3_fu_784_p2;
wire  signed [15:0] mul_ln94_3_fu_804_p1;
wire   [33:0] mul_ln94_3_fu_804_p2;
wire   [6:0] or_ln91_5_fu_820_p2;
wire   [6:0] or_ln91_6_fu_832_p2;
wire  signed [15:0] mul_ln93_4_fu_862_p0;
wire  signed [33:0] sext_ln93_9_fu_858_p1;
wire   [33:0] mul_ln93_4_fu_862_p2;
wire  signed [15:0] mul_ln94_4_fu_882_p1;
wire   [33:0] mul_ln94_4_fu_882_p2;
wire  signed [15:0] mul_ln93_5_fu_906_p0;
wire  signed [33:0] sext_ln93_11_fu_902_p1;
wire   [33:0] mul_ln93_5_fu_906_p2;
wire  signed [15:0] mul_ln94_5_fu_926_p1;
wire   [33:0] mul_ln94_5_fu_926_p2;
wire  signed [15:0] mul_ln93_6_fu_950_p0;
wire  signed [33:0] sext_ln93_13_fu_946_p1;
wire   [33:0] mul_ln93_6_fu_950_p2;
wire  signed [15:0] mul_ln94_6_fu_970_p1;
wire   [33:0] mul_ln94_6_fu_970_p2;
wire  signed [15:0] mul_ln93_7_fu_994_p0;
wire  signed [33:0] sext_ln93_15_fu_990_p1;
wire   [33:0] mul_ln93_7_fu_994_p2;
wire  signed [15:0] mul_ln94_7_fu_1014_p1;
wire   [33:0] mul_ln94_7_fu_1014_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_receiver_Pipeline_VITIS_LOOP_91_3_h_ROM_AUTO_1R #(
    .DataWidth( 16 ),
    .AddressRange( 97 ),
    .AddressWidth( 7 ))
h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(h_address0),
    .ce0(h_ce0),
    .q0(h_q0),
    .address1(h_address1),
    .ce1(h_ce1),
    .q1(h_q1)
);

receiver_mul_16s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_16s_18s_34_1_1_U8(
    .din0(mul_ln93_fu_621_p0),
    .din1(reg_521),
    .dout(mul_ln93_fu_621_p2)
);

receiver_mul_18s_16s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
mul_18s_16s_34_1_1_U9(
    .din0(reg_529),
    .din1(mul_ln94_fu_641_p1),
    .dout(mul_ln94_fu_641_p2)
);

receiver_mul_16s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_16s_18s_34_1_1_U10(
    .din0(mul_ln93_1_fu_665_p0),
    .din1(reg_533),
    .dout(mul_ln93_1_fu_665_p2)
);

receiver_mul_18s_16s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
mul_18s_16s_34_1_1_U11(
    .din0(reg_541),
    .din1(mul_ln94_1_fu_685_p1),
    .dout(mul_ln94_1_fu_685_p2)
);

receiver_mul_16s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_16s_18s_34_1_1_U12(
    .din0(mul_ln93_2_fu_740_p0),
    .din1(reg_521),
    .dout(mul_ln93_2_fu_740_p2)
);

receiver_mul_18s_16s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
mul_18s_16s_34_1_1_U13(
    .din0(reg_529),
    .din1(mul_ln94_2_fu_760_p1),
    .dout(mul_ln94_2_fu_760_p2)
);

receiver_mul_16s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_16s_18s_34_1_1_U14(
    .din0(mul_ln93_3_fu_784_p0),
    .din1(reg_533),
    .dout(mul_ln93_3_fu_784_p2)
);

receiver_mul_18s_16s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
mul_18s_16s_34_1_1_U15(
    .din0(reg_541),
    .din1(mul_ln94_3_fu_804_p1),
    .dout(mul_ln94_3_fu_804_p2)
);

receiver_mul_16s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_16s_18s_34_1_1_U16(
    .din0(mul_ln93_4_fu_862_p0),
    .din1(reg_521),
    .dout(mul_ln93_4_fu_862_p2)
);

receiver_mul_18s_16s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
mul_18s_16s_34_1_1_U17(
    .din0(reg_529),
    .din1(mul_ln94_4_fu_882_p1),
    .dout(mul_ln94_4_fu_882_p2)
);

receiver_mul_16s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_16s_18s_34_1_1_U18(
    .din0(mul_ln93_5_fu_906_p0),
    .din1(reg_533),
    .dout(mul_ln93_5_fu_906_p2)
);

receiver_mul_18s_16s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
mul_18s_16s_34_1_1_U19(
    .din0(reg_541),
    .din1(mul_ln94_5_fu_926_p1),
    .dout(mul_ln94_5_fu_926_p2)
);

receiver_mul_16s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_16s_18s_34_1_1_U20(
    .din0(mul_ln93_6_fu_950_p0),
    .din1(reg_521),
    .dout(mul_ln93_6_fu_950_p2)
);

receiver_mul_18s_16s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
mul_18s_16s_34_1_1_U21(
    .din0(reg_529),
    .din1(mul_ln94_6_fu_970_p1),
    .dout(mul_ln94_6_fu_970_p2)
);

receiver_mul_16s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_16s_18s_34_1_1_U22(
    .din0(mul_ln93_7_fu_994_p0),
    .din1(reg_533),
    .dout(mul_ln93_7_fu_994_p2)
);

receiver_mul_18s_16s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
mul_18s_16s_34_1_1_U23(
    .din0(reg_541),
    .din1(mul_ln94_7_fu_1014_p1),
    .dout(mul_ln94_7_fu_1014_p2)
);

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter0_stage3) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_90 <= 7'd0;
    end else if (((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        i_fu_90 <= add_ln91_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_1037 <= ap_sig_allocacmp_i_1;
        icmp_ln91_reg_1068 <= icmp_ln91_fu_576_p2;
        lshr_ln1_reg_1048 <= {{ap_sig_allocacmp_i_1[6:3]}};
        trunc_ln93_4_reg_1233 <= {{mul_ln93_4_fu_862_p2[33:16]}};
        trunc_ln93_5_reg_1243 <= {{mul_ln93_5_fu_906_p2[33:16]}};
        trunc_ln94_4_reg_1238 <= {{mul_ln94_4_fu_882_p2[33:16]}};
        trunc_ln94_5_reg_1248 <= {{mul_ln94_5_fu_926_p2[33:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_521 <= delay_line_I_q1;
        reg_525 <= h_q1;
        reg_529 <= delay_line_Q_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_533 <= delay_line_I_q0;
        reg_537 <= h_q0;
        reg_541 <= delay_line_Q_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln1_reg_1117 <= {{mul_ln93_fu_621_p2[33:16]}};
        trunc_ln2_reg_1122 <= {{mul_ln94_fu_641_p2[33:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln93_1_reg_1127 <= {{mul_ln93_1_fu_665_p2[33:16]}};
        trunc_ln94_1_reg_1132 <= {{mul_ln94_1_fu_685_p2[33:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        trunc_ln93_2_reg_1183 <= {{mul_ln93_2_fu_740_p2[33:16]}};
        trunc_ln93_3_reg_1193 <= {{mul_ln93_3_fu_784_p2[33:16]}};
        trunc_ln94_2_reg_1188 <= {{mul_ln94_2_fu_760_p2[33:16]}};
        trunc_ln94_3_reg_1198 <= {{mul_ln94_3_fu_804_p2[33:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln93_6_reg_1253 <= {{mul_ln93_6_fu_950_p2[33:16]}};
        trunc_ln93_7_reg_1263 <= {{mul_ln93_7_fu_994_p2[33:16]}};
        trunc_ln94_6_reg_1258 <= {{mul_ln94_6_fu_970_p2[33:16]}};
        trunc_ln94_7_reg_1268 <= {{mul_ln94_7_fu_1014_p2[33:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        zext_ln91_reg_1167[3 : 0] <= zext_ln91_fu_725_p1[3 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln91_reg_1068 == 1'd0) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_90;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            delay_line_I_address0 = zext_ln93_5_fu_837_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            delay_line_I_address0 = zext_ln93_3_fu_718_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            delay_line_I_address0 = zext_ln93_1_fu_606_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            delay_line_I_address0 = zext_ln91_1_fu_582_p1;
        end else begin
            delay_line_I_address0 = 'bx;
        end
    end else begin
        delay_line_I_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            delay_line_I_address1 = zext_ln93_4_fu_825_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            delay_line_I_address1 = zext_ln93_2_fu_706_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            delay_line_I_address1 = zext_ln93_fu_594_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            delay_line_I_address1 = i_2_cast_fu_553_p1;
        end else begin
            delay_line_I_address1 = 'bx;
        end
    end else begin
        delay_line_I_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        delay_line_I_ce0 = 1'b1;
    end else begin
        delay_line_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        delay_line_I_ce1 = 1'b1;
    end else begin
        delay_line_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            delay_line_Q_address0 = zext_ln93_5_fu_837_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            delay_line_Q_address0 = zext_ln93_3_fu_718_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            delay_line_Q_address0 = zext_ln93_1_fu_606_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            delay_line_Q_address0 = zext_ln91_1_fu_582_p1;
        end else begin
            delay_line_Q_address0 = 'bx;
        end
    end else begin
        delay_line_Q_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            delay_line_Q_address1 = zext_ln93_4_fu_825_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            delay_line_Q_address1 = zext_ln93_2_fu_706_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            delay_line_Q_address1 = zext_ln93_fu_594_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            delay_line_Q_address1 = i_2_cast_fu_553_p1;
        end else begin
            delay_line_Q_address1 = 'bx;
        end
    end else begin
        delay_line_Q_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        delay_line_Q_ce0 = 1'b1;
    end else begin
        delay_line_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        delay_line_Q_ce1 = 1'b1;
    end else begin
        delay_line_Q_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        filt_I_1_ce0 = 1'b1;
    end else begin
        filt_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        filt_I_1_we0 = 1'b1;
    end else begin
        filt_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_I_2_ce0 = 1'b1;
    end else begin
        filt_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_I_2_we0 = 1'b1;
    end else begin
        filt_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_I_3_ce0 = 1'b1;
    end else begin
        filt_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_I_3_we0 = 1'b1;
    end else begin
        filt_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        filt_I_4_ce0 = 1'b1;
    end else begin
        filt_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        filt_I_4_we0 = 1'b1;
    end else begin
        filt_I_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        filt_I_5_ce0 = 1'b1;
    end else begin
        filt_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        filt_I_5_we0 = 1'b1;
    end else begin
        filt_I_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        filt_I_6_ce0 = 1'b1;
    end else begin
        filt_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        filt_I_6_we0 = 1'b1;
    end else begin
        filt_I_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        filt_I_7_ce0 = 1'b1;
    end else begin
        filt_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        filt_I_7_we0 = 1'b1;
    end else begin
        filt_I_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        filt_I_ce0 = 1'b1;
    end else begin
        filt_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        filt_I_we0 = 1'b1;
    end else begin
        filt_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        filt_Q_1_ce0 = 1'b1;
    end else begin
        filt_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln91_reg_1068 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        filt_Q_1_we0 = 1'b1;
    end else begin
        filt_Q_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_Q_2_ce0 = 1'b1;
    end else begin
        filt_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_Q_2_we0 = 1'b1;
    end else begin
        filt_Q_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_Q_3_ce0 = 1'b1;
    end else begin
        filt_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_Q_3_we0 = 1'b1;
    end else begin
        filt_Q_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        filt_Q_4_ce0 = 1'b1;
    end else begin
        filt_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        filt_Q_4_we0 = 1'b1;
    end else begin
        filt_Q_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        filt_Q_5_ce0 = 1'b1;
    end else begin
        filt_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        filt_Q_5_we0 = 1'b1;
    end else begin
        filt_Q_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        filt_Q_6_ce0 = 1'b1;
    end else begin
        filt_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        filt_Q_6_we0 = 1'b1;
    end else begin
        filt_Q_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        filt_Q_7_ce0 = 1'b1;
    end else begin
        filt_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        filt_Q_7_we0 = 1'b1;
    end else begin
        filt_Q_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        filt_Q_ce0 = 1'b1;
    end else begin
        filt_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        filt_Q_we0 = 1'b1;
    end else begin
        filt_Q_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            h_address0 = zext_ln93_5_fu_837_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            h_address0 = zext_ln93_3_fu_718_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            h_address0 = zext_ln93_1_fu_606_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            h_address0 = zext_ln91_1_fu_582_p1;
        end else begin
            h_address0 = 'bx;
        end
    end else begin
        h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            h_address1 = zext_ln93_4_fu_825_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            h_address1 = zext_ln93_2_fu_706_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            h_address1 = zext_ln93_fu_594_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            h_address1 = i_2_cast_fu_553_p1;
        end else begin
            h_address1 = 'bx;
        end
    end else begin
        h_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        h_ce0 = 1'b1;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        h_ce1 = 1'b1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln91_fu_844_p2 = (i_1_reg_1037 + 7'd8);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign filt_I_1_address0 = zext_ln91_fu_725_p1;

assign filt_I_1_d0 = trunc_ln93_1_reg_1127;

assign filt_I_2_address0 = zext_ln91_reg_1167;

assign filt_I_2_d0 = trunc_ln93_2_reg_1183;

assign filt_I_3_address0 = zext_ln91_reg_1167;

assign filt_I_3_d0 = trunc_ln93_3_reg_1193;

assign filt_I_4_address0 = zext_ln91_reg_1167;

assign filt_I_4_d0 = trunc_ln93_4_reg_1233;

assign filt_I_5_address0 = zext_ln91_reg_1167;

assign filt_I_5_d0 = trunc_ln93_5_reg_1243;

assign filt_I_6_address0 = zext_ln91_reg_1167;

assign filt_I_6_d0 = trunc_ln93_6_reg_1253;

assign filt_I_7_address0 = zext_ln91_reg_1167;

assign filt_I_7_d0 = trunc_ln93_7_reg_1263;

assign filt_I_address0 = zext_ln91_fu_725_p1;

assign filt_I_d0 = trunc_ln1_reg_1117;

assign filt_Q_1_address0 = zext_ln91_fu_725_p1;

assign filt_Q_1_d0 = trunc_ln94_1_reg_1132;

assign filt_Q_2_address0 = zext_ln91_reg_1167;

assign filt_Q_2_d0 = trunc_ln94_2_reg_1188;

assign filt_Q_3_address0 = zext_ln91_reg_1167;

assign filt_Q_3_d0 = trunc_ln94_3_reg_1198;

assign filt_Q_4_address0 = zext_ln91_reg_1167;

assign filt_Q_4_d0 = trunc_ln94_4_reg_1238;

assign filt_Q_5_address0 = zext_ln91_reg_1167;

assign filt_Q_5_d0 = trunc_ln94_5_reg_1248;

assign filt_Q_6_address0 = zext_ln91_reg_1167;

assign filt_Q_6_d0 = trunc_ln94_6_reg_1258;

assign filt_Q_7_address0 = zext_ln91_reg_1167;

assign filt_Q_7_d0 = trunc_ln94_7_reg_1268;

assign filt_Q_address0 = zext_ln91_fu_725_p1;

assign filt_Q_d0 = trunc_ln2_reg_1122;

assign i_2_cast_fu_553_p1 = ap_sig_allocacmp_i_1;

assign icmp_ln91_fu_576_p2 = ((or_ln91_fu_570_p2 < 7'd97) ? 1'b1 : 1'b0);

assign mul_ln93_1_fu_665_p0 = sext_ln93_3_fu_661_p1;

assign mul_ln93_2_fu_740_p0 = sext_ln93_5_fu_736_p1;

assign mul_ln93_3_fu_784_p0 = sext_ln93_7_fu_780_p1;

assign mul_ln93_4_fu_862_p0 = sext_ln93_9_fu_858_p1;

assign mul_ln93_5_fu_906_p0 = sext_ln93_11_fu_902_p1;

assign mul_ln93_6_fu_950_p0 = sext_ln93_13_fu_946_p1;

assign mul_ln93_7_fu_994_p0 = sext_ln93_15_fu_990_p1;

assign mul_ln93_fu_621_p0 = sext_ln93_1_fu_617_p1;

assign mul_ln94_1_fu_685_p1 = sext_ln93_3_fu_661_p1;

assign mul_ln94_2_fu_760_p1 = sext_ln93_5_fu_736_p1;

assign mul_ln94_3_fu_804_p1 = sext_ln93_7_fu_780_p1;

assign mul_ln94_4_fu_882_p1 = sext_ln93_9_fu_858_p1;

assign mul_ln94_5_fu_926_p1 = sext_ln93_11_fu_902_p1;

assign mul_ln94_6_fu_970_p1 = sext_ln93_13_fu_946_p1;

assign mul_ln94_7_fu_1014_p1 = sext_ln93_15_fu_990_p1;

assign mul_ln94_fu_641_p1 = sext_ln93_1_fu_617_p1;

assign or_ln91_1_fu_589_p2 = (i_1_reg_1037 | 7'd2);

assign or_ln91_2_fu_601_p2 = (i_1_reg_1037 | 7'd3);

assign or_ln91_3_fu_701_p2 = (i_1_reg_1037 | 7'd4);

assign or_ln91_4_fu_713_p2 = (i_1_reg_1037 | 7'd5);

assign or_ln91_5_fu_820_p2 = (i_1_reg_1037 | 7'd6);

assign or_ln91_6_fu_832_p2 = (i_1_reg_1037 | 7'd7);

assign or_ln91_fu_570_p2 = (ap_sig_allocacmp_i_1 | 7'd1);

assign sext_ln93_11_fu_902_p1 = $signed(reg_537);

assign sext_ln93_13_fu_946_p1 = $signed(reg_525);

assign sext_ln93_15_fu_990_p1 = $signed(reg_537);

assign sext_ln93_1_fu_617_p1 = $signed(reg_525);

assign sext_ln93_3_fu_661_p1 = $signed(reg_537);

assign sext_ln93_5_fu_736_p1 = $signed(reg_525);

assign sext_ln93_7_fu_780_p1 = $signed(reg_537);

assign sext_ln93_9_fu_858_p1 = $signed(reg_525);

assign zext_ln91_1_fu_582_p1 = or_ln91_fu_570_p2;

assign zext_ln91_fu_725_p1 = lshr_ln1_reg_1048;

assign zext_ln93_1_fu_606_p1 = or_ln91_2_fu_601_p2;

assign zext_ln93_2_fu_706_p1 = or_ln91_3_fu_701_p2;

assign zext_ln93_3_fu_718_p1 = or_ln91_4_fu_713_p2;

assign zext_ln93_4_fu_825_p1 = or_ln91_5_fu_820_p2;

assign zext_ln93_5_fu_837_p1 = or_ln91_6_fu_832_p2;

assign zext_ln93_fu_594_p1 = or_ln91_1_fu_589_p2;

always @ (posedge ap_clk) begin
    zext_ln91_reg_1167[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_91_3
