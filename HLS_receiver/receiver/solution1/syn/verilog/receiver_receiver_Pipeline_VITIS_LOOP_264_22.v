// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_264_22 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln268,
        sext_ln268_2,
        result_I_0_address0,
        result_I_0_ce0,
        result_I_0_we0,
        result_I_0_d0,
        result_I_1_address0,
        result_I_1_ce0,
        result_I_1_we0,
        result_I_1_d0,
        result_I_2_address0,
        result_I_2_ce0,
        result_I_2_we0,
        result_I_2_d0,
        result_I_3_address0,
        result_I_3_ce0,
        result_I_3_we0,
        result_I_3_d0,
        result_I_4_address0,
        result_I_4_ce0,
        result_I_4_we0,
        result_I_4_d0,
        result_I_5_address0,
        result_I_5_ce0,
        result_I_5_we0,
        result_I_5_d0,
        result_I_6_address0,
        result_I_6_ce0,
        result_I_6_we0,
        result_I_6_d0,
        result_I_7_address0,
        result_I_7_ce0,
        result_I_7_we0,
        result_I_7_d0,
        result_Q_0_address0,
        result_Q_0_ce0,
        result_Q_0_we0,
        result_Q_0_d0,
        result_Q_1_address0,
        result_Q_1_ce0,
        result_Q_1_we0,
        result_Q_1_d0,
        result_Q_2_address0,
        result_Q_2_ce0,
        result_Q_2_we0,
        result_Q_2_d0,
        result_Q_3_address0,
        result_Q_3_ce0,
        result_Q_3_we0,
        result_Q_3_d0,
        result_Q_4_address0,
        result_Q_4_ce0,
        result_Q_4_we0,
        result_Q_4_d0,
        result_Q_5_address0,
        result_Q_5_ce0,
        result_Q_5_we0,
        result_Q_5_d0,
        result_Q_6_address0,
        result_Q_6_ce0,
        result_Q_6_we0,
        result_Q_6_d0,
        result_Q_7_address0,
        result_Q_7_ce0,
        result_Q_7_we0,
        result_Q_7_d0,
        matched_I_12_address0,
        matched_I_12_ce0,
        matched_I_12_q0,
        matched_I_12_address1,
        matched_I_12_ce1,
        matched_I_12_q1,
        matched_Q_12_address0,
        matched_Q_12_ce0,
        matched_Q_12_q0,
        matched_Q_12_address1,
        matched_Q_12_ce1,
        matched_Q_12_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] sext_ln268;
input  [23:0] sext_ln268_2;
output  [0:0] result_I_0_address0;
output   result_I_0_ce0;
output   result_I_0_we0;
output  [23:0] result_I_0_d0;
output  [0:0] result_I_1_address0;
output   result_I_1_ce0;
output   result_I_1_we0;
output  [23:0] result_I_1_d0;
output  [0:0] result_I_2_address0;
output   result_I_2_ce0;
output   result_I_2_we0;
output  [23:0] result_I_2_d0;
output  [0:0] result_I_3_address0;
output   result_I_3_ce0;
output   result_I_3_we0;
output  [23:0] result_I_3_d0;
output  [0:0] result_I_4_address0;
output   result_I_4_ce0;
output   result_I_4_we0;
output  [23:0] result_I_4_d0;
output  [0:0] result_I_5_address0;
output   result_I_5_ce0;
output   result_I_5_we0;
output  [23:0] result_I_5_d0;
output  [0:0] result_I_6_address0;
output   result_I_6_ce0;
output   result_I_6_we0;
output  [23:0] result_I_6_d0;
output  [0:0] result_I_7_address0;
output   result_I_7_ce0;
output   result_I_7_we0;
output  [23:0] result_I_7_d0;
output  [0:0] result_Q_0_address0;
output   result_Q_0_ce0;
output   result_Q_0_we0;
output  [23:0] result_Q_0_d0;
output  [0:0] result_Q_1_address0;
output   result_Q_1_ce0;
output   result_Q_1_we0;
output  [23:0] result_Q_1_d0;
output  [0:0] result_Q_2_address0;
output   result_Q_2_ce0;
output   result_Q_2_we0;
output  [23:0] result_Q_2_d0;
output  [0:0] result_Q_3_address0;
output   result_Q_3_ce0;
output   result_Q_3_we0;
output  [23:0] result_Q_3_d0;
output  [0:0] result_Q_4_address0;
output   result_Q_4_ce0;
output   result_Q_4_we0;
output  [23:0] result_Q_4_d0;
output  [0:0] result_Q_5_address0;
output   result_Q_5_ce0;
output   result_Q_5_we0;
output  [23:0] result_Q_5_d0;
output  [0:0] result_Q_6_address0;
output   result_Q_6_ce0;
output   result_Q_6_we0;
output  [23:0] result_Q_6_d0;
output  [0:0] result_Q_7_address0;
output   result_Q_7_ce0;
output   result_Q_7_we0;
output  [23:0] result_Q_7_d0;
output  [7:0] matched_I_12_address0;
output   matched_I_12_ce0;
input  [17:0] matched_I_12_q0;
output  [7:0] matched_I_12_address1;
output   matched_I_12_ce1;
input  [17:0] matched_I_12_q1;
output  [7:0] matched_Q_12_address0;
output   matched_Q_12_ce0;
input  [17:0] matched_Q_12_q0;
output  [7:0] matched_Q_12_address1;
output   matched_Q_12_ce1;
input  [17:0] matched_Q_12_q1;

reg ap_idle;
reg result_I_0_ce0;
reg result_I_0_we0;
reg result_I_1_ce0;
reg result_I_1_we0;
reg result_I_2_ce0;
reg result_I_2_we0;
reg result_I_3_ce0;
reg result_I_3_we0;
reg result_I_4_ce0;
reg result_I_4_we0;
reg result_I_5_ce0;
reg result_I_5_we0;
reg result_I_6_ce0;
reg result_I_6_we0;
reg result_I_7_ce0;
reg result_I_7_we0;
reg result_Q_0_ce0;
reg result_Q_0_we0;
reg result_Q_1_ce0;
reg result_Q_1_we0;
reg result_Q_2_ce0;
reg result_Q_2_we0;
reg result_Q_3_ce0;
reg result_Q_3_we0;
reg result_Q_4_ce0;
reg result_Q_4_we0;
reg result_Q_5_ce0;
reg result_Q_5_we0;
reg result_Q_6_ce0;
reg result_Q_6_we0;
reg result_Q_7_ce0;
reg result_Q_7_we0;
reg[7:0] matched_I_12_address0;
reg matched_I_12_ce0;
reg[7:0] matched_I_12_address1;
reg matched_I_12_ce1;
reg[7:0] matched_Q_12_address0;
reg matched_Q_12_ce0;
reg[7:0] matched_Q_12_address1;
reg matched_Q_12_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln264_reg_1116;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg  signed [17:0] reg_482;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg  signed [17:0] reg_486;
reg  signed [17:0] reg_490;
reg  signed [17:0] reg_494;
wire  signed [39:0] sext_ln268_2_cast_fu_498_p1;
reg  signed [39:0] sext_ln268_2_cast_reg_1070;
wire  signed [39:0] sext_ln268_cast_fu_502_p1;
reg  signed [39:0] sext_ln268_cast_reg_1090;
reg   [7:0] j_1_reg_1110;
wire   [0:0] icmp_ln264_fu_519_p2;
reg   [0:0] icmp_ln264_reg_1116_pp0_iter1_reg;
reg   [12:0] i_load_reg_1120;
wire   [7:0] lshr_ln263_1_fu_528_p4;
reg   [7:0] lshr_ln263_1_reg_1125;
wire  signed [39:0] sext_ln268_1_fu_578_p1;
reg  signed [39:0] sext_ln268_1_reg_1175;
wire  signed [39:0] sext_ln268_3_fu_582_p1;
reg  signed [39:0] sext_ln268_3_reg_1181;
wire  signed [39:0] sext_ln268_4_fu_618_p1;
reg  signed [39:0] sext_ln268_4_reg_1207;
wire  signed [39:0] sext_ln268_11_fu_627_p1;
reg  signed [39:0] sext_ln268_11_reg_1213;
reg   [0:0] tmp_reg_1219;
wire  signed [39:0] sext_ln268_5_fu_665_p1;
reg  signed [39:0] sext_ln268_5_reg_1239;
wire  signed [39:0] sext_ln268_6_fu_674_p1;
reg  signed [39:0] sext_ln268_6_reg_1245;
wire  signed [39:0] sext_ln268_12_fu_683_p1;
reg  signed [39:0] sext_ln268_12_reg_1256;
wire  signed [39:0] sext_ln268_13_fu_692_p1;
reg  signed [39:0] sext_ln268_13_reg_1262;
wire   [39:0] grp_fu_586_p2;
reg  signed [39:0] mul_ln268_reg_1268;
wire   [39:0] grp_fu_591_p2;
reg  signed [39:0] mul_ln269_1_reg_1273;
wire   [39:0] grp_fu_622_p2;
reg  signed [39:0] mul_ln269_2_reg_1278;
wire  signed [39:0] sext_ln268_7_fu_721_p1;
reg  signed [39:0] sext_ln268_7_reg_1283;
wire  signed [39:0] sext_ln268_8_fu_730_p1;
reg  signed [39:0] sext_ln268_8_reg_1289;
wire   [39:0] grp_fu_631_p2;
reg  signed [39:0] mul_ln269_8_reg_1295;
wire  signed [39:0] sext_ln268_14_fu_739_p1;
reg  signed [39:0] sext_ln268_14_reg_1300;
wire  signed [39:0] sext_ln268_15_fu_748_p1;
reg  signed [39:0] sext_ln268_15_reg_1306;
wire   [39:0] grp_fu_669_p2;
reg  signed [39:0] mul_ln269_3_reg_1312;
wire   [39:0] grp_fu_678_p2;
reg  signed [39:0] mul_ln269_4_reg_1317;
wire  signed [39:0] sext_ln268_9_fu_757_p1;
reg  signed [39:0] sext_ln268_9_reg_1322;
wire  signed [39:0] sext_ln268_10_fu_766_p1;
reg  signed [39:0] sext_ln268_10_reg_1328;
wire   [39:0] grp_fu_687_p2;
reg  signed [39:0] mul_ln269_9_reg_1334;
wire   [39:0] grp_fu_696_p2;
reg  signed [39:0] mul_ln269_10_reg_1339;
wire  signed [39:0] sext_ln268_16_fu_770_p1;
reg  signed [39:0] sext_ln268_16_reg_1344;
wire  signed [39:0] sext_ln268_17_fu_779_p1;
reg  signed [39:0] sext_ln268_17_reg_1350;
wire   [63:0] zext_ln263_fu_793_p1;
reg   [63:0] zext_ln263_reg_1356;
wire   [39:0] grp_fu_725_p2;
reg  signed [39:0] mul_ln269_5_reg_1372;
wire   [39:0] grp_fu_734_p2;
reg  signed [39:0] mul_ln269_6_reg_1377;
wire   [39:0] grp_fu_743_p2;
reg  signed [39:0] mul_ln269_11_reg_1382;
wire   [39:0] grp_fu_752_p2;
reg  signed [39:0] mul_ln269_12_reg_1387;
wire   [39:0] grp_fu_761_p2;
reg  signed [39:0] mul_ln269_7_reg_1392;
wire   [39:0] grp_fu_774_p2;
reg  signed [39:0] mul_ln269_13_reg_1397;
wire   [39:0] grp_fu_783_p2;
reg  signed [39:0] mul_ln268_14_reg_1402;
wire   [39:0] grp_fu_788_p2;
reg  signed [39:0] mul_ln269_15_reg_1407;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln263_1_fu_538_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln268_fu_550_p1;
wire   [63:0] zext_ln268_1_fu_561_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln268_2_fu_572_p1;
wire   [63:0] zext_ln268_3_fu_601_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln268_4_fu_612_p1;
wire   [63:0] zext_ln268_5_fu_648_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln268_6_fu_659_p1;
reg   [7:0] j_fu_108;
wire   [7:0] add_ln264_7_fu_706_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_j_1;
reg   [12:0] i_fu_112;
wire   [12:0] add_ln270_fu_701_p2;
reg   [12:0] ap_sig_allocacmp_i_load;
wire   [7:0] add_ln264_fu_544_p2;
wire   [7:0] add_ln264_1_fu_556_p2;
wire   [7:0] add_ln264_2_fu_567_p2;
wire  signed [23:0] grp_fu_586_p0;
wire  signed [23:0] grp_fu_591_p0;
wire   [7:0] add_ln264_3_fu_596_p2;
wire   [7:0] add_ln264_4_fu_607_p2;
wire  signed [23:0] grp_fu_622_p0;
wire  signed [23:0] grp_fu_631_p0;
wire   [7:0] add_ln264_5_fu_643_p2;
wire   [7:0] add_ln264_6_fu_654_p2;
wire  signed [23:0] grp_fu_669_p0;
wire  signed [23:0] grp_fu_678_p0;
wire  signed [23:0] grp_fu_687_p0;
wire  signed [23:0] grp_fu_696_p0;
wire  signed [23:0] grp_fu_725_p0;
wire  signed [23:0] grp_fu_734_p0;
wire  signed [23:0] grp_fu_743_p0;
wire  signed [23:0] grp_fu_752_p0;
wire  signed [23:0] grp_fu_761_p0;
wire  signed [23:0] grp_fu_774_p0;
wire  signed [23:0] grp_fu_783_p0;
wire  signed [23:0] grp_fu_788_p0;
wire  signed [39:0] grp_fu_960_p3;
wire  signed [39:0] grp_fu_966_p3;
wire  signed [39:0] grp_fu_978_p3;
wire  signed [39:0] grp_fu_972_p3;
wire  signed [39:0] grp_fu_996_p3;
wire  signed [39:0] grp_fu_984_p3;
wire  signed [39:0] grp_fu_1002_p3;
wire  signed [39:0] grp_fu_990_p3;
wire  signed [39:0] grp_fu_1020_p3;
wire  signed [39:0] grp_fu_1008_p3;
wire  signed [39:0] grp_fu_1026_p3;
wire  signed [39:0] grp_fu_1014_p3;
wire  signed [39:0] grp_fu_1038_p3;
wire  signed [39:0] grp_fu_1032_p3;
wire  signed [39:0] grp_fu_1044_p3;
wire  signed [39:0] grp_fu_1050_p3;
wire  signed [23:0] grp_fu_960_p0;
wire  signed [17:0] grp_fu_960_p1;
wire  signed [23:0] grp_fu_966_p0;
wire  signed [17:0] grp_fu_966_p1;
wire  signed [23:0] grp_fu_972_p0;
wire  signed [17:0] grp_fu_972_p1;
wire  signed [23:0] grp_fu_978_p0;
wire  signed [17:0] grp_fu_978_p1;
wire  signed [23:0] grp_fu_984_p0;
wire  signed [17:0] grp_fu_984_p1;
wire  signed [23:0] grp_fu_990_p0;
wire  signed [17:0] grp_fu_990_p1;
wire  signed [23:0] grp_fu_996_p0;
wire  signed [17:0] grp_fu_996_p1;
wire  signed [23:0] grp_fu_1002_p0;
wire  signed [17:0] grp_fu_1002_p1;
wire  signed [23:0] grp_fu_1008_p0;
wire  signed [17:0] grp_fu_1008_p1;
wire  signed [23:0] grp_fu_1014_p0;
wire  signed [17:0] grp_fu_1014_p1;
wire  signed [23:0] grp_fu_1020_p0;
wire  signed [17:0] grp_fu_1020_p1;
wire  signed [23:0] grp_fu_1026_p0;
wire  signed [17:0] grp_fu_1026_p1;
wire  signed [23:0] grp_fu_1032_p0;
wire  signed [17:0] grp_fu_1032_p1;
wire  signed [23:0] grp_fu_1038_p0;
wire  signed [17:0] grp_fu_1038_p1;
wire  signed [23:0] grp_fu_1044_p0;
wire  signed [17:0] grp_fu_1044_p1;
wire  signed [23:0] grp_fu_1050_p0;
wire  signed [17:0] grp_fu_1050_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage1;
reg    ap_idle_pp0_0to0;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U790(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_586_p0),
    .din1(reg_482),
    .ce(1'b1),
    .dout(grp_fu_586_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U791(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_591_p0),
    .din1(reg_486),
    .ce(1'b1),
    .dout(grp_fu_591_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U792(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_622_p0),
    .din1(reg_490),
    .ce(1'b1),
    .dout(grp_fu_622_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U793(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_631_p0),
    .din1(reg_494),
    .ce(1'b1),
    .dout(grp_fu_631_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U794(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_669_p0),
    .din1(reg_482),
    .ce(1'b1),
    .dout(grp_fu_669_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U795(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_678_p0),
    .din1(reg_490),
    .ce(1'b1),
    .dout(grp_fu_678_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U796(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_687_p0),
    .din1(reg_486),
    .ce(1'b1),
    .dout(grp_fu_687_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U797(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_696_p0),
    .din1(reg_494),
    .ce(1'b1),
    .dout(grp_fu_696_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U798(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_725_p0),
    .din1(reg_482),
    .ce(1'b1),
    .dout(grp_fu_725_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U799(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_734_p0),
    .din1(reg_490),
    .ce(1'b1),
    .dout(grp_fu_734_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U800(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_743_p0),
    .din1(reg_486),
    .ce(1'b1),
    .dout(grp_fu_743_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U801(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_752_p0),
    .din1(reg_494),
    .ce(1'b1),
    .dout(grp_fu_752_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U802(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_761_p0),
    .din1(reg_482),
    .ce(1'b1),
    .dout(grp_fu_761_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U803(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_774_p0),
    .din1(reg_486),
    .ce(1'b1),
    .dout(grp_fu_774_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U804(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_783_p0),
    .din1(reg_490),
    .ce(1'b1),
    .dout(grp_fu_783_p2)
);

receiver_mul_24s_18s_40_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_3_1_U805(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_788_p0),
    .din1(reg_494),
    .ce(1'b1),
    .dout(grp_fu_788_p2)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U806(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_960_p0),
    .din1(grp_fu_960_p1),
    .din2(mul_ln268_reg_1268),
    .ce(1'b1),
    .dout(grp_fu_960_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U807(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_966_p0),
    .din1(grp_fu_966_p1),
    .din2(mul_ln269_1_reg_1273),
    .ce(1'b1),
    .dout(grp_fu_966_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U808(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_972_p0),
    .din1(grp_fu_972_p1),
    .din2(mul_ln269_8_reg_1295),
    .ce(1'b1),
    .dout(grp_fu_972_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U809(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_978_p0),
    .din1(grp_fu_978_p1),
    .din2(mul_ln269_2_reg_1278),
    .ce(1'b1),
    .dout(grp_fu_978_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U810(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_984_p0),
    .din1(grp_fu_984_p1),
    .din2(mul_ln269_9_reg_1334),
    .ce(1'b1),
    .dout(grp_fu_984_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U811(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_990_p0),
    .din1(grp_fu_990_p1),
    .din2(mul_ln269_10_reg_1339),
    .ce(1'b1),
    .dout(grp_fu_990_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U812(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_996_p0),
    .din1(grp_fu_996_p1),
    .din2(mul_ln269_3_reg_1312),
    .ce(1'b1),
    .dout(grp_fu_996_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U813(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1002_p0),
    .din1(grp_fu_1002_p1),
    .din2(mul_ln269_4_reg_1317),
    .ce(1'b1),
    .dout(grp_fu_1002_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U814(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1008_p0),
    .din1(grp_fu_1008_p1),
    .din2(mul_ln269_11_reg_1382),
    .ce(1'b1),
    .dout(grp_fu_1008_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U815(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1014_p0),
    .din1(grp_fu_1014_p1),
    .din2(mul_ln269_12_reg_1387),
    .ce(1'b1),
    .dout(grp_fu_1014_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U816(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1020_p0),
    .din1(grp_fu_1020_p1),
    .din2(mul_ln269_5_reg_1372),
    .ce(1'b1),
    .dout(grp_fu_1020_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U817(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1026_p0),
    .din1(grp_fu_1026_p1),
    .din2(mul_ln269_6_reg_1377),
    .ce(1'b1),
    .dout(grp_fu_1026_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U818(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1032_p0),
    .din1(grp_fu_1032_p1),
    .din2(mul_ln269_13_reg_1397),
    .ce(1'b1),
    .dout(grp_fu_1032_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U819(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1038_p0),
    .din1(grp_fu_1038_p1),
    .din2(mul_ln269_7_reg_1392),
    .ce(1'b1),
    .dout(grp_fu_1038_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U820(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1044_p0),
    .din1(grp_fu_1044_p1),
    .din2(mul_ln268_14_reg_1402),
    .ce(1'b1),
    .dout(grp_fu_1044_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U821(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1050_p0),
    .din1(grp_fu_1050_p1),
    .din2(mul_ln269_15_reg_1407),
    .ce(1'b1),
    .dout(grp_fu_1050_p3)
);

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_112 <= 13'd236;
    end else if (((icmp_ln264_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        i_fu_112 <= add_ln270_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_108 <= 8'd0;
    end else if (((icmp_ln264_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        j_fu_108 <= add_ln264_7_fu_706_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln264_fu_519_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_load_reg_1120 <= ap_sig_allocacmp_i_load;
        lshr_ln263_1_reg_1125 <= {{ap_sig_allocacmp_i_load[12:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln264_reg_1116 <= icmp_ln264_fu_519_p2;
        icmp_ln264_reg_1116_pp0_iter1_reg <= icmp_ln264_reg_1116;
        j_1_reg_1110 <= ap_sig_allocacmp_j_1;
        mul_ln268_reg_1268 <= grp_fu_586_p2;
        mul_ln269_1_reg_1273 <= grp_fu_591_p2;
        mul_ln269_2_reg_1278 <= grp_fu_622_p2;
        mul_ln269_8_reg_1295 <= grp_fu_631_p2;
        sext_ln268_14_reg_1300 <= sext_ln268_14_fu_739_p1;
        sext_ln268_15_reg_1306 <= sext_ln268_15_fu_748_p1;
        sext_ln268_2_cast_reg_1070 <= sext_ln268_2_cast_fu_498_p1;
        sext_ln268_7_reg_1283 <= sext_ln268_7_fu_721_p1;
        sext_ln268_8_reg_1289 <= sext_ln268_8_fu_730_p1;
        sext_ln268_cast_reg_1090 <= sext_ln268_cast_fu_502_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln268_14_reg_1402 <= grp_fu_783_p2;
        mul_ln269_13_reg_1397 <= grp_fu_774_p2;
        mul_ln269_15_reg_1407 <= grp_fu_788_p2;
        mul_ln269_7_reg_1392 <= grp_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln269_10_reg_1339 <= grp_fu_696_p2;
        mul_ln269_3_reg_1312 <= grp_fu_669_p2;
        mul_ln269_4_reg_1317 <= grp_fu_678_p2;
        mul_ln269_9_reg_1334 <= grp_fu_687_p2;
        sext_ln268_10_reg_1328 <= sext_ln268_10_fu_766_p1;
        sext_ln268_16_reg_1344 <= sext_ln268_16_fu_770_p1;
        sext_ln268_17_reg_1350 <= sext_ln268_17_fu_779_p1;
        sext_ln268_9_reg_1322 <= sext_ln268_9_fu_757_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln269_11_reg_1382 <= grp_fu_743_p2;
        mul_ln269_12_reg_1387 <= grp_fu_752_p2;
        mul_ln269_5_reg_1372 <= grp_fu_725_p2;
        mul_ln269_6_reg_1377 <= grp_fu_734_p2;
        zext_ln263_reg_1356[0] <= zext_ln263_fu_793_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln264_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln264_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln264_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_482 <= matched_I_12_q1;
        reg_486 <= matched_Q_12_q1;
        reg_490 <= matched_I_12_q0;
        reg_494 <= matched_Q_12_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        sext_ln268_11_reg_1213 <= sext_ln268_11_fu_627_p1;
        sext_ln268_1_reg_1175 <= sext_ln268_1_fu_578_p1;
        sext_ln268_3_reg_1181 <= sext_ln268_3_fu_582_p1;
        sext_ln268_4_reg_1207 <= sext_ln268_4_fu_618_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sext_ln268_12_reg_1256 <= sext_ln268_12_fu_683_p1;
        sext_ln268_13_reg_1262 <= sext_ln268_13_fu_692_p1;
        sext_ln268_5_reg_1239 <= sext_ln268_5_fu_665_p1;
        sext_ln268_6_reg_1245 <= sext_ln268_6_fu_674_p1;
        tmp_reg_1219 <= j_1_reg_1110[32'd3];
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_1116 == 1'd0) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln264_reg_1116_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 13'd236;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 8'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_108;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matched_I_12_address0 = zext_ln268_6_fu_659_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matched_I_12_address0 = zext_ln268_4_fu_612_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matched_I_12_address0 = zext_ln268_2_fu_572_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matched_I_12_address0 = zext_ln268_fu_550_p1;
        end else begin
            matched_I_12_address0 = 'bx;
        end
    end else begin
        matched_I_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matched_I_12_address1 = zext_ln268_5_fu_648_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matched_I_12_address1 = zext_ln268_3_fu_601_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matched_I_12_address1 = zext_ln268_1_fu_561_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matched_I_12_address1 = zext_ln263_1_fu_538_p1;
        end else begin
            matched_I_12_address1 = 'bx;
        end
    end else begin
        matched_I_12_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        matched_I_12_ce0 = 1'b1;
    end else begin
        matched_I_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        matched_I_12_ce1 = 1'b1;
    end else begin
        matched_I_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matched_Q_12_address0 = zext_ln268_6_fu_659_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matched_Q_12_address0 = zext_ln268_4_fu_612_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matched_Q_12_address0 = zext_ln268_2_fu_572_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matched_Q_12_address0 = zext_ln268_fu_550_p1;
        end else begin
            matched_Q_12_address0 = 'bx;
        end
    end else begin
        matched_Q_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matched_Q_12_address1 = zext_ln268_5_fu_648_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matched_Q_12_address1 = zext_ln268_3_fu_601_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matched_Q_12_address1 = zext_ln268_1_fu_561_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matched_Q_12_address1 = zext_ln263_1_fu_538_p1;
        end else begin
            matched_Q_12_address1 = 'bx;
        end
    end else begin
        matched_Q_12_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        matched_Q_12_ce0 = 1'b1;
    end else begin
        matched_Q_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        matched_Q_12_ce1 = 1'b1;
    end else begin
        matched_Q_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_I_0_ce0 = 1'b1;
    end else begin
        result_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_I_0_we0 = 1'b1;
    end else begin
        result_I_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_I_1_ce0 = 1'b1;
    end else begin
        result_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_I_1_we0 = 1'b1;
    end else begin
        result_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_I_2_ce0 = 1'b1;
    end else begin
        result_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_I_2_we0 = 1'b1;
    end else begin
        result_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_I_3_ce0 = 1'b1;
    end else begin
        result_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_I_3_we0 = 1'b1;
    end else begin
        result_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_I_4_ce0 = 1'b1;
    end else begin
        result_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_I_4_we0 = 1'b1;
    end else begin
        result_I_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_I_5_ce0 = 1'b1;
    end else begin
        result_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_I_5_we0 = 1'b1;
    end else begin
        result_I_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_I_6_ce0 = 1'b1;
    end else begin
        result_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_I_6_we0 = 1'b1;
    end else begin
        result_I_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_I_7_ce0 = 1'b1;
    end else begin
        result_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_I_7_we0 = 1'b1;
    end else begin
        result_I_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_Q_0_ce0 = 1'b1;
    end else begin
        result_Q_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_Q_0_we0 = 1'b1;
    end else begin
        result_Q_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_Q_1_ce0 = 1'b1;
    end else begin
        result_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_Q_1_we0 = 1'b1;
    end else begin
        result_Q_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_Q_2_ce0 = 1'b1;
    end else begin
        result_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_Q_2_we0 = 1'b1;
    end else begin
        result_Q_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_Q_3_ce0 = 1'b1;
    end else begin
        result_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_Q_3_we0 = 1'b1;
    end else begin
        result_Q_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_Q_4_ce0 = 1'b1;
    end else begin
        result_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_Q_4_we0 = 1'b1;
    end else begin
        result_Q_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_Q_5_ce0 = 1'b1;
    end else begin
        result_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_Q_5_we0 = 1'b1;
    end else begin
        result_Q_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_Q_6_ce0 = 1'b1;
    end else begin
        result_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_Q_6_we0 = 1'b1;
    end else begin
        result_Q_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_Q_7_ce0 = 1'b1;
    end else begin
        result_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_Q_7_we0 = 1'b1;
    end else begin
        result_Q_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln264_1_fu_556_p2 = (lshr_ln263_1_reg_1125 + 8'd2);

assign add_ln264_2_fu_567_p2 = (lshr_ln263_1_reg_1125 + 8'd3);

assign add_ln264_3_fu_596_p2 = (lshr_ln263_1_reg_1125 + 8'd4);

assign add_ln264_4_fu_607_p2 = (lshr_ln263_1_reg_1125 + 8'd5);

assign add_ln264_5_fu_643_p2 = (lshr_ln263_1_reg_1125 + 8'd6);

assign add_ln264_6_fu_654_p2 = (lshr_ln263_1_reg_1125 + 8'd7);

assign add_ln264_7_fu_706_p2 = (j_1_reg_1110 + 8'd8);

assign add_ln264_fu_544_p2 = (lshr_ln263_1_fu_528_p4 + 8'd1);

assign add_ln270_fu_701_p2 = (i_load_reg_1120 + 13'd256);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign grp_fu_1002_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_1002_p1 = sext_ln268_13_reg_1262;

assign grp_fu_1008_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_1008_p1 = sext_ln268_7_reg_1283;

assign grp_fu_1014_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_1014_p1 = sext_ln268_8_reg_1289;

assign grp_fu_1020_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_1020_p1 = sext_ln268_14_reg_1300;

assign grp_fu_1026_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_1026_p1 = sext_ln268_15_reg_1306;

assign grp_fu_1032_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_1032_p1 = sext_ln268_9_reg_1322;

assign grp_fu_1038_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_1038_p1 = sext_ln268_16_reg_1344;

assign grp_fu_1044_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_1044_p1 = sext_ln268_17_reg_1350;

assign grp_fu_1050_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_1050_p1 = sext_ln268_10_reg_1328;

assign grp_fu_586_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_591_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_622_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_631_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_669_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_678_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_687_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_696_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_725_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_734_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_743_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_752_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_761_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_774_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_783_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_788_p0 = sext_ln268_cast_reg_1090;

assign grp_fu_960_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_960_p1 = sext_ln268_3_reg_1181;

assign grp_fu_966_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_966_p1 = sext_ln268_1_reg_1175;

assign grp_fu_972_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_972_p1 = sext_ln268_4_reg_1207;

assign grp_fu_978_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_978_p1 = sext_ln268_11_reg_1213;

assign grp_fu_984_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_984_p1 = sext_ln268_5_reg_1239;

assign grp_fu_990_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_990_p1 = sext_ln268_6_reg_1245;

assign grp_fu_996_p0 = sext_ln268_2_cast_reg_1070;

assign grp_fu_996_p1 = sext_ln268_12_reg_1256;

assign icmp_ln264_fu_519_p2 = ((ap_sig_allocacmp_j_1 < 8'd224) ? 1'b1 : 1'b0);

assign lshr_ln263_1_fu_528_p4 = {{ap_sig_allocacmp_i_load[12:5]}};

assign result_I_0_address0 = zext_ln263_fu_793_p1;

assign result_I_0_d0 = {{grp_fu_960_p3[39:16]}};

assign result_I_1_address0 = zext_ln263_fu_793_p1;

assign result_I_1_d0 = {{grp_fu_978_p3[39:16]}};

assign result_I_2_address0 = zext_ln263_reg_1356;

assign result_I_2_d0 = {{grp_fu_996_p3[39:16]}};

assign result_I_3_address0 = zext_ln263_reg_1356;

assign result_I_3_d0 = {{grp_fu_1002_p3[39:16]}};

assign result_I_4_address0 = zext_ln263_reg_1356;

assign result_I_4_d0 = {{grp_fu_1020_p3[39:16]}};

assign result_I_5_address0 = zext_ln263_reg_1356;

assign result_I_5_d0 = {{grp_fu_1026_p3[39:16]}};

assign result_I_6_address0 = zext_ln263_reg_1356;

assign result_I_6_d0 = {{grp_fu_1038_p3[39:16]}};

assign result_I_7_address0 = zext_ln263_reg_1356;

assign result_I_7_d0 = {{grp_fu_1044_p3[39:16]}};

assign result_Q_0_address0 = zext_ln263_fu_793_p1;

assign result_Q_0_d0 = {{grp_fu_966_p3[39:16]}};

assign result_Q_1_address0 = zext_ln263_fu_793_p1;

assign result_Q_1_d0 = {{grp_fu_972_p3[39:16]}};

assign result_Q_2_address0 = zext_ln263_reg_1356;

assign result_Q_2_d0 = {{grp_fu_984_p3[39:16]}};

assign result_Q_3_address0 = zext_ln263_reg_1356;

assign result_Q_3_d0 = {{grp_fu_990_p3[39:16]}};

assign result_Q_4_address0 = zext_ln263_reg_1356;

assign result_Q_4_d0 = {{grp_fu_1008_p3[39:16]}};

assign result_Q_5_address0 = zext_ln263_reg_1356;

assign result_Q_5_d0 = {{grp_fu_1014_p3[39:16]}};

assign result_Q_6_address0 = zext_ln263_reg_1356;

assign result_Q_6_d0 = {{grp_fu_1032_p3[39:16]}};

assign result_Q_7_address0 = zext_ln263_reg_1356;

assign result_Q_7_d0 = {{grp_fu_1050_p3[39:16]}};

assign sext_ln268_10_fu_766_p1 = reg_490;

assign sext_ln268_11_fu_627_p1 = reg_494;

assign sext_ln268_12_fu_683_p1 = reg_486;

assign sext_ln268_13_fu_692_p1 = reg_494;

assign sext_ln268_14_fu_739_p1 = reg_486;

assign sext_ln268_15_fu_748_p1 = reg_494;

assign sext_ln268_16_fu_770_p1 = reg_486;

assign sext_ln268_17_fu_779_p1 = reg_494;

assign sext_ln268_1_fu_578_p1 = reg_482;

assign sext_ln268_2_cast_fu_498_p1 = $signed(sext_ln268_2);

assign sext_ln268_3_fu_582_p1 = reg_486;

assign sext_ln268_4_fu_618_p1 = reg_490;

assign sext_ln268_5_fu_665_p1 = reg_482;

assign sext_ln268_6_fu_674_p1 = reg_490;

assign sext_ln268_7_fu_721_p1 = reg_482;

assign sext_ln268_8_fu_730_p1 = reg_490;

assign sext_ln268_9_fu_757_p1 = reg_482;

assign sext_ln268_cast_fu_502_p1 = $signed(sext_ln268);

assign zext_ln263_1_fu_538_p1 = lshr_ln263_1_fu_528_p4;

assign zext_ln263_fu_793_p1 = tmp_reg_1219;

assign zext_ln268_1_fu_561_p1 = add_ln264_1_fu_556_p2;

assign zext_ln268_2_fu_572_p1 = add_ln264_2_fu_567_p2;

assign zext_ln268_3_fu_601_p1 = add_ln264_3_fu_596_p2;

assign zext_ln268_4_fu_612_p1 = add_ln264_4_fu_607_p2;

assign zext_ln268_5_fu_648_p1 = add_ln264_5_fu_643_p2;

assign zext_ln268_6_fu_659_p1 = add_ln264_6_fu_654_p2;

assign zext_ln268_fu_550_p1 = add_ln264_fu_544_p2;

always @ (posedge ap_clk) begin
    zext_ln263_reg_1356[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_264_22
