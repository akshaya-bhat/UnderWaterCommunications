// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_264_22 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln268,
        sext_ln268_2,
        result_I_0_address0,
        result_I_0_ce0,
        result_I_0_we0,
        result_I_0_d0,
        result_I_1_address0,
        result_I_1_ce0,
        result_I_1_we0,
        result_I_1_d0,
        result_I_2_address0,
        result_I_2_ce0,
        result_I_2_we0,
        result_I_2_d0,
        result_I_3_address0,
        result_I_3_ce0,
        result_I_3_we0,
        result_I_3_d0,
        result_I_4_address0,
        result_I_4_ce0,
        result_I_4_we0,
        result_I_4_d0,
        result_I_5_address0,
        result_I_5_ce0,
        result_I_5_we0,
        result_I_5_d0,
        result_I_6_address0,
        result_I_6_ce0,
        result_I_6_we0,
        result_I_6_d0,
        result_I_7_address0,
        result_I_7_ce0,
        result_I_7_we0,
        result_I_7_d0,
        result_I_8_address0,
        result_I_8_ce0,
        result_I_8_we0,
        result_I_8_d0,
        result_I_9_address0,
        result_I_9_ce0,
        result_I_9_we0,
        result_I_9_d0,
        result_I_10_address0,
        result_I_10_ce0,
        result_I_10_we0,
        result_I_10_d0,
        result_I_11_address0,
        result_I_11_ce0,
        result_I_11_we0,
        result_I_11_d0,
        result_I_12_address0,
        result_I_12_ce0,
        result_I_12_we0,
        result_I_12_d0,
        result_I_13_address0,
        result_I_13_ce0,
        result_I_13_we0,
        result_I_13_d0,
        result_I_14_address0,
        result_I_14_ce0,
        result_I_14_we0,
        result_I_14_d0,
        result_I_15_address0,
        result_I_15_ce0,
        result_I_15_we0,
        result_I_15_d0,
        result_Q_0_address0,
        result_Q_0_ce0,
        result_Q_0_we0,
        result_Q_0_d0,
        result_Q_1_address0,
        result_Q_1_ce0,
        result_Q_1_we0,
        result_Q_1_d0,
        result_Q_2_address0,
        result_Q_2_ce0,
        result_Q_2_we0,
        result_Q_2_d0,
        result_Q_3_address0,
        result_Q_3_ce0,
        result_Q_3_we0,
        result_Q_3_d0,
        result_Q_4_address0,
        result_Q_4_ce0,
        result_Q_4_we0,
        result_Q_4_d0,
        result_Q_5_address0,
        result_Q_5_ce0,
        result_Q_5_we0,
        result_Q_5_d0,
        result_Q_6_address0,
        result_Q_6_ce0,
        result_Q_6_we0,
        result_Q_6_d0,
        result_Q_7_address0,
        result_Q_7_ce0,
        result_Q_7_we0,
        result_Q_7_d0,
        result_Q_8_address0,
        result_Q_8_ce0,
        result_Q_8_we0,
        result_Q_8_d0,
        result_Q_9_address0,
        result_Q_9_ce0,
        result_Q_9_we0,
        result_Q_9_d0,
        result_Q_10_address0,
        result_Q_10_ce0,
        result_Q_10_we0,
        result_Q_10_d0,
        result_Q_11_address0,
        result_Q_11_ce0,
        result_Q_11_we0,
        result_Q_11_d0,
        result_Q_12_address0,
        result_Q_12_ce0,
        result_Q_12_we0,
        result_Q_12_d0,
        result_Q_13_address0,
        result_Q_13_ce0,
        result_Q_13_we0,
        result_Q_13_d0,
        result_Q_14_address0,
        result_Q_14_ce0,
        result_Q_14_we0,
        result_Q_14_d0,
        result_Q_15_address0,
        result_Q_15_ce0,
        result_Q_15_we0,
        result_Q_15_d0,
        matched_I_12_address0,
        matched_I_12_ce0,
        matched_I_12_q0,
        matched_I_12_address1,
        matched_I_12_ce1,
        matched_I_12_q1,
        matched_Q_12_address0,
        matched_Q_12_ce0,
        matched_Q_12_q0,
        matched_Q_12_address1,
        matched_Q_12_ce1,
        matched_Q_12_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] sext_ln268;
input  [23:0] sext_ln268_2;
output  [0:0] result_I_0_address0;
output   result_I_0_ce0;
output   result_I_0_we0;
output  [23:0] result_I_0_d0;
output  [0:0] result_I_1_address0;
output   result_I_1_ce0;
output   result_I_1_we0;
output  [23:0] result_I_1_d0;
output  [0:0] result_I_2_address0;
output   result_I_2_ce0;
output   result_I_2_we0;
output  [23:0] result_I_2_d0;
output  [0:0] result_I_3_address0;
output   result_I_3_ce0;
output   result_I_3_we0;
output  [23:0] result_I_3_d0;
output  [0:0] result_I_4_address0;
output   result_I_4_ce0;
output   result_I_4_we0;
output  [23:0] result_I_4_d0;
output  [0:0] result_I_5_address0;
output   result_I_5_ce0;
output   result_I_5_we0;
output  [23:0] result_I_5_d0;
output  [0:0] result_I_6_address0;
output   result_I_6_ce0;
output   result_I_6_we0;
output  [23:0] result_I_6_d0;
output  [0:0] result_I_7_address0;
output   result_I_7_ce0;
output   result_I_7_we0;
output  [23:0] result_I_7_d0;
output  [0:0] result_I_8_address0;
output   result_I_8_ce0;
output   result_I_8_we0;
output  [23:0] result_I_8_d0;
output  [0:0] result_I_9_address0;
output   result_I_9_ce0;
output   result_I_9_we0;
output  [23:0] result_I_9_d0;
output  [0:0] result_I_10_address0;
output   result_I_10_ce0;
output   result_I_10_we0;
output  [23:0] result_I_10_d0;
output  [0:0] result_I_11_address0;
output   result_I_11_ce0;
output   result_I_11_we0;
output  [23:0] result_I_11_d0;
output  [0:0] result_I_12_address0;
output   result_I_12_ce0;
output   result_I_12_we0;
output  [23:0] result_I_12_d0;
output  [0:0] result_I_13_address0;
output   result_I_13_ce0;
output   result_I_13_we0;
output  [23:0] result_I_13_d0;
output  [0:0] result_I_14_address0;
output   result_I_14_ce0;
output   result_I_14_we0;
output  [23:0] result_I_14_d0;
output  [0:0] result_I_15_address0;
output   result_I_15_ce0;
output   result_I_15_we0;
output  [23:0] result_I_15_d0;
output  [0:0] result_Q_0_address0;
output   result_Q_0_ce0;
output   result_Q_0_we0;
output  [23:0] result_Q_0_d0;
output  [0:0] result_Q_1_address0;
output   result_Q_1_ce0;
output   result_Q_1_we0;
output  [23:0] result_Q_1_d0;
output  [0:0] result_Q_2_address0;
output   result_Q_2_ce0;
output   result_Q_2_we0;
output  [23:0] result_Q_2_d0;
output  [0:0] result_Q_3_address0;
output   result_Q_3_ce0;
output   result_Q_3_we0;
output  [23:0] result_Q_3_d0;
output  [0:0] result_Q_4_address0;
output   result_Q_4_ce0;
output   result_Q_4_we0;
output  [23:0] result_Q_4_d0;
output  [0:0] result_Q_5_address0;
output   result_Q_5_ce0;
output   result_Q_5_we0;
output  [23:0] result_Q_5_d0;
output  [0:0] result_Q_6_address0;
output   result_Q_6_ce0;
output   result_Q_6_we0;
output  [23:0] result_Q_6_d0;
output  [0:0] result_Q_7_address0;
output   result_Q_7_ce0;
output   result_Q_7_we0;
output  [23:0] result_Q_7_d0;
output  [0:0] result_Q_8_address0;
output   result_Q_8_ce0;
output   result_Q_8_we0;
output  [23:0] result_Q_8_d0;
output  [0:0] result_Q_9_address0;
output   result_Q_9_ce0;
output   result_Q_9_we0;
output  [23:0] result_Q_9_d0;
output  [0:0] result_Q_10_address0;
output   result_Q_10_ce0;
output   result_Q_10_we0;
output  [23:0] result_Q_10_d0;
output  [0:0] result_Q_11_address0;
output   result_Q_11_ce0;
output   result_Q_11_we0;
output  [23:0] result_Q_11_d0;
output  [0:0] result_Q_12_address0;
output   result_Q_12_ce0;
output   result_Q_12_we0;
output  [23:0] result_Q_12_d0;
output  [0:0] result_Q_13_address0;
output   result_Q_13_ce0;
output   result_Q_13_we0;
output  [23:0] result_Q_13_d0;
output  [0:0] result_Q_14_address0;
output   result_Q_14_ce0;
output   result_Q_14_we0;
output  [23:0] result_Q_14_d0;
output  [0:0] result_Q_15_address0;
output   result_Q_15_ce0;
output   result_Q_15_we0;
output  [23:0] result_Q_15_d0;
output  [7:0] matched_I_12_address0;
output   matched_I_12_ce0;
input  [17:0] matched_I_12_q0;
output  [7:0] matched_I_12_address1;
output   matched_I_12_ce1;
input  [17:0] matched_I_12_q1;
output  [7:0] matched_Q_12_address0;
output   matched_Q_12_ce0;
input  [17:0] matched_Q_12_q0;
output  [7:0] matched_Q_12_address1;
output   matched_Q_12_ce1;
input  [17:0] matched_Q_12_q1;

reg ap_idle;
reg result_I_0_ce0;
reg result_I_0_we0;
reg result_I_1_ce0;
reg result_I_1_we0;
reg result_I_2_ce0;
reg result_I_2_we0;
reg result_I_3_ce0;
reg result_I_3_we0;
reg result_I_4_ce0;
reg result_I_4_we0;
reg result_I_5_ce0;
reg result_I_5_we0;
reg result_I_6_ce0;
reg result_I_6_we0;
reg result_I_7_ce0;
reg result_I_7_we0;
reg result_I_8_ce0;
reg result_I_8_we0;
reg result_I_9_ce0;
reg result_I_9_we0;
reg result_I_10_ce0;
reg result_I_10_we0;
reg result_I_11_ce0;
reg result_I_11_we0;
reg result_I_12_ce0;
reg result_I_12_we0;
reg result_I_13_ce0;
reg result_I_13_we0;
reg result_I_14_ce0;
reg result_I_14_we0;
reg result_I_15_ce0;
reg result_I_15_we0;
reg result_Q_0_ce0;
reg result_Q_0_we0;
reg result_Q_1_ce0;
reg result_Q_1_we0;
reg result_Q_2_ce0;
reg result_Q_2_we0;
reg result_Q_3_ce0;
reg result_Q_3_we0;
reg result_Q_4_ce0;
reg result_Q_4_we0;
reg result_Q_5_ce0;
reg result_Q_5_we0;
reg result_Q_6_ce0;
reg result_Q_6_we0;
reg result_Q_7_ce0;
reg result_Q_7_we0;
reg result_Q_8_ce0;
reg result_Q_8_we0;
reg result_Q_9_ce0;
reg result_Q_9_we0;
reg result_Q_10_ce0;
reg result_Q_10_we0;
reg result_Q_11_ce0;
reg result_Q_11_we0;
reg result_Q_12_ce0;
reg result_Q_12_we0;
reg result_Q_13_ce0;
reg result_Q_13_we0;
reg result_Q_14_ce0;
reg result_Q_14_we0;
reg result_Q_15_ce0;
reg result_Q_15_we0;
reg[7:0] matched_I_12_address0;
reg matched_I_12_ce0;
reg[7:0] matched_I_12_address1;
reg matched_I_12_ce1;
reg[7:0] matched_Q_12_address0;
reg matched_Q_12_ce0;
reg[7:0] matched_Q_12_address1;
reg matched_Q_12_ce1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln264_reg_2005;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire  signed [39:0] sext_ln268_2_cast_fu_866_p1;
reg  signed [39:0] sext_ln268_2_cast_reg_1927;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire  signed [39:0] sext_ln268_cast_fu_870_p1;
reg  signed [39:0] sext_ln268_cast_reg_1963;
reg   [7:0] j_1_reg_1999;
wire   [0:0] icmp_ln264_fu_887_p2;
reg   [12:0] i_load_reg_2009;
wire   [7:0] lshr_ln263_1_fu_896_p4;
reg   [7:0] lshr_ln263_1_reg_2014;
wire  signed [39:0] sext_ln268_1_fu_924_p1;
reg  signed [39:0] sext_ln268_1_reg_2052;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire  signed [39:0] sext_ln268_3_fu_928_p1;
reg  signed [39:0] sext_ln268_3_reg_2058;
wire  signed [39:0] sext_ln268_4_fu_954_p1;
reg  signed [39:0] sext_ln268_4_reg_2084;
wire  signed [39:0] sext_ln268_19_fu_958_p1;
reg  signed [39:0] sext_ln268_19_reg_2090;
wire   [39:0] mul_ln268_fu_962_p2;
reg  signed [39:0] mul_ln268_reg_2096;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [39:0] mul_ln269_1_fu_966_p2;
reg  signed [39:0] mul_ln269_1_reg_2101;
wire   [39:0] mul_ln269_2_fu_992_p2;
reg  signed [39:0] mul_ln269_2_reg_2126;
wire  signed [39:0] sext_ln268_5_fu_996_p1;
reg  signed [39:0] sext_ln268_5_reg_2131;
wire  signed [39:0] sext_ln268_6_fu_1000_p1;
reg  signed [39:0] sext_ln268_6_reg_2137;
wire   [39:0] mul_ln269_16_fu_1004_p2;
reg  signed [39:0] mul_ln269_16_reg_2143;
wire  signed [39:0] sext_ln268_20_fu_1008_p1;
reg  signed [39:0] sext_ln268_20_reg_2148;
wire  signed [39:0] sext_ln268_21_fu_1012_p1;
reg  signed [39:0] sext_ln268_21_reg_2154;
wire    ap_block_pp0_stage3_11001;
wire   [39:0] mul_ln269_3_fu_1038_p2;
reg  signed [39:0] mul_ln269_3_reg_2180;
wire   [39:0] mul_ln269_4_fu_1042_p2;
reg  signed [39:0] mul_ln269_4_reg_2185;
wire  signed [39:0] sext_ln268_7_fu_1046_p1;
reg  signed [39:0] sext_ln268_7_reg_2190;
wire  signed [39:0] sext_ln268_8_fu_1050_p1;
reg  signed [39:0] sext_ln268_8_reg_2196;
wire   [39:0] mul_ln269_17_fu_1054_p2;
reg  signed [39:0] mul_ln269_17_reg_2202;
wire   [39:0] mul_ln269_18_fu_1058_p2;
reg  signed [39:0] mul_ln269_18_reg_2207;
wire  signed [39:0] sext_ln268_22_fu_1062_p1;
reg  signed [39:0] sext_ln268_22_reg_2212;
wire  signed [39:0] sext_ln268_23_fu_1066_p1;
reg  signed [39:0] sext_ln268_23_reg_2218;
wire   [63:0] zext_ln263_fu_1077_p1;
reg   [63:0] zext_ln263_reg_2224;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [39:0] mul_ln269_5_fu_1127_p2;
reg  signed [39:0] mul_ln269_5_reg_2276;
wire   [39:0] mul_ln269_6_fu_1131_p2;
reg  signed [39:0] mul_ln269_6_reg_2281;
wire  signed [39:0] sext_ln268_9_fu_1135_p1;
reg  signed [39:0] sext_ln268_9_reg_2286;
wire  signed [39:0] sext_ln268_10_fu_1139_p1;
reg  signed [39:0] sext_ln268_10_reg_2292;
wire   [39:0] mul_ln269_19_fu_1163_p2;
reg  signed [39:0] mul_ln269_19_reg_2298;
wire   [39:0] mul_ln269_20_fu_1167_p2;
reg  signed [39:0] mul_ln269_20_reg_2303;
wire  signed [39:0] sext_ln268_24_fu_1171_p1;
reg  signed [39:0] sext_ln268_24_reg_2308;
wire  signed [39:0] sext_ln268_25_fu_1175_p1;
reg  signed [39:0] sext_ln268_25_reg_2314;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [39:0] mul_ln269_7_fu_1201_p2;
reg  signed [39:0] mul_ln269_7_reg_2340;
wire   [39:0] mul_ln269_8_fu_1205_p2;
reg  signed [39:0] mul_ln269_8_reg_2345;
wire  signed [39:0] sext_ln268_11_fu_1209_p1;
reg  signed [39:0] sext_ln268_11_reg_2350;
wire  signed [39:0] sext_ln268_12_fu_1213_p1;
reg  signed [39:0] sext_ln268_12_reg_2356;
wire   [39:0] mul_ln269_21_fu_1257_p2;
reg  signed [39:0] mul_ln269_21_reg_2362;
wire   [39:0] mul_ln269_22_fu_1261_p2;
reg  signed [39:0] mul_ln269_22_reg_2367;
wire  signed [39:0] sext_ln268_26_fu_1265_p1;
reg  signed [39:0] sext_ln268_26_reg_2372;
wire  signed [39:0] sext_ln268_27_fu_1269_p1;
reg  signed [39:0] sext_ln268_27_reg_2378;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [39:0] mul_ln269_9_fu_1295_p2;
reg  signed [39:0] mul_ln269_9_reg_2404;
wire   [39:0] mul_ln269_10_fu_1299_p2;
reg  signed [39:0] mul_ln269_10_reg_2409;
wire  signed [39:0] sext_ln268_13_fu_1303_p1;
reg  signed [39:0] sext_ln268_13_reg_2414;
wire  signed [39:0] sext_ln268_14_fu_1307_p1;
reg  signed [39:0] sext_ln268_14_reg_2420;
wire   [39:0] mul_ln269_23_fu_1351_p2;
reg  signed [39:0] mul_ln269_23_reg_2426;
wire   [39:0] mul_ln269_24_fu_1355_p2;
reg  signed [39:0] mul_ln269_24_reg_2431;
wire  signed [39:0] sext_ln268_28_fu_1359_p1;
reg  signed [39:0] sext_ln268_28_reg_2436;
wire  signed [39:0] sext_ln268_29_fu_1363_p1;
reg  signed [39:0] sext_ln268_29_reg_2442;
wire    ap_block_pp0_stage7_11001;
wire   [39:0] mul_ln269_11_fu_1389_p2;
reg  signed [39:0] mul_ln269_11_reg_2463;
wire   [39:0] mul_ln269_12_fu_1393_p2;
reg  signed [39:0] mul_ln269_12_reg_2468;
wire  signed [39:0] sext_ln268_15_fu_1397_p1;
reg  signed [39:0] sext_ln268_15_reg_2473;
wire  signed [39:0] sext_ln268_16_fu_1401_p1;
reg  signed [39:0] sext_ln268_16_reg_2479;
wire   [39:0] mul_ln269_25_fu_1445_p2;
reg  signed [39:0] mul_ln269_25_reg_2490;
wire   [39:0] mul_ln269_26_fu_1449_p2;
reg  signed [39:0] mul_ln269_26_reg_2495;
wire  signed [39:0] sext_ln268_30_fu_1453_p1;
reg  signed [39:0] sext_ln268_30_reg_2500;
wire  signed [39:0] sext_ln268_31_fu_1457_p1;
reg  signed [39:0] sext_ln268_31_reg_2506;
wire   [39:0] mul_ln269_13_fu_1481_p2;
reg  signed [39:0] mul_ln269_13_reg_2512;
wire   [39:0] mul_ln269_14_fu_1485_p2;
reg  signed [39:0] mul_ln269_14_reg_2517;
wire  signed [39:0] sext_ln268_17_fu_1489_p1;
reg  signed [39:0] sext_ln268_17_reg_2522;
wire  signed [39:0] sext_ln268_18_fu_1493_p1;
reg  signed [39:0] sext_ln268_18_reg_2528;
wire   [39:0] mul_ln269_27_fu_1537_p2;
reg  signed [39:0] mul_ln269_27_reg_2534;
wire   [39:0] mul_ln269_28_fu_1541_p2;
reg  signed [39:0] mul_ln269_28_reg_2539;
wire  signed [39:0] sext_ln268_32_fu_1545_p1;
reg  signed [39:0] sext_ln268_32_reg_2544;
wire  signed [39:0] sext_ln268_33_fu_1549_p1;
reg  signed [39:0] sext_ln268_33_reg_2550;
wire   [39:0] mul_ln269_15_fu_1553_p2;
reg  signed [39:0] mul_ln269_15_reg_2556;
wire   [39:0] mul_ln269_29_fu_1597_p2;
reg  signed [39:0] mul_ln269_29_reg_2561;
wire   [39:0] mul_ln268_30_fu_1601_p2;
reg  signed [39:0] mul_ln268_30_reg_2566;
wire   [39:0] mul_ln269_31_fu_1605_p2;
reg  signed [39:0] mul_ln269_31_reg_2571;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln263_1_fu_906_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln268_fu_918_p1;
wire   [63:0] zext_ln268_1_fu_937_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln268_2_fu_948_p1;
wire   [63:0] zext_ln268_3_fu_975_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln268_4_fu_986_p1;
wire   [63:0] zext_ln268_5_fu_1021_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln268_6_fu_1032_p1;
wire   [63:0] zext_ln268_7_fu_1110_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln268_8_fu_1121_p1;
wire   [63:0] zext_ln268_9_fu_1184_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln268_10_fu_1195_p1;
wire   [63:0] zext_ln268_11_fu_1278_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln268_12_fu_1289_p1;
wire   [63:0] zext_ln268_13_fu_1372_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln268_14_fu_1383_p1;
reg   [7:0] j_fu_156;
wire   [7:0] add_ln264_15_fu_1466_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_j_1;
reg   [12:0] i_fu_160;
wire   [12:0] add_ln270_fu_1461_p2;
reg   [12:0] ap_sig_allocacmp_i_load;
wire   [7:0] add_ln264_fu_912_p2;
wire   [7:0] add_ln264_1_fu_932_p2;
wire   [7:0] add_ln264_2_fu_943_p2;
wire  signed [23:0] mul_ln268_fu_962_p0;
wire  signed [17:0] mul_ln268_fu_962_p1;
wire  signed [23:0] mul_ln269_1_fu_966_p0;
wire  signed [17:0] mul_ln269_1_fu_966_p1;
wire   [7:0] add_ln264_3_fu_970_p2;
wire   [7:0] add_ln264_4_fu_981_p2;
wire  signed [23:0] mul_ln269_2_fu_992_p0;
wire  signed [17:0] mul_ln269_2_fu_992_p1;
wire  signed [23:0] mul_ln269_16_fu_1004_p0;
wire  signed [17:0] mul_ln269_16_fu_1004_p1;
wire   [7:0] add_ln264_5_fu_1016_p2;
wire   [7:0] add_ln264_6_fu_1027_p2;
wire  signed [23:0] mul_ln269_3_fu_1038_p0;
wire  signed [17:0] mul_ln269_3_fu_1038_p1;
wire  signed [23:0] mul_ln269_4_fu_1042_p0;
wire  signed [17:0] mul_ln269_4_fu_1042_p1;
wire  signed [23:0] mul_ln269_17_fu_1054_p0;
wire  signed [17:0] mul_ln269_17_fu_1054_p1;
wire  signed [23:0] mul_ln269_18_fu_1058_p0;
wire  signed [17:0] mul_ln269_18_fu_1058_p1;
wire   [0:0] tmp_fu_1070_p3;
wire  signed [39:0] grp_fu_1689_p3;
wire  signed [39:0] grp_fu_1696_p3;
wire   [7:0] add_ln264_7_fu_1105_p2;
wire   [7:0] add_ln264_8_fu_1116_p2;
wire  signed [23:0] mul_ln269_5_fu_1127_p0;
wire  signed [17:0] mul_ln269_5_fu_1127_p1;
wire  signed [23:0] mul_ln269_6_fu_1131_p0;
wire  signed [17:0] mul_ln269_6_fu_1131_p1;
wire  signed [39:0] grp_fu_1710_p3;
wire  signed [39:0] grp_fu_1703_p3;
wire  signed [23:0] mul_ln269_19_fu_1163_p0;
wire  signed [17:0] mul_ln269_19_fu_1163_p1;
wire  signed [23:0] mul_ln269_20_fu_1167_p0;
wire  signed [17:0] mul_ln269_20_fu_1167_p1;
wire   [7:0] add_ln264_9_fu_1179_p2;
wire   [7:0] add_ln264_10_fu_1190_p2;
wire  signed [23:0] mul_ln269_7_fu_1201_p0;
wire  signed [17:0] mul_ln269_7_fu_1201_p1;
wire  signed [23:0] mul_ln269_8_fu_1205_p0;
wire  signed [17:0] mul_ln269_8_fu_1205_p1;
wire  signed [39:0] grp_fu_1731_p3;
wire  signed [39:0] grp_fu_1717_p3;
wire  signed [39:0] grp_fu_1738_p3;
wire  signed [39:0] grp_fu_1724_p3;
wire  signed [23:0] mul_ln269_21_fu_1257_p0;
wire  signed [17:0] mul_ln269_21_fu_1257_p1;
wire  signed [23:0] mul_ln269_22_fu_1261_p0;
wire  signed [17:0] mul_ln269_22_fu_1261_p1;
wire   [7:0] add_ln264_11_fu_1273_p2;
wire   [7:0] add_ln264_12_fu_1284_p2;
wire  signed [23:0] mul_ln269_9_fu_1295_p0;
wire  signed [17:0] mul_ln269_9_fu_1295_p1;
wire  signed [23:0] mul_ln269_10_fu_1299_p0;
wire  signed [17:0] mul_ln269_10_fu_1299_p1;
wire  signed [39:0] grp_fu_1759_p3;
wire  signed [39:0] grp_fu_1745_p3;
wire  signed [39:0] grp_fu_1766_p3;
wire  signed [39:0] grp_fu_1752_p3;
wire  signed [23:0] mul_ln269_23_fu_1351_p0;
wire  signed [17:0] mul_ln269_23_fu_1351_p1;
wire  signed [23:0] mul_ln269_24_fu_1355_p0;
wire  signed [17:0] mul_ln269_24_fu_1355_p1;
wire   [7:0] add_ln264_13_fu_1367_p2;
wire   [7:0] add_ln264_14_fu_1378_p2;
wire  signed [23:0] mul_ln269_11_fu_1389_p0;
wire  signed [17:0] mul_ln269_11_fu_1389_p1;
wire  signed [23:0] mul_ln269_12_fu_1393_p0;
wire  signed [17:0] mul_ln269_12_fu_1393_p1;
wire  signed [39:0] grp_fu_1787_p3;
wire  signed [39:0] grp_fu_1773_p3;
wire  signed [39:0] grp_fu_1794_p3;
wire  signed [39:0] grp_fu_1780_p3;
wire  signed [23:0] mul_ln269_25_fu_1445_p0;
wire  signed [17:0] mul_ln269_25_fu_1445_p1;
wire  signed [23:0] mul_ln269_26_fu_1449_p0;
wire  signed [17:0] mul_ln269_26_fu_1449_p1;
wire  signed [23:0] mul_ln269_13_fu_1481_p0;
wire  signed [17:0] mul_ln269_13_fu_1481_p1;
wire  signed [23:0] mul_ln269_14_fu_1485_p0;
wire  signed [17:0] mul_ln269_14_fu_1485_p1;
wire  signed [39:0] grp_fu_1815_p3;
wire  signed [39:0] grp_fu_1801_p3;
wire  signed [39:0] grp_fu_1822_p3;
wire  signed [39:0] grp_fu_1808_p3;
wire  signed [23:0] mul_ln269_27_fu_1537_p0;
wire  signed [17:0] mul_ln269_27_fu_1537_p1;
wire  signed [23:0] mul_ln269_28_fu_1541_p0;
wire  signed [17:0] mul_ln269_28_fu_1541_p1;
wire  signed [23:0] mul_ln269_15_fu_1553_p0;
wire  signed [17:0] mul_ln269_15_fu_1553_p1;
wire  signed [39:0] grp_fu_1843_p3;
wire  signed [39:0] grp_fu_1829_p3;
wire  signed [39:0] grp_fu_1850_p3;
wire  signed [39:0] grp_fu_1836_p3;
wire  signed [23:0] mul_ln269_29_fu_1597_p0;
wire  signed [17:0] mul_ln269_29_fu_1597_p1;
wire  signed [23:0] mul_ln268_30_fu_1601_p0;
wire  signed [17:0] mul_ln268_30_fu_1601_p1;
wire  signed [23:0] mul_ln269_31_fu_1605_p0;
wire  signed [17:0] mul_ln269_31_fu_1605_p1;
wire  signed [39:0] grp_fu_1871_p3;
wire  signed [39:0] grp_fu_1857_p3;
wire  signed [39:0] grp_fu_1878_p3;
wire  signed [39:0] grp_fu_1864_p3;
wire  signed [39:0] grp_fu_1892_p3;
wire  signed [39:0] grp_fu_1885_p3;
wire  signed [39:0] grp_fu_1899_p3;
wire  signed [39:0] grp_fu_1906_p3;
wire  signed [23:0] grp_fu_1689_p0;
wire  signed [23:0] grp_fu_1696_p0;
wire  signed [23:0] grp_fu_1703_p0;
wire  signed [23:0] grp_fu_1710_p0;
wire  signed [23:0] grp_fu_1717_p0;
wire  signed [23:0] grp_fu_1724_p0;
wire  signed [23:0] grp_fu_1731_p0;
wire  signed [23:0] grp_fu_1738_p0;
wire  signed [23:0] grp_fu_1745_p0;
wire  signed [23:0] grp_fu_1752_p0;
wire  signed [23:0] grp_fu_1759_p0;
wire  signed [23:0] grp_fu_1766_p0;
wire  signed [23:0] grp_fu_1773_p0;
wire  signed [23:0] grp_fu_1780_p0;
wire  signed [23:0] grp_fu_1787_p0;
wire  signed [23:0] grp_fu_1794_p0;
wire  signed [23:0] grp_fu_1801_p0;
wire  signed [23:0] grp_fu_1808_p0;
wire  signed [23:0] grp_fu_1815_p0;
wire  signed [23:0] grp_fu_1822_p0;
wire  signed [23:0] grp_fu_1829_p0;
wire  signed [23:0] grp_fu_1836_p0;
wire  signed [23:0] grp_fu_1843_p0;
wire  signed [23:0] grp_fu_1850_p0;
wire  signed [23:0] grp_fu_1857_p0;
wire  signed [23:0] grp_fu_1864_p0;
wire  signed [23:0] grp_fu_1871_p0;
wire  signed [23:0] grp_fu_1878_p0;
wire  signed [23:0] grp_fu_1885_p0;
wire  signed [23:0] grp_fu_1892_p0;
wire  signed [23:0] grp_fu_1899_p0;
wire  signed [23:0] grp_fu_1906_p0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1061(
    .din0(mul_ln268_fu_962_p0),
    .din1(mul_ln268_fu_962_p1),
    .dout(mul_ln268_fu_962_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1062(
    .din0(mul_ln269_1_fu_966_p0),
    .din1(mul_ln269_1_fu_966_p1),
    .dout(mul_ln269_1_fu_966_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1063(
    .din0(mul_ln269_2_fu_992_p0),
    .din1(mul_ln269_2_fu_992_p1),
    .dout(mul_ln269_2_fu_992_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1064(
    .din0(mul_ln269_16_fu_1004_p0),
    .din1(mul_ln269_16_fu_1004_p1),
    .dout(mul_ln269_16_fu_1004_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1065(
    .din0(mul_ln269_3_fu_1038_p0),
    .din1(mul_ln269_3_fu_1038_p1),
    .dout(mul_ln269_3_fu_1038_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1066(
    .din0(mul_ln269_4_fu_1042_p0),
    .din1(mul_ln269_4_fu_1042_p1),
    .dout(mul_ln269_4_fu_1042_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1067(
    .din0(mul_ln269_17_fu_1054_p0),
    .din1(mul_ln269_17_fu_1054_p1),
    .dout(mul_ln269_17_fu_1054_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1068(
    .din0(mul_ln269_18_fu_1058_p0),
    .din1(mul_ln269_18_fu_1058_p1),
    .dout(mul_ln269_18_fu_1058_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1069(
    .din0(mul_ln269_5_fu_1127_p0),
    .din1(mul_ln269_5_fu_1127_p1),
    .dout(mul_ln269_5_fu_1127_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1070(
    .din0(mul_ln269_6_fu_1131_p0),
    .din1(mul_ln269_6_fu_1131_p1),
    .dout(mul_ln269_6_fu_1131_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1071(
    .din0(mul_ln269_19_fu_1163_p0),
    .din1(mul_ln269_19_fu_1163_p1),
    .dout(mul_ln269_19_fu_1163_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1072(
    .din0(mul_ln269_20_fu_1167_p0),
    .din1(mul_ln269_20_fu_1167_p1),
    .dout(mul_ln269_20_fu_1167_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1073(
    .din0(mul_ln269_7_fu_1201_p0),
    .din1(mul_ln269_7_fu_1201_p1),
    .dout(mul_ln269_7_fu_1201_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1074(
    .din0(mul_ln269_8_fu_1205_p0),
    .din1(mul_ln269_8_fu_1205_p1),
    .dout(mul_ln269_8_fu_1205_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1075(
    .din0(mul_ln269_21_fu_1257_p0),
    .din1(mul_ln269_21_fu_1257_p1),
    .dout(mul_ln269_21_fu_1257_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1076(
    .din0(mul_ln269_22_fu_1261_p0),
    .din1(mul_ln269_22_fu_1261_p1),
    .dout(mul_ln269_22_fu_1261_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1077(
    .din0(mul_ln269_9_fu_1295_p0),
    .din1(mul_ln269_9_fu_1295_p1),
    .dout(mul_ln269_9_fu_1295_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1078(
    .din0(mul_ln269_10_fu_1299_p0),
    .din1(mul_ln269_10_fu_1299_p1),
    .dout(mul_ln269_10_fu_1299_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1079(
    .din0(mul_ln269_23_fu_1351_p0),
    .din1(mul_ln269_23_fu_1351_p1),
    .dout(mul_ln269_23_fu_1351_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1080(
    .din0(mul_ln269_24_fu_1355_p0),
    .din1(mul_ln269_24_fu_1355_p1),
    .dout(mul_ln269_24_fu_1355_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1081(
    .din0(mul_ln269_11_fu_1389_p0),
    .din1(mul_ln269_11_fu_1389_p1),
    .dout(mul_ln269_11_fu_1389_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1082(
    .din0(mul_ln269_12_fu_1393_p0),
    .din1(mul_ln269_12_fu_1393_p1),
    .dout(mul_ln269_12_fu_1393_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1083(
    .din0(mul_ln269_25_fu_1445_p0),
    .din1(mul_ln269_25_fu_1445_p1),
    .dout(mul_ln269_25_fu_1445_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1084(
    .din0(mul_ln269_26_fu_1449_p0),
    .din1(mul_ln269_26_fu_1449_p1),
    .dout(mul_ln269_26_fu_1449_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1085(
    .din0(mul_ln269_13_fu_1481_p0),
    .din1(mul_ln269_13_fu_1481_p1),
    .dout(mul_ln269_13_fu_1481_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1086(
    .din0(mul_ln269_14_fu_1485_p0),
    .din1(mul_ln269_14_fu_1485_p1),
    .dout(mul_ln269_14_fu_1485_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1087(
    .din0(mul_ln269_27_fu_1537_p0),
    .din1(mul_ln269_27_fu_1537_p1),
    .dout(mul_ln269_27_fu_1537_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1088(
    .din0(mul_ln269_28_fu_1541_p0),
    .din1(mul_ln269_28_fu_1541_p1),
    .dout(mul_ln269_28_fu_1541_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1089(
    .din0(mul_ln269_15_fu_1553_p0),
    .din1(mul_ln269_15_fu_1553_p1),
    .dout(mul_ln269_15_fu_1553_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1090(
    .din0(mul_ln269_29_fu_1597_p0),
    .din1(mul_ln269_29_fu_1597_p1),
    .dout(mul_ln269_29_fu_1597_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1091(
    .din0(mul_ln268_30_fu_1601_p0),
    .din1(mul_ln268_30_fu_1601_p1),
    .dout(mul_ln268_30_fu_1601_p2)
);

receiver_mul_24s_18s_40_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 40 ))
mul_24s_18s_40_1_1_U1092(
    .din0(mul_ln269_31_fu_1605_p0),
    .din1(mul_ln269_31_fu_1605_p1),
    .dout(mul_ln269_31_fu_1605_p2)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1093(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1689_p0),
    .din1(matched_Q_12_q1),
    .din2(mul_ln268_reg_2096),
    .ce(1'b1),
    .dout(grp_fu_1689_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1094(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1696_p0),
    .din1(matched_I_12_q1),
    .din2(mul_ln269_1_reg_2101),
    .ce(1'b1),
    .dout(grp_fu_1696_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1095(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1703_p0),
    .din1(matched_I_12_q0),
    .din2(mul_ln269_16_reg_2143),
    .ce(1'b1),
    .dout(grp_fu_1703_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1096(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1710_p0),
    .din1(matched_Q_12_q0),
    .din2(mul_ln269_2_reg_2126),
    .ce(1'b1),
    .dout(grp_fu_1710_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1097(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1717_p0),
    .din1(matched_I_12_q1),
    .din2(mul_ln269_17_reg_2202),
    .ce(1'b1),
    .dout(grp_fu_1717_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1098(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1724_p0),
    .din1(matched_I_12_q0),
    .din2(mul_ln269_18_reg_2207),
    .ce(1'b1),
    .dout(grp_fu_1724_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1099(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1731_p0),
    .din1(matched_Q_12_q1),
    .din2(mul_ln269_3_reg_2180),
    .ce(1'b1),
    .dout(grp_fu_1731_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1738_p0),
    .din1(matched_Q_12_q0),
    .din2(mul_ln269_4_reg_2185),
    .ce(1'b1),
    .dout(grp_fu_1738_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1745_p0),
    .din1(matched_I_12_q1),
    .din2(mul_ln269_19_reg_2298),
    .ce(1'b1),
    .dout(grp_fu_1745_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1752_p0),
    .din1(matched_I_12_q0),
    .din2(mul_ln269_20_reg_2303),
    .ce(1'b1),
    .dout(grp_fu_1752_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1759_p0),
    .din1(matched_Q_12_q1),
    .din2(mul_ln269_5_reg_2276),
    .ce(1'b1),
    .dout(grp_fu_1759_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1766_p0),
    .din1(matched_Q_12_q0),
    .din2(mul_ln269_6_reg_2281),
    .ce(1'b1),
    .dout(grp_fu_1766_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1773_p0),
    .din1(matched_I_12_q1),
    .din2(mul_ln269_21_reg_2362),
    .ce(1'b1),
    .dout(grp_fu_1773_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1780_p0),
    .din1(matched_I_12_q0),
    .din2(mul_ln269_22_reg_2367),
    .ce(1'b1),
    .dout(grp_fu_1780_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1787_p0),
    .din1(matched_Q_12_q1),
    .din2(mul_ln269_7_reg_2340),
    .ce(1'b1),
    .dout(grp_fu_1787_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1794_p0),
    .din1(matched_Q_12_q0),
    .din2(mul_ln269_8_reg_2345),
    .ce(1'b1),
    .dout(grp_fu_1794_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1801_p0),
    .din1(matched_I_12_q1),
    .din2(mul_ln269_23_reg_2426),
    .ce(1'b1),
    .dout(grp_fu_1801_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1808_p0),
    .din1(matched_I_12_q0),
    .din2(mul_ln269_24_reg_2431),
    .ce(1'b1),
    .dout(grp_fu_1808_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1815_p0),
    .din1(matched_Q_12_q1),
    .din2(mul_ln269_9_reg_2404),
    .ce(1'b1),
    .dout(grp_fu_1815_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1822_p0),
    .din1(matched_Q_12_q0),
    .din2(mul_ln269_10_reg_2409),
    .ce(1'b1),
    .dout(grp_fu_1822_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1829_p0),
    .din1(matched_I_12_q1),
    .din2(mul_ln269_25_reg_2490),
    .ce(1'b1),
    .dout(grp_fu_1829_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1836_p0),
    .din1(matched_I_12_q0),
    .din2(mul_ln269_26_reg_2495),
    .ce(1'b1),
    .dout(grp_fu_1836_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1843_p0),
    .din1(matched_Q_12_q1),
    .din2(mul_ln269_11_reg_2463),
    .ce(1'b1),
    .dout(grp_fu_1843_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1850_p0),
    .din1(matched_Q_12_q0),
    .din2(mul_ln269_12_reg_2468),
    .ce(1'b1),
    .dout(grp_fu_1850_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1857_p0),
    .din1(matched_I_12_q1),
    .din2(mul_ln269_27_reg_2534),
    .ce(1'b1),
    .dout(grp_fu_1857_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1864_p0),
    .din1(matched_I_12_q0),
    .din2(mul_ln269_28_reg_2539),
    .ce(1'b1),
    .dout(grp_fu_1864_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1871_p0),
    .din1(matched_Q_12_q1),
    .din2(mul_ln269_13_reg_2512),
    .ce(1'b1),
    .dout(grp_fu_1871_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1878_p0),
    .din1(matched_Q_12_q0),
    .din2(mul_ln269_14_reg_2517),
    .ce(1'b1),
    .dout(grp_fu_1878_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1885_p0),
    .din1(matched_I_12_q1),
    .din2(mul_ln269_29_reg_2561),
    .ce(1'b1),
    .dout(grp_fu_1885_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1892_p0),
    .din1(matched_Q_12_q1),
    .din2(mul_ln269_15_reg_2556),
    .ce(1'b1),
    .dout(grp_fu_1892_p3)
);

receiver_mac_mulsub_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_mulsub_24s_18s_40s_40_4_1_U1123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1899_p0),
    .din1(matched_Q_12_q0),
    .din2(mul_ln268_30_reg_2566),
    .ce(1'b1),
    .dout(grp_fu_1899_p3)
);

receiver_mac_muladd_24s_18s_40s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 40 ),
    .dout_WIDTH( 40 ))
mac_muladd_24s_18s_40s_40_4_1_U1124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1906_p0),
    .din1(matched_I_12_q0),
    .din2(mul_ln269_31_reg_2571),
    .ce(1'b1),
    .dout(grp_fu_1906_p3)
);

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_160 <= 13'd236;
    end else if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        i_fu_160 <= add_ln270_fu_1461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_156 <= 8'd0;
    end else if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        j_fu_156 <= add_ln264_15_fu_1466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln264_fu_887_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_load_reg_2009 <= ap_sig_allocacmp_i_load;
        lshr_ln263_1_reg_2014 <= {{ap_sig_allocacmp_i_load[12:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln264_reg_2005 <= icmp_ln264_fu_887_p2;
        j_1_reg_1999 <= ap_sig_allocacmp_j_1;
        mul_ln269_13_reg_2512 <= mul_ln269_13_fu_1481_p2;
        mul_ln269_14_reg_2517 <= mul_ln269_14_fu_1485_p2;
        mul_ln269_27_reg_2534 <= mul_ln269_27_fu_1537_p2;
        mul_ln269_28_reg_2539 <= mul_ln269_28_fu_1541_p2;
        sext_ln268_17_reg_2522 <= sext_ln268_17_fu_1489_p1;
        sext_ln268_18_reg_2528 <= sext_ln268_18_fu_1493_p1;
        sext_ln268_2_cast_reg_1927 <= sext_ln268_2_cast_fu_866_p1;
        sext_ln268_32_reg_2544 <= sext_ln268_32_fu_1545_p1;
        sext_ln268_33_reg_2550 <= sext_ln268_33_fu_1549_p1;
        sext_ln268_cast_reg_1963 <= sext_ln268_cast_fu_870_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln268_30_reg_2566 <= mul_ln268_30_fu_1601_p2;
        mul_ln269_15_reg_2556 <= mul_ln269_15_fu_1553_p2;
        mul_ln269_29_reg_2561 <= mul_ln269_29_fu_1597_p2;
        mul_ln269_31_reg_2571 <= mul_ln269_31_fu_1605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln268_reg_2096 <= mul_ln268_fu_962_p2;
        mul_ln269_16_reg_2143 <= mul_ln269_16_fu_1004_p2;
        mul_ln269_1_reg_2101 <= mul_ln269_1_fu_966_p2;
        mul_ln269_2_reg_2126 <= mul_ln269_2_fu_992_p2;
        sext_ln268_20_reg_2148 <= sext_ln268_20_fu_1008_p1;
        sext_ln268_21_reg_2154 <= sext_ln268_21_fu_1012_p1;
        sext_ln268_5_reg_2131 <= sext_ln268_5_fu_996_p1;
        sext_ln268_6_reg_2137 <= sext_ln268_6_fu_1000_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_ln269_10_reg_2409 <= mul_ln269_10_fu_1299_p2;
        mul_ln269_23_reg_2426 <= mul_ln269_23_fu_1351_p2;
        mul_ln269_24_reg_2431 <= mul_ln269_24_fu_1355_p2;
        mul_ln269_9_reg_2404 <= mul_ln269_9_fu_1295_p2;
        sext_ln268_13_reg_2414 <= sext_ln268_13_fu_1303_p1;
        sext_ln268_14_reg_2420 <= sext_ln268_14_fu_1307_p1;
        sext_ln268_28_reg_2436 <= sext_ln268_28_fu_1359_p1;
        sext_ln268_29_reg_2442 <= sext_ln268_29_fu_1363_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_ln269_11_reg_2463 <= mul_ln269_11_fu_1389_p2;
        mul_ln269_12_reg_2468 <= mul_ln269_12_fu_1393_p2;
        mul_ln269_25_reg_2490 <= mul_ln269_25_fu_1445_p2;
        mul_ln269_26_reg_2495 <= mul_ln269_26_fu_1449_p2;
        sext_ln268_15_reg_2473 <= sext_ln268_15_fu_1397_p1;
        sext_ln268_16_reg_2479 <= sext_ln268_16_fu_1401_p1;
        sext_ln268_30_reg_2500 <= sext_ln268_30_fu_1453_p1;
        sext_ln268_31_reg_2506 <= sext_ln268_31_fu_1457_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln269_17_reg_2202 <= mul_ln269_17_fu_1054_p2;
        mul_ln269_18_reg_2207 <= mul_ln269_18_fu_1058_p2;
        mul_ln269_3_reg_2180 <= mul_ln269_3_fu_1038_p2;
        mul_ln269_4_reg_2185 <= mul_ln269_4_fu_1042_p2;
        sext_ln268_22_reg_2212 <= sext_ln268_22_fu_1062_p1;
        sext_ln268_23_reg_2218 <= sext_ln268_23_fu_1066_p1;
        sext_ln268_7_reg_2190 <= sext_ln268_7_fu_1046_p1;
        sext_ln268_8_reg_2196 <= sext_ln268_8_fu_1050_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_ln269_19_reg_2298 <= mul_ln269_19_fu_1163_p2;
        mul_ln269_20_reg_2303 <= mul_ln269_20_fu_1167_p2;
        mul_ln269_5_reg_2276 <= mul_ln269_5_fu_1127_p2;
        mul_ln269_6_reg_2281 <= mul_ln269_6_fu_1131_p2;
        sext_ln268_10_reg_2292 <= sext_ln268_10_fu_1139_p1;
        sext_ln268_24_reg_2308 <= sext_ln268_24_fu_1171_p1;
        sext_ln268_25_reg_2314 <= sext_ln268_25_fu_1175_p1;
        sext_ln268_9_reg_2286 <= sext_ln268_9_fu_1135_p1;
        zext_ln263_reg_2224[0] <= zext_ln263_fu_1077_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_ln269_21_reg_2362 <= mul_ln269_21_fu_1257_p2;
        mul_ln269_22_reg_2367 <= mul_ln269_22_fu_1261_p2;
        mul_ln269_7_reg_2340 <= mul_ln269_7_fu_1201_p2;
        mul_ln269_8_reg_2345 <= mul_ln269_8_fu_1205_p2;
        sext_ln268_11_reg_2350 <= sext_ln268_11_fu_1209_p1;
        sext_ln268_12_reg_2356 <= sext_ln268_12_fu_1213_p1;
        sext_ln268_26_reg_2372 <= sext_ln268_26_fu_1265_p1;
        sext_ln268_27_reg_2378 <= sext_ln268_27_fu_1269_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sext_ln268_19_reg_2090 <= sext_ln268_19_fu_958_p1;
        sext_ln268_1_reg_2052 <= sext_ln268_1_fu_924_p1;
        sext_ln268_3_reg_2058 <= sext_ln268_3_fu_928_p1;
        sext_ln268_4_reg_2084 <= sext_ln268_4_fu_954_p1;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd0) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 13'd236;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_160;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 8'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_156;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            matched_I_12_address0 = zext_ln268_14_fu_1383_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            matched_I_12_address0 = zext_ln268_12_fu_1289_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            matched_I_12_address0 = zext_ln268_10_fu_1195_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            matched_I_12_address0 = zext_ln268_8_fu_1121_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matched_I_12_address0 = zext_ln268_6_fu_1032_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matched_I_12_address0 = zext_ln268_4_fu_986_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matched_I_12_address0 = zext_ln268_2_fu_948_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matched_I_12_address0 = zext_ln268_fu_918_p1;
        end else begin
            matched_I_12_address0 = 'bx;
        end
    end else begin
        matched_I_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            matched_I_12_address1 = zext_ln268_13_fu_1372_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            matched_I_12_address1 = zext_ln268_11_fu_1278_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            matched_I_12_address1 = zext_ln268_9_fu_1184_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            matched_I_12_address1 = zext_ln268_7_fu_1110_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matched_I_12_address1 = zext_ln268_5_fu_1021_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matched_I_12_address1 = zext_ln268_3_fu_975_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matched_I_12_address1 = zext_ln268_1_fu_937_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matched_I_12_address1 = zext_ln263_1_fu_906_p1;
        end else begin
            matched_I_12_address1 = 'bx;
        end
    end else begin
        matched_I_12_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        matched_I_12_ce0 = 1'b1;
    end else begin
        matched_I_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        matched_I_12_ce1 = 1'b1;
    end else begin
        matched_I_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            matched_Q_12_address0 = zext_ln268_14_fu_1383_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            matched_Q_12_address0 = zext_ln268_12_fu_1289_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            matched_Q_12_address0 = zext_ln268_10_fu_1195_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            matched_Q_12_address0 = zext_ln268_8_fu_1121_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matched_Q_12_address0 = zext_ln268_6_fu_1032_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matched_Q_12_address0 = zext_ln268_4_fu_986_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matched_Q_12_address0 = zext_ln268_2_fu_948_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matched_Q_12_address0 = zext_ln268_fu_918_p1;
        end else begin
            matched_Q_12_address0 = 'bx;
        end
    end else begin
        matched_Q_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            matched_Q_12_address1 = zext_ln268_13_fu_1372_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            matched_Q_12_address1 = zext_ln268_11_fu_1278_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            matched_Q_12_address1 = zext_ln268_9_fu_1184_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            matched_Q_12_address1 = zext_ln268_7_fu_1110_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matched_Q_12_address1 = zext_ln268_5_fu_1021_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matched_Q_12_address1 = zext_ln268_3_fu_975_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matched_Q_12_address1 = zext_ln268_1_fu_937_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matched_Q_12_address1 = zext_ln263_1_fu_906_p1;
        end else begin
            matched_Q_12_address1 = 'bx;
        end
    end else begin
        matched_Q_12_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        matched_Q_12_ce0 = 1'b1;
    end else begin
        matched_Q_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        matched_Q_12_ce1 = 1'b1;
    end else begin
        matched_Q_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        result_I_0_ce0 = 1'b1;
    end else begin
        result_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        result_I_0_we0 = 1'b1;
    end else begin
        result_I_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_I_10_ce0 = 1'b1;
    end else begin
        result_I_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_I_10_we0 = 1'b1;
    end else begin
        result_I_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_I_11_ce0 = 1'b1;
    end else begin
        result_I_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_I_11_we0 = 1'b1;
    end else begin
        result_I_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_I_12_ce0 = 1'b1;
    end else begin
        result_I_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_I_12_we0 = 1'b1;
    end else begin
        result_I_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_I_13_ce0 = 1'b1;
    end else begin
        result_I_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_I_13_we0 = 1'b1;
    end else begin
        result_I_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_I_14_ce0 = 1'b1;
    end else begin
        result_I_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_I_14_we0 = 1'b1;
    end else begin
        result_I_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_I_15_ce0 = 1'b1;
    end else begin
        result_I_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_I_15_we0 = 1'b1;
    end else begin
        result_I_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        result_I_1_ce0 = 1'b1;
    end else begin
        result_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        result_I_1_we0 = 1'b1;
    end else begin
        result_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        result_I_2_ce0 = 1'b1;
    end else begin
        result_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        result_I_2_we0 = 1'b1;
    end else begin
        result_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        result_I_3_ce0 = 1'b1;
    end else begin
        result_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        result_I_3_we0 = 1'b1;
    end else begin
        result_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        result_I_4_ce0 = 1'b1;
    end else begin
        result_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        result_I_4_we0 = 1'b1;
    end else begin
        result_I_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        result_I_5_ce0 = 1'b1;
    end else begin
        result_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        result_I_5_we0 = 1'b1;
    end else begin
        result_I_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        result_I_6_ce0 = 1'b1;
    end else begin
        result_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        result_I_6_we0 = 1'b1;
    end else begin
        result_I_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        result_I_7_ce0 = 1'b1;
    end else begin
        result_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        result_I_7_we0 = 1'b1;
    end else begin
        result_I_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_I_8_ce0 = 1'b1;
    end else begin
        result_I_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_I_8_we0 = 1'b1;
    end else begin
        result_I_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_I_9_ce0 = 1'b1;
    end else begin
        result_I_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_I_9_we0 = 1'b1;
    end else begin
        result_I_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        result_Q_0_ce0 = 1'b1;
    end else begin
        result_Q_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        result_Q_0_we0 = 1'b1;
    end else begin
        result_Q_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_Q_10_ce0 = 1'b1;
    end else begin
        result_Q_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_Q_10_we0 = 1'b1;
    end else begin
        result_Q_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_Q_11_ce0 = 1'b1;
    end else begin
        result_Q_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_Q_11_we0 = 1'b1;
    end else begin
        result_Q_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_Q_12_ce0 = 1'b1;
    end else begin
        result_Q_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_Q_12_we0 = 1'b1;
    end else begin
        result_Q_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_Q_13_ce0 = 1'b1;
    end else begin
        result_Q_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        result_Q_13_we0 = 1'b1;
    end else begin
        result_Q_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_Q_14_ce0 = 1'b1;
    end else begin
        result_Q_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_Q_14_we0 = 1'b1;
    end else begin
        result_Q_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_Q_15_ce0 = 1'b1;
    end else begin
        result_Q_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_Q_15_we0 = 1'b1;
    end else begin
        result_Q_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        result_Q_1_ce0 = 1'b1;
    end else begin
        result_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        result_Q_1_we0 = 1'b1;
    end else begin
        result_Q_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        result_Q_2_ce0 = 1'b1;
    end else begin
        result_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        result_Q_2_we0 = 1'b1;
    end else begin
        result_Q_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        result_Q_3_ce0 = 1'b1;
    end else begin
        result_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        result_Q_3_we0 = 1'b1;
    end else begin
        result_Q_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        result_Q_4_ce0 = 1'b1;
    end else begin
        result_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        result_Q_4_we0 = 1'b1;
    end else begin
        result_Q_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        result_Q_5_ce0 = 1'b1;
    end else begin
        result_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        result_Q_5_we0 = 1'b1;
    end else begin
        result_Q_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        result_Q_6_ce0 = 1'b1;
    end else begin
        result_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        result_Q_6_we0 = 1'b1;
    end else begin
        result_Q_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        result_Q_7_ce0 = 1'b1;
    end else begin
        result_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln264_reg_2005 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        result_Q_7_we0 = 1'b1;
    end else begin
        result_Q_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_Q_8_ce0 = 1'b1;
    end else begin
        result_Q_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_Q_8_we0 = 1'b1;
    end else begin
        result_Q_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_Q_9_ce0 = 1'b1;
    end else begin
        result_Q_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_Q_9_we0 = 1'b1;
    end else begin
        result_Q_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln264_10_fu_1190_p2 = (lshr_ln263_1_reg_2014 + 8'd11);

assign add_ln264_11_fu_1273_p2 = (lshr_ln263_1_reg_2014 + 8'd12);

assign add_ln264_12_fu_1284_p2 = (lshr_ln263_1_reg_2014 + 8'd13);

assign add_ln264_13_fu_1367_p2 = (lshr_ln263_1_reg_2014 + 8'd14);

assign add_ln264_14_fu_1378_p2 = (lshr_ln263_1_reg_2014 + 8'd15);

assign add_ln264_15_fu_1466_p2 = (j_1_reg_1999 + 8'd16);

assign add_ln264_1_fu_932_p2 = (lshr_ln263_1_reg_2014 + 8'd2);

assign add_ln264_2_fu_943_p2 = (lshr_ln263_1_reg_2014 + 8'd3);

assign add_ln264_3_fu_970_p2 = (lshr_ln263_1_reg_2014 + 8'd4);

assign add_ln264_4_fu_981_p2 = (lshr_ln263_1_reg_2014 + 8'd5);

assign add_ln264_5_fu_1016_p2 = (lshr_ln263_1_reg_2014 + 8'd6);

assign add_ln264_6_fu_1027_p2 = (lshr_ln263_1_reg_2014 + 8'd7);

assign add_ln264_7_fu_1105_p2 = (lshr_ln263_1_reg_2014 + 8'd8);

assign add_ln264_8_fu_1116_p2 = (lshr_ln263_1_reg_2014 + 8'd9);

assign add_ln264_9_fu_1179_p2 = (lshr_ln263_1_reg_2014 + 8'd10);

assign add_ln264_fu_912_p2 = (lshr_ln263_1_fu_896_p4 + 8'd1);

assign add_ln270_fu_1461_p2 = (i_load_reg_2009 + 13'd512);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign grp_fu_1689_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1696_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1703_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1710_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1717_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1724_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1731_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1738_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1745_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1752_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1759_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1766_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1773_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1780_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1787_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1794_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1801_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1808_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1815_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1822_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1829_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1836_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1843_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1850_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1857_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1864_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1871_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1878_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1885_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1892_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1899_p0 = sext_ln268_2_cast_reg_1927;

assign grp_fu_1906_p0 = sext_ln268_2_cast_reg_1927;

assign icmp_ln264_fu_887_p2 = ((ap_sig_allocacmp_j_1 < 8'd224) ? 1'b1 : 1'b0);

assign lshr_ln263_1_fu_896_p4 = {{ap_sig_allocacmp_i_load[12:5]}};

assign mul_ln268_30_fu_1601_p0 = sext_ln268_cast_reg_1963;

assign mul_ln268_30_fu_1601_p1 = sext_ln268_18_reg_2528;

assign mul_ln268_fu_962_p0 = sext_ln268_cast_reg_1963;

assign mul_ln268_fu_962_p1 = sext_ln268_1_reg_2052;

assign mul_ln269_10_fu_1299_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_10_fu_1299_p1 = sext_ln268_12_reg_2356;

assign mul_ln269_11_fu_1389_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_11_fu_1389_p1 = sext_ln268_13_reg_2414;

assign mul_ln269_12_fu_1393_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_12_fu_1393_p1 = sext_ln268_14_reg_2420;

assign mul_ln269_13_fu_1481_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_13_fu_1481_p1 = sext_ln268_15_reg_2473;

assign mul_ln269_14_fu_1485_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_14_fu_1485_p1 = sext_ln268_16_reg_2479;

assign mul_ln269_15_fu_1553_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_15_fu_1553_p1 = sext_ln268_17_reg_2522;

assign mul_ln269_16_fu_1004_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_16_fu_1004_p1 = sext_ln268_19_reg_2090;

assign mul_ln269_17_fu_1054_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_17_fu_1054_p1 = sext_ln268_20_reg_2148;

assign mul_ln269_18_fu_1058_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_18_fu_1058_p1 = sext_ln268_21_reg_2154;

assign mul_ln269_19_fu_1163_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_19_fu_1163_p1 = sext_ln268_22_reg_2212;

assign mul_ln269_1_fu_966_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_1_fu_966_p1 = sext_ln268_3_reg_2058;

assign mul_ln269_20_fu_1167_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_20_fu_1167_p1 = sext_ln268_23_reg_2218;

assign mul_ln269_21_fu_1257_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_21_fu_1257_p1 = sext_ln268_24_reg_2308;

assign mul_ln269_22_fu_1261_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_22_fu_1261_p1 = sext_ln268_25_reg_2314;

assign mul_ln269_23_fu_1351_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_23_fu_1351_p1 = sext_ln268_26_reg_2372;

assign mul_ln269_24_fu_1355_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_24_fu_1355_p1 = sext_ln268_27_reg_2378;

assign mul_ln269_25_fu_1445_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_25_fu_1445_p1 = sext_ln268_28_reg_2436;

assign mul_ln269_26_fu_1449_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_26_fu_1449_p1 = sext_ln268_29_reg_2442;

assign mul_ln269_27_fu_1537_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_27_fu_1537_p1 = sext_ln268_30_reg_2500;

assign mul_ln269_28_fu_1541_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_28_fu_1541_p1 = sext_ln268_31_reg_2506;

assign mul_ln269_29_fu_1597_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_29_fu_1597_p1 = sext_ln268_32_reg_2544;

assign mul_ln269_2_fu_992_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_2_fu_992_p1 = sext_ln268_4_reg_2084;

assign mul_ln269_31_fu_1605_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_31_fu_1605_p1 = sext_ln268_33_reg_2550;

assign mul_ln269_3_fu_1038_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_3_fu_1038_p1 = sext_ln268_5_reg_2131;

assign mul_ln269_4_fu_1042_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_4_fu_1042_p1 = sext_ln268_6_reg_2137;

assign mul_ln269_5_fu_1127_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_5_fu_1127_p1 = sext_ln268_7_reg_2190;

assign mul_ln269_6_fu_1131_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_6_fu_1131_p1 = sext_ln268_8_reg_2196;

assign mul_ln269_7_fu_1201_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_7_fu_1201_p1 = sext_ln268_9_reg_2286;

assign mul_ln269_8_fu_1205_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_8_fu_1205_p1 = sext_ln268_10_reg_2292;

assign mul_ln269_9_fu_1295_p0 = sext_ln268_cast_reg_1963;

assign mul_ln269_9_fu_1295_p1 = sext_ln268_11_reg_2350;

assign result_I_0_address0 = zext_ln263_fu_1077_p1;

assign result_I_0_d0 = {{grp_fu_1689_p3[39:16]}};

assign result_I_10_address0 = zext_ln263_reg_2224;

assign result_I_10_d0 = {{grp_fu_1843_p3[39:16]}};

assign result_I_11_address0 = zext_ln263_reg_2224;

assign result_I_11_d0 = {{grp_fu_1850_p3[39:16]}};

assign result_I_12_address0 = zext_ln263_reg_2224;

assign result_I_12_d0 = {{grp_fu_1871_p3[39:16]}};

assign result_I_13_address0 = zext_ln263_reg_2224;

assign result_I_13_d0 = {{grp_fu_1878_p3[39:16]}};

assign result_I_14_address0 = zext_ln263_reg_2224;

assign result_I_14_d0 = {{grp_fu_1892_p3[39:16]}};

assign result_I_15_address0 = zext_ln263_reg_2224;

assign result_I_15_d0 = {{grp_fu_1899_p3[39:16]}};

assign result_I_1_address0 = zext_ln263_fu_1077_p1;

assign result_I_1_d0 = {{grp_fu_1710_p3[39:16]}};

assign result_I_2_address0 = zext_ln263_reg_2224;

assign result_I_2_d0 = {{grp_fu_1731_p3[39:16]}};

assign result_I_3_address0 = zext_ln263_reg_2224;

assign result_I_3_d0 = {{grp_fu_1738_p3[39:16]}};

assign result_I_4_address0 = zext_ln263_reg_2224;

assign result_I_4_d0 = {{grp_fu_1759_p3[39:16]}};

assign result_I_5_address0 = zext_ln263_reg_2224;

assign result_I_5_d0 = {{grp_fu_1766_p3[39:16]}};

assign result_I_6_address0 = zext_ln263_reg_2224;

assign result_I_6_d0 = {{grp_fu_1787_p3[39:16]}};

assign result_I_7_address0 = zext_ln263_reg_2224;

assign result_I_7_d0 = {{grp_fu_1794_p3[39:16]}};

assign result_I_8_address0 = zext_ln263_reg_2224;

assign result_I_8_d0 = {{grp_fu_1815_p3[39:16]}};

assign result_I_9_address0 = zext_ln263_reg_2224;

assign result_I_9_d0 = {{grp_fu_1822_p3[39:16]}};

assign result_Q_0_address0 = zext_ln263_fu_1077_p1;

assign result_Q_0_d0 = {{grp_fu_1696_p3[39:16]}};

assign result_Q_10_address0 = zext_ln263_reg_2224;

assign result_Q_10_d0 = {{grp_fu_1829_p3[39:16]}};

assign result_Q_11_address0 = zext_ln263_reg_2224;

assign result_Q_11_d0 = {{grp_fu_1836_p3[39:16]}};

assign result_Q_12_address0 = zext_ln263_reg_2224;

assign result_Q_12_d0 = {{grp_fu_1857_p3[39:16]}};

assign result_Q_13_address0 = zext_ln263_reg_2224;

assign result_Q_13_d0 = {{grp_fu_1864_p3[39:16]}};

assign result_Q_14_address0 = zext_ln263_reg_2224;

assign result_Q_14_d0 = {{grp_fu_1885_p3[39:16]}};

assign result_Q_15_address0 = zext_ln263_reg_2224;

assign result_Q_15_d0 = {{grp_fu_1906_p3[39:16]}};

assign result_Q_1_address0 = zext_ln263_fu_1077_p1;

assign result_Q_1_d0 = {{grp_fu_1703_p3[39:16]}};

assign result_Q_2_address0 = zext_ln263_reg_2224;

assign result_Q_2_d0 = {{grp_fu_1717_p3[39:16]}};

assign result_Q_3_address0 = zext_ln263_reg_2224;

assign result_Q_3_d0 = {{grp_fu_1724_p3[39:16]}};

assign result_Q_4_address0 = zext_ln263_reg_2224;

assign result_Q_4_d0 = {{grp_fu_1745_p3[39:16]}};

assign result_Q_5_address0 = zext_ln263_reg_2224;

assign result_Q_5_d0 = {{grp_fu_1752_p3[39:16]}};

assign result_Q_6_address0 = zext_ln263_reg_2224;

assign result_Q_6_d0 = {{grp_fu_1773_p3[39:16]}};

assign result_Q_7_address0 = zext_ln263_reg_2224;

assign result_Q_7_d0 = {{grp_fu_1780_p3[39:16]}};

assign result_Q_8_address0 = zext_ln263_reg_2224;

assign result_Q_8_d0 = {{grp_fu_1801_p3[39:16]}};

assign result_Q_9_address0 = zext_ln263_reg_2224;

assign result_Q_9_d0 = {{grp_fu_1808_p3[39:16]}};

assign sext_ln268_10_fu_1139_p1 = $signed(matched_I_12_q0);

assign sext_ln268_11_fu_1209_p1 = $signed(matched_I_12_q1);

assign sext_ln268_12_fu_1213_p1 = $signed(matched_I_12_q0);

assign sext_ln268_13_fu_1303_p1 = $signed(matched_I_12_q1);

assign sext_ln268_14_fu_1307_p1 = $signed(matched_I_12_q0);

assign sext_ln268_15_fu_1397_p1 = $signed(matched_I_12_q1);

assign sext_ln268_16_fu_1401_p1 = $signed(matched_I_12_q0);

assign sext_ln268_17_fu_1489_p1 = $signed(matched_I_12_q1);

assign sext_ln268_18_fu_1493_p1 = $signed(matched_I_12_q0);

assign sext_ln268_19_fu_958_p1 = $signed(matched_Q_12_q0);

assign sext_ln268_1_fu_924_p1 = $signed(matched_I_12_q1);

assign sext_ln268_20_fu_1008_p1 = $signed(matched_Q_12_q1);

assign sext_ln268_21_fu_1012_p1 = $signed(matched_Q_12_q0);

assign sext_ln268_22_fu_1062_p1 = $signed(matched_Q_12_q1);

assign sext_ln268_23_fu_1066_p1 = $signed(matched_Q_12_q0);

assign sext_ln268_24_fu_1171_p1 = $signed(matched_Q_12_q1);

assign sext_ln268_25_fu_1175_p1 = $signed(matched_Q_12_q0);

assign sext_ln268_26_fu_1265_p1 = $signed(matched_Q_12_q1);

assign sext_ln268_27_fu_1269_p1 = $signed(matched_Q_12_q0);

assign sext_ln268_28_fu_1359_p1 = $signed(matched_Q_12_q1);

assign sext_ln268_29_fu_1363_p1 = $signed(matched_Q_12_q0);

assign sext_ln268_2_cast_fu_866_p1 = $signed(sext_ln268_2);

assign sext_ln268_30_fu_1453_p1 = $signed(matched_Q_12_q1);

assign sext_ln268_31_fu_1457_p1 = $signed(matched_Q_12_q0);

assign sext_ln268_32_fu_1545_p1 = $signed(matched_Q_12_q1);

assign sext_ln268_33_fu_1549_p1 = $signed(matched_Q_12_q0);

assign sext_ln268_3_fu_928_p1 = $signed(matched_Q_12_q1);

assign sext_ln268_4_fu_954_p1 = $signed(matched_I_12_q0);

assign sext_ln268_5_fu_996_p1 = $signed(matched_I_12_q1);

assign sext_ln268_6_fu_1000_p1 = $signed(matched_I_12_q0);

assign sext_ln268_7_fu_1046_p1 = $signed(matched_I_12_q1);

assign sext_ln268_8_fu_1050_p1 = $signed(matched_I_12_q0);

assign sext_ln268_9_fu_1135_p1 = $signed(matched_I_12_q1);

assign sext_ln268_cast_fu_870_p1 = $signed(sext_ln268);

assign tmp_fu_1070_p3 = j_1_reg_1999[32'd4];

assign zext_ln263_1_fu_906_p1 = lshr_ln263_1_fu_896_p4;

assign zext_ln263_fu_1077_p1 = tmp_fu_1070_p3;

assign zext_ln268_10_fu_1195_p1 = add_ln264_10_fu_1190_p2;

assign zext_ln268_11_fu_1278_p1 = add_ln264_11_fu_1273_p2;

assign zext_ln268_12_fu_1289_p1 = add_ln264_12_fu_1284_p2;

assign zext_ln268_13_fu_1372_p1 = add_ln264_13_fu_1367_p2;

assign zext_ln268_14_fu_1383_p1 = add_ln264_14_fu_1378_p2;

assign zext_ln268_1_fu_937_p1 = add_ln264_1_fu_932_p2;

assign zext_ln268_2_fu_948_p1 = add_ln264_2_fu_943_p2;

assign zext_ln268_3_fu_975_p1 = add_ln264_3_fu_970_p2;

assign zext_ln268_4_fu_986_p1 = add_ln264_4_fu_981_p2;

assign zext_ln268_5_fu_1021_p1 = add_ln264_5_fu_1016_p2;

assign zext_ln268_6_fu_1032_p1 = add_ln264_6_fu_1027_p2;

assign zext_ln268_7_fu_1110_p1 = add_ln264_7_fu_1105_p2;

assign zext_ln268_8_fu_1121_p1 = add_ln264_8_fu_1116_p2;

assign zext_ln268_9_fu_1184_p1 = add_ln264_9_fu_1179_p2;

assign zext_ln268_fu_918_p1 = add_ln264_fu_912_p2;

always @ (posedge ap_clk) begin
    zext_ln263_reg_2224[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_264_22
