// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_118_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        filt_2_I_0_0_reload,
        filt_2_I_1_02_reload,
        filt_2_I_2_04_reload,
        filt_2_I_0_2_09_reload,
        filt_2_I_1_2_010_reload,
        filt_2_I_2_2_011_reload,
        filt_2_I_0_4_015_reload,
        filt_2_I_1_4_016_reload,
        filt_2_I_2_4_017_reload,
        filt_2_I_0_6_021_reload,
        filt_2_I_1_6_022_reload,
        filt_2_I_2_6_023_reload,
        filt_2_I_0_1_06_reload,
        filt_2_I_1_1_07_reload,
        filt_2_I_2_1_08_reload,
        filt_2_I_0_3_012_reload,
        filt_2_I_1_3_013_reload,
        filt_2_I_2_3_014_reload,
        filt_2_I_0_5_018_reload,
        filt_2_I_1_5_019_reload,
        filt_2_I_2_5_020_reload,
        filt_2_I_0_7_024_reload,
        filt_2_I_1_7_025_reload,
        filt_2_I_2_7_026_reload,
        filt_3_I_address0,
        filt_3_I_ce0,
        filt_3_I_we0,
        filt_3_I_d0,
        filt_2_Q_0_0_reload,
        filt_2_Q_1_028_reload,
        filt_2_Q_2_030_reload,
        filt_2_Q_0_2_035_reload,
        filt_2_Q_1_2_036_reload,
        filt_2_Q_2_2_037_reload,
        filt_2_Q_0_4_041_reload,
        filt_2_Q_1_4_042_reload,
        filt_2_Q_2_4_043_reload,
        filt_2_Q_0_6_047_reload,
        filt_2_Q_1_6_048_reload,
        filt_2_Q_2_6_049_reload,
        filt_2_Q_0_1_032_reload,
        filt_2_Q_1_1_033_reload,
        filt_2_Q_2_1_034_reload,
        filt_2_Q_0_3_038_reload,
        filt_2_Q_1_3_039_reload,
        filt_2_Q_2_3_040_reload,
        filt_2_Q_0_5_044_reload,
        filt_2_Q_1_5_045_reload,
        filt_2_Q_2_5_046_reload,
        filt_2_Q_0_7_050_reload,
        filt_2_Q_1_7_051_reload,
        filt_2_Q_2_7_052_reload,
        filt_3_Q_address0,
        filt_3_Q_ce0,
        filt_3_Q_we0,
        filt_3_Q_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [17:0] filt_2_I_0_0_reload;
input  [17:0] filt_2_I_1_02_reload;
input  [17:0] filt_2_I_2_04_reload;
input  [17:0] filt_2_I_0_2_09_reload;
input  [17:0] filt_2_I_1_2_010_reload;
input  [17:0] filt_2_I_2_2_011_reload;
input  [17:0] filt_2_I_0_4_015_reload;
input  [17:0] filt_2_I_1_4_016_reload;
input  [17:0] filt_2_I_2_4_017_reload;
input  [17:0] filt_2_I_0_6_021_reload;
input  [17:0] filt_2_I_1_6_022_reload;
input  [17:0] filt_2_I_2_6_023_reload;
input  [17:0] filt_2_I_0_1_06_reload;
input  [17:0] filt_2_I_1_1_07_reload;
input  [17:0] filt_2_I_2_1_08_reload;
input  [17:0] filt_2_I_0_3_012_reload;
input  [17:0] filt_2_I_1_3_013_reload;
input  [17:0] filt_2_I_2_3_014_reload;
input  [17:0] filt_2_I_0_5_018_reload;
input  [17:0] filt_2_I_1_5_019_reload;
input  [17:0] filt_2_I_2_5_020_reload;
input  [17:0] filt_2_I_0_7_024_reload;
input  [17:0] filt_2_I_1_7_025_reload;
input  [17:0] filt_2_I_2_7_026_reload;
output  [3:0] filt_3_I_address0;
output   filt_3_I_ce0;
output   filt_3_I_we0;
output  [17:0] filt_3_I_d0;
input  [17:0] filt_2_Q_0_0_reload;
input  [17:0] filt_2_Q_1_028_reload;
input  [17:0] filt_2_Q_2_030_reload;
input  [17:0] filt_2_Q_0_2_035_reload;
input  [17:0] filt_2_Q_1_2_036_reload;
input  [17:0] filt_2_Q_2_2_037_reload;
input  [17:0] filt_2_Q_0_4_041_reload;
input  [17:0] filt_2_Q_1_4_042_reload;
input  [17:0] filt_2_Q_2_4_043_reload;
input  [17:0] filt_2_Q_0_6_047_reload;
input  [17:0] filt_2_Q_1_6_048_reload;
input  [17:0] filt_2_Q_2_6_049_reload;
input  [17:0] filt_2_Q_0_1_032_reload;
input  [17:0] filt_2_Q_1_1_033_reload;
input  [17:0] filt_2_Q_2_1_034_reload;
input  [17:0] filt_2_Q_0_3_038_reload;
input  [17:0] filt_2_Q_1_3_039_reload;
input  [17:0] filt_2_Q_2_3_040_reload;
input  [17:0] filt_2_Q_0_5_044_reload;
input  [17:0] filt_2_Q_1_5_045_reload;
input  [17:0] filt_2_Q_2_5_046_reload;
input  [17:0] filt_2_Q_0_7_050_reload;
input  [17:0] filt_2_Q_1_7_051_reload;
input  [17:0] filt_2_Q_2_7_052_reload;
output  [3:0] filt_3_Q_address0;
output   filt_3_Q_ce0;
output   filt_3_Q_we0;
output  [17:0] filt_3_Q_d0;

reg ap_idle;
reg filt_3_I_ce0;
reg filt_3_I_we0;
reg filt_3_Q_ce0;
reg filt_3_Q_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln118_fu_468_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [17:0] tmp_fu_536_p9;
reg   [17:0] tmp_reg_806;
wire    ap_block_pp0_stage0_11001;
wire   [17:0] tmp_1_fu_604_p9;
reg   [17:0] tmp_1_reg_811;
reg   [3:0] lshr_ln5_reg_816;
wire   [17:0] tmp_2_fu_682_p9;
reg   [17:0] tmp_2_reg_821;
wire   [17:0] tmp_3_fu_750_p9;
reg   [17:0] tmp_3_reg_826;
wire   [63:0] zext_ln119_fu_786_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] i_5_fu_142;
wire   [4:0] add_ln118_fu_770_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_i;
wire   [1:0] tmp_s_fu_488_p4;
wire   [1:0] tmp_11_fu_500_p4;
wire   [1:0] tmp_12_fu_512_p4;
wire   [1:0] tmp_13_fu_524_p4;
wire   [17:0] tmp_s_fu_488_p5;
wire   [17:0] tmp_11_fu_500_p5;
wire   [17:0] tmp_12_fu_512_p5;
wire   [17:0] tmp_13_fu_524_p5;
wire   [2:0] empty_fu_474_p1;
wire   [1:0] tmp_14_fu_556_p4;
wire   [1:0] tmp_15_fu_568_p4;
wire   [1:0] tmp_16_fu_580_p4;
wire   [1:0] tmp_17_fu_592_p4;
wire   [17:0] tmp_14_fu_556_p5;
wire   [17:0] tmp_15_fu_568_p5;
wire   [17:0] tmp_16_fu_580_p5;
wire   [17:0] tmp_17_fu_592_p5;
wire   [1:0] tmp_18_fu_634_p4;
wire   [1:0] tmp_19_fu_646_p4;
wire   [1:0] tmp_20_fu_658_p4;
wire   [1:0] tmp_21_fu_670_p4;
wire   [17:0] tmp_18_fu_634_p5;
wire   [17:0] tmp_19_fu_646_p5;
wire   [17:0] tmp_20_fu_658_p5;
wire   [17:0] tmp_21_fu_670_p5;
wire   [1:0] tmp_22_fu_702_p4;
wire   [1:0] tmp_23_fu_714_p4;
wire   [1:0] tmp_24_fu_726_p4;
wire   [1:0] tmp_25_fu_738_p4;
wire   [17:0] tmp_22_fu_702_p5;
wire   [17:0] tmp_23_fu_714_p5;
wire   [17:0] tmp_24_fu_726_p5;
wire   [17:0] tmp_25_fu_738_p5;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U141(
    .din0(filt_2_I_0_0_reload),
    .din1(filt_2_I_1_02_reload),
    .din2(filt_2_I_2_04_reload),
    .din3(tmp_s_fu_488_p4),
    .dout(tmp_s_fu_488_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U142(
    .din0(filt_2_I_0_2_09_reload),
    .din1(filt_2_I_1_2_010_reload),
    .din2(filt_2_I_2_2_011_reload),
    .din3(tmp_11_fu_500_p4),
    .dout(tmp_11_fu_500_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U143(
    .din0(filt_2_I_0_4_015_reload),
    .din1(filt_2_I_1_4_016_reload),
    .din2(filt_2_I_2_4_017_reload),
    .din3(tmp_12_fu_512_p4),
    .dout(tmp_12_fu_512_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U144(
    .din0(filt_2_I_0_6_021_reload),
    .din1(filt_2_I_1_6_022_reload),
    .din2(filt_2_I_2_6_023_reload),
    .din3(tmp_13_fu_524_p4),
    .dout(tmp_13_fu_524_p5)
);

receiver_mux_7_3_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 18 ))
mux_7_3_18_1_1_U145(
    .din0(tmp_s_fu_488_p5),
    .din1(18'd0),
    .din2(tmp_11_fu_500_p5),
    .din3(18'd0),
    .din4(tmp_12_fu_512_p5),
    .din5(18'd0),
    .din6(tmp_13_fu_524_p5),
    .din7(empty_fu_474_p1),
    .dout(tmp_fu_536_p9)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U146(
    .din0(filt_2_I_0_1_06_reload),
    .din1(filt_2_I_1_1_07_reload),
    .din2(filt_2_I_2_1_08_reload),
    .din3(tmp_14_fu_556_p4),
    .dout(tmp_14_fu_556_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U147(
    .din0(filt_2_I_0_3_012_reload),
    .din1(filt_2_I_1_3_013_reload),
    .din2(filt_2_I_2_3_014_reload),
    .din3(tmp_15_fu_568_p4),
    .dout(tmp_15_fu_568_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U148(
    .din0(filt_2_I_0_5_018_reload),
    .din1(filt_2_I_1_5_019_reload),
    .din2(filt_2_I_2_5_020_reload),
    .din3(tmp_16_fu_580_p4),
    .dout(tmp_16_fu_580_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U149(
    .din0(filt_2_I_0_7_024_reload),
    .din1(filt_2_I_1_7_025_reload),
    .din2(filt_2_I_2_7_026_reload),
    .din3(tmp_17_fu_592_p4),
    .dout(tmp_17_fu_592_p5)
);

receiver_mux_7_3_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 18 ))
mux_7_3_18_1_1_U150(
    .din0(tmp_14_fu_556_p5),
    .din1(18'd0),
    .din2(tmp_15_fu_568_p5),
    .din3(18'd0),
    .din4(tmp_16_fu_580_p5),
    .din5(18'd0),
    .din6(tmp_17_fu_592_p5),
    .din7(empty_fu_474_p1),
    .dout(tmp_1_fu_604_p9)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U151(
    .din0(filt_2_Q_0_0_reload),
    .din1(filt_2_Q_1_028_reload),
    .din2(filt_2_Q_2_030_reload),
    .din3(tmp_18_fu_634_p4),
    .dout(tmp_18_fu_634_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U152(
    .din0(filt_2_Q_0_2_035_reload),
    .din1(filt_2_Q_1_2_036_reload),
    .din2(filt_2_Q_2_2_037_reload),
    .din3(tmp_19_fu_646_p4),
    .dout(tmp_19_fu_646_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U153(
    .din0(filt_2_Q_0_4_041_reload),
    .din1(filt_2_Q_1_4_042_reload),
    .din2(filt_2_Q_2_4_043_reload),
    .din3(tmp_20_fu_658_p4),
    .dout(tmp_20_fu_658_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U154(
    .din0(filt_2_Q_0_6_047_reload),
    .din1(filt_2_Q_1_6_048_reload),
    .din2(filt_2_Q_2_6_049_reload),
    .din3(tmp_21_fu_670_p4),
    .dout(tmp_21_fu_670_p5)
);

receiver_mux_7_3_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 18 ))
mux_7_3_18_1_1_U155(
    .din0(tmp_18_fu_634_p5),
    .din1(18'd0),
    .din2(tmp_19_fu_646_p5),
    .din3(18'd0),
    .din4(tmp_20_fu_658_p5),
    .din5(18'd0),
    .din6(tmp_21_fu_670_p5),
    .din7(empty_fu_474_p1),
    .dout(tmp_2_fu_682_p9)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U156(
    .din0(filt_2_Q_0_1_032_reload),
    .din1(filt_2_Q_1_1_033_reload),
    .din2(filt_2_Q_2_1_034_reload),
    .din3(tmp_22_fu_702_p4),
    .dout(tmp_22_fu_702_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U157(
    .din0(filt_2_Q_0_3_038_reload),
    .din1(filt_2_Q_1_3_039_reload),
    .din2(filt_2_Q_2_3_040_reload),
    .din3(tmp_23_fu_714_p4),
    .dout(tmp_23_fu_714_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U158(
    .din0(filt_2_Q_0_5_044_reload),
    .din1(filt_2_Q_1_5_045_reload),
    .din2(filt_2_Q_2_5_046_reload),
    .din3(tmp_24_fu_726_p4),
    .dout(tmp_24_fu_726_p5)
);

receiver_mux_3_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_3_2_18_1_1_U159(
    .din0(filt_2_Q_0_7_050_reload),
    .din1(filt_2_Q_1_7_051_reload),
    .din2(filt_2_Q_2_7_052_reload),
    .din3(tmp_25_fu_738_p4),
    .dout(tmp_25_fu_738_p5)
);

receiver_mux_7_3_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 18 ))
mux_7_3_18_1_1_U160(
    .din0(tmp_22_fu_702_p5),
    .din1(18'd0),
    .din2(tmp_23_fu_714_p5),
    .din3(18'd0),
    .din4(tmp_24_fu_726_p5),
    .din5(18'd0),
    .din6(tmp_25_fu_738_p5),
    .din7(empty_fu_474_p1),
    .dout(tmp_3_fu_750_p9)
);

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln118_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_5_fu_142 <= add_ln118_fu_770_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_5_fu_142 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_fu_468_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln5_reg_816 <= {{ap_sig_allocacmp_i[4:1]}};
        tmp_1_reg_811 <= tmp_1_fu_604_p9;
        tmp_2_reg_821 <= tmp_2_fu_682_p9;
        tmp_3_reg_826 <= tmp_3_fu_750_p9;
        tmp_reg_806 <= tmp_fu_536_p9;
    end
end

always @ (*) begin
    if (((icmp_ln118_fu_468_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i = 5'd0;
    end else begin
        ap_sig_allocacmp_i = i_5_fu_142;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_3_I_ce0 = 1'b1;
    end else begin
        filt_3_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_3_I_we0 = 1'b1;
    end else begin
        filt_3_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_3_Q_ce0 = 1'b1;
    end else begin
        filt_3_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filt_3_Q_we0 = 1'b1;
    end else begin
        filt_3_Q_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln118_fu_770_p2 = (ap_sig_allocacmp_i + 5'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_fu_474_p1 = ap_sig_allocacmp_i[2:0];

assign filt_3_I_address0 = zext_ln119_fu_786_p1;

assign filt_3_I_d0 = (tmp_1_reg_811 + tmp_reg_806);

assign filt_3_Q_address0 = zext_ln119_fu_786_p1;

assign filt_3_Q_d0 = (tmp_3_reg_826 + tmp_2_reg_821);

assign icmp_ln118_fu_468_p2 = ((ap_sig_allocacmp_i < 5'd24) ? 1'b1 : 1'b0);

assign tmp_11_fu_500_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_12_fu_512_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_13_fu_524_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_14_fu_556_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_15_fu_568_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_16_fu_580_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_17_fu_592_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_18_fu_634_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_19_fu_646_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_20_fu_658_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_21_fu_670_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_22_fu_702_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_23_fu_714_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_24_fu_726_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_25_fu_738_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign tmp_s_fu_488_p4 = {{ap_sig_allocacmp_i[4:3]}};

assign zext_ln119_fu_786_p1 = lshr_ln5_reg_816;

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_118_6
