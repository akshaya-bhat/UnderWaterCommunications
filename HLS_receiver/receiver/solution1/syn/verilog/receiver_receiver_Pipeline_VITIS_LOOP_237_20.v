// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_237_20 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_8_Q_address0,
        arr_8_Q_ce0,
        arr_8_Q_q0,
        arr_8_Q_address1,
        arr_8_Q_ce1,
        arr_8_Q_q1,
        arr_8_I_address0,
        arr_8_I_ce0,
        arr_8_I_q0,
        arr_8_I_address1,
        arr_8_I_ce1,
        arr_8_I_q1,
        arr_9_Q_3_0125_out,
        arr_9_Q_3_0125_out_ap_vld,
        arr_9_Q_2_0124_out,
        arr_9_Q_2_0124_out_ap_vld,
        arr_9_Q_1_0123_out,
        arr_9_Q_1_0123_out_ap_vld,
        arr_9_Q_0_0_out,
        arr_9_Q_0_0_out_ap_vld,
        arr_9_I_3_0122_out,
        arr_9_I_3_0122_out_ap_vld,
        arr_9_I_2_0121_out,
        arr_9_I_2_0121_out_ap_vld,
        arr_9_I_1_0120_out,
        arr_9_I_1_0120_out_ap_vld,
        arr_9_I_0_0_out,
        arr_9_I_0_0_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] arr_8_Q_address0;
output   arr_8_Q_ce0;
input  [30:0] arr_8_Q_q0;
output  [2:0] arr_8_Q_address1;
output   arr_8_Q_ce1;
input  [30:0] arr_8_Q_q1;
output  [2:0] arr_8_I_address0;
output   arr_8_I_ce0;
input  [30:0] arr_8_I_q0;
output  [2:0] arr_8_I_address1;
output   arr_8_I_ce1;
input  [30:0] arr_8_I_q1;
output  [23:0] arr_9_Q_3_0125_out;
output   arr_9_Q_3_0125_out_ap_vld;
output  [23:0] arr_9_Q_2_0124_out;
output   arr_9_Q_2_0124_out_ap_vld;
output  [23:0] arr_9_Q_1_0123_out;
output   arr_9_Q_1_0123_out_ap_vld;
output  [23:0] arr_9_Q_0_0_out;
output   arr_9_Q_0_0_out_ap_vld;
output  [23:0] arr_9_I_3_0122_out;
output   arr_9_I_3_0122_out_ap_vld;
output  [23:0] arr_9_I_2_0121_out;
output   arr_9_I_2_0121_out_ap_vld;
output  [23:0] arr_9_I_1_0120_out;
output   arr_9_I_1_0120_out_ap_vld;
output  [23:0] arr_9_I_0_0_out;
output   arr_9_I_0_0_out_ap_vld;

reg ap_idle;
reg arr_8_Q_ce0;
reg arr_8_Q_ce1;
reg arr_8_I_ce0;
reg arr_8_I_ce1;
reg arr_9_Q_3_0125_out_ap_vld;
reg arr_9_Q_2_0124_out_ap_vld;
reg arr_9_Q_1_0123_out_ap_vld;
reg arr_9_Q_0_0_out_ap_vld;
reg arr_9_I_3_0122_out_ap_vld;
reg arr_9_I_2_0121_out_ap_vld;
reg arr_9_I_1_0120_out_ap_vld;
reg arr_9_I_0_0_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_230_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] trunc_ln8_reg_471;
wire   [63:0] i_19_cast22_fu_238_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln238_fu_254_p1;
reg   [3:0] i_fu_70;
wire   [3:0] add_ln237_fu_270_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_5;
reg   [23:0] arr_9_I_1_fu_74;
reg   [23:0] arr_9_I_1_1_fu_78;
reg   [23:0] arr_9_I_1_2_fu_82;
reg   [23:0] arr_9_I_1_3_fu_86;
reg   [23:0] arr_9_Q_1_fu_90;
reg   [23:0] arr_9_Q_1_1_fu_94;
reg   [23:0] arr_9_Q_1_2_fu_98;
reg   [23:0] arr_9_Q_1_3_fu_102;
wire    ap_block_pp0_stage0_01001;
wire   [2:0] empty_fu_244_p1;
wire   [2:0] or_ln238_fu_248_p2;
wire  signed [31:0] sext_ln238_1_fu_285_p1;
wire  signed [31:0] sext_ln238_fu_281_p1;
wire   [31:0] add_ln238_fu_289_p2;
wire  signed [31:0] sext_ln239_1_fu_329_p1;
wire  signed [31:0] sext_ln239_fu_325_p1;
wire   [31:0] add_ln239_fu_333_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_9_I_1_fu_74 <= 24'd0;
        end else if (((trunc_ln8_reg_471 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            arr_9_I_1_fu_74 <= {{add_ln238_fu_289_p2[31:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arr_9_Q_1_fu_90 <= 24'd0;
        end else if (((trunc_ln8_reg_471 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            arr_9_Q_1_fu_90 <= {{add_ln239_fu_333_p2[31:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_fu_230_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_70 <= add_ln237_fu_270_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_70 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln8_reg_471 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_I_1_1_fu_78 <= {{add_ln238_fu_289_p2[31:8]}};
        arr_9_Q_1_1_fu_94 <= {{add_ln239_fu_333_p2[31:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln8_reg_471 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_I_1_2_fu_82 <= {{add_ln238_fu_289_p2[31:8]}};
        arr_9_Q_1_2_fu_98 <= {{add_ln239_fu_333_p2[31:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln8_reg_471 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_I_1_3_fu_86 <= {{add_ln238_fu_289_p2[31:8]}};
        arr_9_Q_1_3_fu_102 <= {{add_ln239_fu_333_p2[31:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_230_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln8_reg_471 <= {{ap_sig_allocacmp_i_5[2:1]}};
    end
end

always @ (*) begin
    if (((tmp_fu_230_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_5 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_5 = i_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_8_I_ce0 = 1'b1;
    end else begin
        arr_8_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_8_I_ce1 = 1'b1;
    end else begin
        arr_8_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_8_Q_ce0 = 1'b1;
    end else begin
        arr_8_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_8_Q_ce1 = 1'b1;
    end else begin
        arr_8_Q_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_230_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_I_0_0_out_ap_vld = 1'b1;
    end else begin
        arr_9_I_0_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_230_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_I_1_0120_out_ap_vld = 1'b1;
    end else begin
        arr_9_I_1_0120_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_230_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_I_2_0121_out_ap_vld = 1'b1;
    end else begin
        arr_9_I_2_0121_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_230_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_I_3_0122_out_ap_vld = 1'b1;
    end else begin
        arr_9_I_3_0122_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_230_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_Q_0_0_out_ap_vld = 1'b1;
    end else begin
        arr_9_Q_0_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_230_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_Q_1_0123_out_ap_vld = 1'b1;
    end else begin
        arr_9_Q_1_0123_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_230_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_Q_2_0124_out_ap_vld = 1'b1;
    end else begin
        arr_9_Q_2_0124_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_230_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_9_Q_3_0125_out_ap_vld = 1'b1;
    end else begin
        arr_9_Q_3_0125_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln237_fu_270_p2 = (ap_sig_allocacmp_i_5 + 4'd2);

assign add_ln238_fu_289_p2 = ($signed(sext_ln238_1_fu_285_p1) + $signed(sext_ln238_fu_281_p1));

assign add_ln239_fu_333_p2 = ($signed(sext_ln239_1_fu_329_p1) + $signed(sext_ln239_fu_325_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign arr_8_I_address0 = zext_ln238_fu_254_p1;

assign arr_8_I_address1 = i_19_cast22_fu_238_p1;

assign arr_8_Q_address0 = zext_ln238_fu_254_p1;

assign arr_8_Q_address1 = i_19_cast22_fu_238_p1;

assign arr_9_I_0_0_out = arr_9_I_1_fu_74;

assign arr_9_I_1_0120_out = arr_9_I_1_1_fu_78;

assign arr_9_I_2_0121_out = arr_9_I_1_2_fu_82;

assign arr_9_I_3_0122_out = arr_9_I_1_3_fu_86;

assign arr_9_Q_0_0_out = arr_9_Q_1_fu_90;

assign arr_9_Q_1_0123_out = arr_9_Q_1_1_fu_94;

assign arr_9_Q_2_0124_out = arr_9_Q_1_2_fu_98;

assign arr_9_Q_3_0125_out = arr_9_Q_1_3_fu_102;

assign empty_fu_244_p1 = ap_sig_allocacmp_i_5[2:0];

assign i_19_cast22_fu_238_p1 = ap_sig_allocacmp_i_5;

assign or_ln238_fu_248_p2 = (empty_fu_244_p1 | 3'd1);

assign sext_ln238_1_fu_285_p1 = $signed(arr_8_I_q0);

assign sext_ln238_fu_281_p1 = $signed(arr_8_I_q1);

assign sext_ln239_1_fu_329_p1 = $signed(arr_8_Q_q0);

assign sext_ln239_fu_325_p1 = $signed(arr_8_Q_q1);

assign tmp_fu_230_p3 = ap_sig_allocacmp_i_5[32'd3];

assign zext_ln238_fu_254_p1 = or_ln238_fu_248_p2;

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_237_20
