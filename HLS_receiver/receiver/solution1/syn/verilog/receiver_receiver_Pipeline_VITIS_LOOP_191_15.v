// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module receiver_receiver_Pipeline_VITIS_LOOP_191_15 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        arr_3_I_address0,
        arr_3_I_ce0,
        arr_3_I_q0,
        arr_3_I_address1,
        arr_3_I_ce1,
        arr_3_I_q1,
        arr_3_I_1_address0,
        arr_3_I_1_ce0,
        arr_3_I_1_q0,
        arr_3_I_1_address1,
        arr_3_I_1_ce1,
        arr_3_I_1_q1,
        arr_4_I_address0,
        arr_4_I_ce0,
        arr_4_I_we0,
        arr_4_I_d0,
        arr_3_Q_address0,
        arr_3_Q_ce0,
        arr_3_Q_q0,
        arr_3_Q_address1,
        arr_3_Q_ce1,
        arr_3_Q_q1,
        arr_3_Q_1_address0,
        arr_3_Q_1_ce0,
        arr_3_Q_1_q0,
        arr_3_Q_1_address1,
        arr_3_Q_1_ce1,
        arr_3_Q_1_q1,
        arr_4_Q_address0,
        arr_4_Q_ce0,
        arr_4_Q_we0,
        arr_4_Q_d0,
        arr_3_I_2_address0,
        arr_3_I_2_ce0,
        arr_3_I_2_q0,
        arr_3_I_2_address1,
        arr_3_I_2_ce1,
        arr_3_I_2_q1,
        arr_3_I_3_address0,
        arr_3_I_3_ce0,
        arr_3_I_3_q0,
        arr_3_I_3_address1,
        arr_3_I_3_ce1,
        arr_3_I_3_q1,
        arr_4_I_1_address0,
        arr_4_I_1_ce0,
        arr_4_I_1_we0,
        arr_4_I_1_d0,
        arr_3_Q_2_address0,
        arr_3_Q_2_ce0,
        arr_3_Q_2_q0,
        arr_3_Q_2_address1,
        arr_3_Q_2_ce1,
        arr_3_Q_2_q1,
        arr_3_Q_3_address0,
        arr_3_Q_3_ce0,
        arr_3_Q_3_q0,
        arr_3_Q_3_address1,
        arr_3_Q_3_ce1,
        arr_3_Q_3_q1,
        arr_4_Q_1_address0,
        arr_4_Q_1_ce0,
        arr_4_Q_1_we0,
        arr_4_Q_1_d0,
        arr_3_I_4_address0,
        arr_3_I_4_ce0,
        arr_3_I_4_q0,
        arr_3_I_4_address1,
        arr_3_I_4_ce1,
        arr_3_I_4_q1,
        arr_3_I_5_address0,
        arr_3_I_5_ce0,
        arr_3_I_5_q0,
        arr_3_I_5_address1,
        arr_3_I_5_ce1,
        arr_3_I_5_q1,
        arr_4_I_2_address0,
        arr_4_I_2_ce0,
        arr_4_I_2_we0,
        arr_4_I_2_d0,
        arr_3_Q_4_address0,
        arr_3_Q_4_ce0,
        arr_3_Q_4_q0,
        arr_3_Q_4_address1,
        arr_3_Q_4_ce1,
        arr_3_Q_4_q1,
        arr_3_Q_5_address0,
        arr_3_Q_5_ce0,
        arr_3_Q_5_q0,
        arr_3_Q_5_address1,
        arr_3_Q_5_ce1,
        arr_3_Q_5_q1,
        arr_4_Q_2_address0,
        arr_4_Q_2_ce0,
        arr_4_Q_2_we0,
        arr_4_Q_2_d0,
        arr_3_I_6_address0,
        arr_3_I_6_ce0,
        arr_3_I_6_q0,
        arr_3_I_6_address1,
        arr_3_I_6_ce1,
        arr_3_I_6_q1,
        arr_3_I_7_address0,
        arr_3_I_7_ce0,
        arr_3_I_7_q0,
        arr_3_I_7_address1,
        arr_3_I_7_ce1,
        arr_3_I_7_q1,
        arr_4_I_3_address0,
        arr_4_I_3_ce0,
        arr_4_I_3_we0,
        arr_4_I_3_d0,
        arr_3_Q_6_address0,
        arr_3_Q_6_ce0,
        arr_3_Q_6_q0,
        arr_3_Q_6_address1,
        arr_3_Q_6_ce1,
        arr_3_Q_6_q1,
        arr_3_Q_7_address0,
        arr_3_Q_7_ce0,
        arr_3_Q_7_q0,
        arr_3_Q_7_address1,
        arr_3_Q_7_ce1,
        arr_3_Q_7_q1,
        arr_4_Q_3_address0,
        arr_4_Q_3_ce0,
        arr_4_Q_3_we0,
        arr_4_Q_3_d0,
        arr_4_I_4_address0,
        arr_4_I_4_ce0,
        arr_4_I_4_we0,
        arr_4_I_4_d0,
        arr_4_Q_4_address0,
        arr_4_Q_4_ce0,
        arr_4_Q_4_we0,
        arr_4_Q_4_d0,
        arr_4_I_5_address0,
        arr_4_I_5_ce0,
        arr_4_I_5_we0,
        arr_4_I_5_d0,
        arr_4_Q_5_address0,
        arr_4_Q_5_ce0,
        arr_4_Q_5_we0,
        arr_4_Q_5_d0,
        arr_4_I_6_address0,
        arr_4_I_6_ce0,
        arr_4_I_6_we0,
        arr_4_I_6_d0,
        arr_4_Q_6_address0,
        arr_4_Q_6_ce0,
        arr_4_Q_6_we0,
        arr_4_Q_6_d0,
        arr_4_I_7_address0,
        arr_4_I_7_ce0,
        arr_4_I_7_we0,
        arr_4_I_7_d0,
        arr_4_Q_7_address0,
        arr_4_Q_7_ce0,
        arr_4_Q_7_we0,
        arr_4_Q_7_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] arr_3_I_address0;
output   arr_3_I_ce0;
input  [25:0] arr_3_I_q0;
output  [5:0] arr_3_I_address1;
output   arr_3_I_ce1;
input  [25:0] arr_3_I_q1;
output  [5:0] arr_3_I_1_address0;
output   arr_3_I_1_ce0;
input  [25:0] arr_3_I_1_q0;
output  [5:0] arr_3_I_1_address1;
output   arr_3_I_1_ce1;
input  [25:0] arr_3_I_1_q1;
output  [4:0] arr_4_I_address0;
output   arr_4_I_ce0;
output   arr_4_I_we0;
output  [26:0] arr_4_I_d0;
output  [5:0] arr_3_Q_address0;
output   arr_3_Q_ce0;
input  [25:0] arr_3_Q_q0;
output  [5:0] arr_3_Q_address1;
output   arr_3_Q_ce1;
input  [25:0] arr_3_Q_q1;
output  [5:0] arr_3_Q_1_address0;
output   arr_3_Q_1_ce0;
input  [25:0] arr_3_Q_1_q0;
output  [5:0] arr_3_Q_1_address1;
output   arr_3_Q_1_ce1;
input  [25:0] arr_3_Q_1_q1;
output  [4:0] arr_4_Q_address0;
output   arr_4_Q_ce0;
output   arr_4_Q_we0;
output  [26:0] arr_4_Q_d0;
output  [5:0] arr_3_I_2_address0;
output   arr_3_I_2_ce0;
input  [25:0] arr_3_I_2_q0;
output  [5:0] arr_3_I_2_address1;
output   arr_3_I_2_ce1;
input  [25:0] arr_3_I_2_q1;
output  [5:0] arr_3_I_3_address0;
output   arr_3_I_3_ce0;
input  [25:0] arr_3_I_3_q0;
output  [5:0] arr_3_I_3_address1;
output   arr_3_I_3_ce1;
input  [25:0] arr_3_I_3_q1;
output  [4:0] arr_4_I_1_address0;
output   arr_4_I_1_ce0;
output   arr_4_I_1_we0;
output  [26:0] arr_4_I_1_d0;
output  [5:0] arr_3_Q_2_address0;
output   arr_3_Q_2_ce0;
input  [25:0] arr_3_Q_2_q0;
output  [5:0] arr_3_Q_2_address1;
output   arr_3_Q_2_ce1;
input  [25:0] arr_3_Q_2_q1;
output  [5:0] arr_3_Q_3_address0;
output   arr_3_Q_3_ce0;
input  [25:0] arr_3_Q_3_q0;
output  [5:0] arr_3_Q_3_address1;
output   arr_3_Q_3_ce1;
input  [25:0] arr_3_Q_3_q1;
output  [4:0] arr_4_Q_1_address0;
output   arr_4_Q_1_ce0;
output   arr_4_Q_1_we0;
output  [26:0] arr_4_Q_1_d0;
output  [5:0] arr_3_I_4_address0;
output   arr_3_I_4_ce0;
input  [25:0] arr_3_I_4_q0;
output  [5:0] arr_3_I_4_address1;
output   arr_3_I_4_ce1;
input  [25:0] arr_3_I_4_q1;
output  [5:0] arr_3_I_5_address0;
output   arr_3_I_5_ce0;
input  [25:0] arr_3_I_5_q0;
output  [5:0] arr_3_I_5_address1;
output   arr_3_I_5_ce1;
input  [25:0] arr_3_I_5_q1;
output  [4:0] arr_4_I_2_address0;
output   arr_4_I_2_ce0;
output   arr_4_I_2_we0;
output  [26:0] arr_4_I_2_d0;
output  [5:0] arr_3_Q_4_address0;
output   arr_3_Q_4_ce0;
input  [25:0] arr_3_Q_4_q0;
output  [5:0] arr_3_Q_4_address1;
output   arr_3_Q_4_ce1;
input  [25:0] arr_3_Q_4_q1;
output  [5:0] arr_3_Q_5_address0;
output   arr_3_Q_5_ce0;
input  [25:0] arr_3_Q_5_q0;
output  [5:0] arr_3_Q_5_address1;
output   arr_3_Q_5_ce1;
input  [25:0] arr_3_Q_5_q1;
output  [4:0] arr_4_Q_2_address0;
output   arr_4_Q_2_ce0;
output   arr_4_Q_2_we0;
output  [26:0] arr_4_Q_2_d0;
output  [5:0] arr_3_I_6_address0;
output   arr_3_I_6_ce0;
input  [25:0] arr_3_I_6_q0;
output  [5:0] arr_3_I_6_address1;
output   arr_3_I_6_ce1;
input  [25:0] arr_3_I_6_q1;
output  [5:0] arr_3_I_7_address0;
output   arr_3_I_7_ce0;
input  [25:0] arr_3_I_7_q0;
output  [5:0] arr_3_I_7_address1;
output   arr_3_I_7_ce1;
input  [25:0] arr_3_I_7_q1;
output  [4:0] arr_4_I_3_address0;
output   arr_4_I_3_ce0;
output   arr_4_I_3_we0;
output  [26:0] arr_4_I_3_d0;
output  [5:0] arr_3_Q_6_address0;
output   arr_3_Q_6_ce0;
input  [25:0] arr_3_Q_6_q0;
output  [5:0] arr_3_Q_6_address1;
output   arr_3_Q_6_ce1;
input  [25:0] arr_3_Q_6_q1;
output  [5:0] arr_3_Q_7_address0;
output   arr_3_Q_7_ce0;
input  [25:0] arr_3_Q_7_q0;
output  [5:0] arr_3_Q_7_address1;
output   arr_3_Q_7_ce1;
input  [25:0] arr_3_Q_7_q1;
output  [4:0] arr_4_Q_3_address0;
output   arr_4_Q_3_ce0;
output   arr_4_Q_3_we0;
output  [26:0] arr_4_Q_3_d0;
output  [4:0] arr_4_I_4_address0;
output   arr_4_I_4_ce0;
output   arr_4_I_4_we0;
output  [26:0] arr_4_I_4_d0;
output  [4:0] arr_4_Q_4_address0;
output   arr_4_Q_4_ce0;
output   arr_4_Q_4_we0;
output  [26:0] arr_4_Q_4_d0;
output  [4:0] arr_4_I_5_address0;
output   arr_4_I_5_ce0;
output   arr_4_I_5_we0;
output  [26:0] arr_4_I_5_d0;
output  [4:0] arr_4_Q_5_address0;
output   arr_4_Q_5_ce0;
output   arr_4_Q_5_we0;
output  [26:0] arr_4_Q_5_d0;
output  [4:0] arr_4_I_6_address0;
output   arr_4_I_6_ce0;
output   arr_4_I_6_we0;
output  [26:0] arr_4_I_6_d0;
output  [4:0] arr_4_Q_6_address0;
output   arr_4_Q_6_ce0;
output   arr_4_Q_6_we0;
output  [26:0] arr_4_Q_6_d0;
output  [4:0] arr_4_I_7_address0;
output   arr_4_I_7_ce0;
output   arr_4_I_7_we0;
output  [26:0] arr_4_I_7_d0;
output  [4:0] arr_4_Q_7_address0;
output   arr_4_Q_7_ce0;
output   arr_4_Q_7_we0;
output  [26:0] arr_4_Q_7_d0;

reg ap_idle;
reg arr_3_I_ce0;
reg arr_3_I_ce1;
reg arr_3_I_1_ce0;
reg arr_3_I_1_ce1;
reg arr_4_I_ce0;
reg arr_4_I_we0;
reg arr_3_Q_ce0;
reg arr_3_Q_ce1;
reg arr_3_Q_1_ce0;
reg arr_3_Q_1_ce1;
reg arr_4_Q_ce0;
reg arr_4_Q_we0;
reg arr_3_I_2_ce0;
reg arr_3_I_2_ce1;
reg arr_3_I_3_ce0;
reg arr_3_I_3_ce1;
reg arr_4_I_1_ce0;
reg arr_4_I_1_we0;
reg arr_3_Q_2_ce0;
reg arr_3_Q_2_ce1;
reg arr_3_Q_3_ce0;
reg arr_3_Q_3_ce1;
reg arr_4_Q_1_ce0;
reg arr_4_Q_1_we0;
reg arr_3_I_4_ce0;
reg arr_3_I_4_ce1;
reg arr_3_I_5_ce0;
reg arr_3_I_5_ce1;
reg arr_4_I_2_ce0;
reg arr_4_I_2_we0;
reg arr_3_Q_4_ce0;
reg arr_3_Q_4_ce1;
reg arr_3_Q_5_ce0;
reg arr_3_Q_5_ce1;
reg arr_4_Q_2_ce0;
reg arr_4_Q_2_we0;
reg arr_3_I_6_ce0;
reg arr_3_I_6_ce1;
reg arr_3_I_7_ce0;
reg arr_3_I_7_ce1;
reg arr_4_I_3_ce0;
reg arr_4_I_3_we0;
reg arr_3_Q_6_ce0;
reg arr_3_Q_6_ce1;
reg arr_3_Q_7_ce0;
reg arr_3_Q_7_ce1;
reg arr_4_Q_3_ce0;
reg arr_4_Q_3_we0;
reg arr_4_I_4_ce0;
reg arr_4_I_4_we0;
reg arr_4_Q_4_ce0;
reg arr_4_Q_4_we0;
reg arr_4_I_5_ce0;
reg arr_4_I_5_we0;
reg arr_4_Q_5_ce0;
reg arr_4_Q_5_we0;
reg arr_4_I_6_ce0;
reg arr_4_I_6_we0;
reg arr_4_Q_6_ce0;
reg arr_4_Q_6_we0;
reg arr_4_I_7_ce0;
reg arr_4_I_7_we0;
reg arr_4_Q_7_ce0;
reg arr_4_Q_7_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln191_fu_770_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] lshr_ln1_reg_1089;
reg   [0:0] icmp_ln191_reg_1164;
wire   [63:0] zext_ln191_fu_734_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln191_1_fu_782_p1;
wire   [63:0] zext_ln193_fu_828_p1;
reg   [8:0] i_fu_104;
wire   [8:0] add_ln191_fu_802_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_10;
wire   [5:0] lshr_ln_fu_724_p4;
wire   [8:0] or_ln191_fu_764_p2;
wire   [5:0] or_ln191_1_fu_776_p2;
wire  signed [26:0] sext_ln193_1_fu_817_p1;
wire  signed [26:0] sext_ln193_fu_813_p1;
wire  signed [26:0] sext_ln193_3_fu_851_p1;
wire  signed [26:0] sext_ln193_2_fu_847_p1;
wire  signed [26:0] sext_ln193_5_fu_866_p1;
wire  signed [26:0] sext_ln193_4_fu_862_p1;
wire  signed [26:0] sext_ln193_7_fu_881_p1;
wire  signed [26:0] sext_ln193_6_fu_877_p1;
wire  signed [26:0] sext_ln194_1_fu_896_p1;
wire  signed [26:0] sext_ln194_fu_892_p1;
wire  signed [26:0] sext_ln194_3_fu_911_p1;
wire  signed [26:0] sext_ln194_2_fu_907_p1;
wire  signed [26:0] sext_ln194_5_fu_926_p1;
wire  signed [26:0] sext_ln194_4_fu_922_p1;
wire  signed [26:0] sext_ln194_7_fu_941_p1;
wire  signed [26:0] sext_ln194_6_fu_937_p1;
wire  signed [26:0] sext_ln193_9_fu_956_p1;
wire  signed [26:0] sext_ln193_8_fu_952_p1;
wire  signed [26:0] sext_ln193_11_fu_971_p1;
wire  signed [26:0] sext_ln193_10_fu_967_p1;
wire  signed [26:0] sext_ln193_13_fu_986_p1;
wire  signed [26:0] sext_ln193_12_fu_982_p1;
wire  signed [26:0] sext_ln193_15_fu_1001_p1;
wire  signed [26:0] sext_ln193_14_fu_997_p1;
wire  signed [26:0] sext_ln194_9_fu_1016_p1;
wire  signed [26:0] sext_ln194_8_fu_1012_p1;
wire  signed [26:0] sext_ln194_11_fu_1031_p1;
wire  signed [26:0] sext_ln194_10_fu_1027_p1;
wire  signed [26:0] sext_ln194_13_fu_1046_p1;
wire  signed [26:0] sext_ln194_12_fu_1042_p1;
wire  signed [26:0] sext_ln194_15_fu_1061_p1;
wire  signed [26:0] sext_ln194_14_fu_1057_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

receiver_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln191_fu_770_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_104 <= add_ln191_fu_802_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_104 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln191_reg_1164 <= icmp_ln191_fu_770_p2;
        lshr_ln1_reg_1089 <= {{ap_sig_allocacmp_i_10[8:4]}};
    end
end

always @ (*) begin
    if (((icmp_ln191_fu_770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_10 = 9'd0;
    end else begin
        ap_sig_allocacmp_i_10 = i_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_1_ce0 = 1'b1;
    end else begin
        arr_3_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_1_ce1 = 1'b1;
    end else begin
        arr_3_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_2_ce0 = 1'b1;
    end else begin
        arr_3_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_2_ce1 = 1'b1;
    end else begin
        arr_3_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_3_ce0 = 1'b1;
    end else begin
        arr_3_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_3_ce1 = 1'b1;
    end else begin
        arr_3_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_4_ce0 = 1'b1;
    end else begin
        arr_3_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_4_ce1 = 1'b1;
    end else begin
        arr_3_I_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_5_ce0 = 1'b1;
    end else begin
        arr_3_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_5_ce1 = 1'b1;
    end else begin
        arr_3_I_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_6_ce0 = 1'b1;
    end else begin
        arr_3_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_6_ce1 = 1'b1;
    end else begin
        arr_3_I_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_7_ce0 = 1'b1;
    end else begin
        arr_3_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_7_ce1 = 1'b1;
    end else begin
        arr_3_I_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_ce0 = 1'b1;
    end else begin
        arr_3_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_I_ce1 = 1'b1;
    end else begin
        arr_3_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_1_ce0 = 1'b1;
    end else begin
        arr_3_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_1_ce1 = 1'b1;
    end else begin
        arr_3_Q_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_2_ce0 = 1'b1;
    end else begin
        arr_3_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_2_ce1 = 1'b1;
    end else begin
        arr_3_Q_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_3_ce0 = 1'b1;
    end else begin
        arr_3_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_3_ce1 = 1'b1;
    end else begin
        arr_3_Q_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_4_ce0 = 1'b1;
    end else begin
        arr_3_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_4_ce1 = 1'b1;
    end else begin
        arr_3_Q_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_5_ce0 = 1'b1;
    end else begin
        arr_3_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_5_ce1 = 1'b1;
    end else begin
        arr_3_Q_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_6_ce0 = 1'b1;
    end else begin
        arr_3_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_6_ce1 = 1'b1;
    end else begin
        arr_3_Q_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_7_ce0 = 1'b1;
    end else begin
        arr_3_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_7_ce1 = 1'b1;
    end else begin
        arr_3_Q_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_ce0 = 1'b1;
    end else begin
        arr_3_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_3_Q_ce1 = 1'b1;
    end else begin
        arr_3_Q_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_1_ce0 = 1'b1;
    end else begin
        arr_4_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_1_we0 = 1'b1;
    end else begin
        arr_4_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_2_ce0 = 1'b1;
    end else begin
        arr_4_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_2_we0 = 1'b1;
    end else begin
        arr_4_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_3_ce0 = 1'b1;
    end else begin
        arr_4_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_3_we0 = 1'b1;
    end else begin
        arr_4_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_4_ce0 = 1'b1;
    end else begin
        arr_4_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_reg_1164 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_4_we0 = 1'b1;
    end else begin
        arr_4_I_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_5_ce0 = 1'b1;
    end else begin
        arr_4_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_reg_1164 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_5_we0 = 1'b1;
    end else begin
        arr_4_I_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_6_ce0 = 1'b1;
    end else begin
        arr_4_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_reg_1164 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_6_we0 = 1'b1;
    end else begin
        arr_4_I_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_7_ce0 = 1'b1;
    end else begin
        arr_4_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_reg_1164 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_7_we0 = 1'b1;
    end else begin
        arr_4_I_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_ce0 = 1'b1;
    end else begin
        arr_4_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_I_we0 = 1'b1;
    end else begin
        arr_4_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_1_ce0 = 1'b1;
    end else begin
        arr_4_Q_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_1_we0 = 1'b1;
    end else begin
        arr_4_Q_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_2_ce0 = 1'b1;
    end else begin
        arr_4_Q_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_2_we0 = 1'b1;
    end else begin
        arr_4_Q_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_3_ce0 = 1'b1;
    end else begin
        arr_4_Q_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_3_we0 = 1'b1;
    end else begin
        arr_4_Q_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_4_ce0 = 1'b1;
    end else begin
        arr_4_Q_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_reg_1164 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_4_we0 = 1'b1;
    end else begin
        arr_4_Q_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_5_ce0 = 1'b1;
    end else begin
        arr_4_Q_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_reg_1164 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_5_we0 = 1'b1;
    end else begin
        arr_4_Q_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_6_ce0 = 1'b1;
    end else begin
        arr_4_Q_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_reg_1164 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_6_we0 = 1'b1;
    end else begin
        arr_4_Q_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_7_ce0 = 1'b1;
    end else begin
        arr_4_Q_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_reg_1164 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_7_we0 = 1'b1;
    end else begin
        arr_4_Q_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_ce0 = 1'b1;
    end else begin
        arr_4_Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr_4_Q_we0 = 1'b1;
    end else begin
        arr_4_Q_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln191_fu_802_p2 = (ap_sig_allocacmp_i_10 + 9'd16);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign arr_3_I_1_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_I_1_address1 = zext_ln191_fu_734_p1;

assign arr_3_I_2_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_I_2_address1 = zext_ln191_fu_734_p1;

assign arr_3_I_3_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_I_3_address1 = zext_ln191_fu_734_p1;

assign arr_3_I_4_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_I_4_address1 = zext_ln191_fu_734_p1;

assign arr_3_I_5_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_I_5_address1 = zext_ln191_fu_734_p1;

assign arr_3_I_6_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_I_6_address1 = zext_ln191_fu_734_p1;

assign arr_3_I_7_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_I_7_address1 = zext_ln191_fu_734_p1;

assign arr_3_I_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_I_address1 = zext_ln191_fu_734_p1;

assign arr_3_Q_1_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_Q_1_address1 = zext_ln191_fu_734_p1;

assign arr_3_Q_2_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_Q_2_address1 = zext_ln191_fu_734_p1;

assign arr_3_Q_3_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_Q_3_address1 = zext_ln191_fu_734_p1;

assign arr_3_Q_4_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_Q_4_address1 = zext_ln191_fu_734_p1;

assign arr_3_Q_5_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_Q_5_address1 = zext_ln191_fu_734_p1;

assign arr_3_Q_6_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_Q_6_address1 = zext_ln191_fu_734_p1;

assign arr_3_Q_7_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_Q_7_address1 = zext_ln191_fu_734_p1;

assign arr_3_Q_address0 = zext_ln191_1_fu_782_p1;

assign arr_3_Q_address1 = zext_ln191_fu_734_p1;

assign arr_4_I_1_address0 = zext_ln193_fu_828_p1;

assign arr_4_I_1_d0 = ($signed(sext_ln193_3_fu_851_p1) + $signed(sext_ln193_2_fu_847_p1));

assign arr_4_I_2_address0 = zext_ln193_fu_828_p1;

assign arr_4_I_2_d0 = ($signed(sext_ln193_5_fu_866_p1) + $signed(sext_ln193_4_fu_862_p1));

assign arr_4_I_3_address0 = zext_ln193_fu_828_p1;

assign arr_4_I_3_d0 = ($signed(sext_ln193_7_fu_881_p1) + $signed(sext_ln193_6_fu_877_p1));

assign arr_4_I_4_address0 = zext_ln193_fu_828_p1;

assign arr_4_I_4_d0 = ($signed(sext_ln193_9_fu_956_p1) + $signed(sext_ln193_8_fu_952_p1));

assign arr_4_I_5_address0 = zext_ln193_fu_828_p1;

assign arr_4_I_5_d0 = ($signed(sext_ln193_11_fu_971_p1) + $signed(sext_ln193_10_fu_967_p1));

assign arr_4_I_6_address0 = zext_ln193_fu_828_p1;

assign arr_4_I_6_d0 = ($signed(sext_ln193_13_fu_986_p1) + $signed(sext_ln193_12_fu_982_p1));

assign arr_4_I_7_address0 = zext_ln193_fu_828_p1;

assign arr_4_I_7_d0 = ($signed(sext_ln193_15_fu_1001_p1) + $signed(sext_ln193_14_fu_997_p1));

assign arr_4_I_address0 = zext_ln193_fu_828_p1;

assign arr_4_I_d0 = ($signed(sext_ln193_1_fu_817_p1) + $signed(sext_ln193_fu_813_p1));

assign arr_4_Q_1_address0 = zext_ln193_fu_828_p1;

assign arr_4_Q_1_d0 = ($signed(sext_ln194_3_fu_911_p1) + $signed(sext_ln194_2_fu_907_p1));

assign arr_4_Q_2_address0 = zext_ln193_fu_828_p1;

assign arr_4_Q_2_d0 = ($signed(sext_ln194_5_fu_926_p1) + $signed(sext_ln194_4_fu_922_p1));

assign arr_4_Q_3_address0 = zext_ln193_fu_828_p1;

assign arr_4_Q_3_d0 = ($signed(sext_ln194_7_fu_941_p1) + $signed(sext_ln194_6_fu_937_p1));

assign arr_4_Q_4_address0 = zext_ln193_fu_828_p1;

assign arr_4_Q_4_d0 = ($signed(sext_ln194_9_fu_1016_p1) + $signed(sext_ln194_8_fu_1012_p1));

assign arr_4_Q_5_address0 = zext_ln193_fu_828_p1;

assign arr_4_Q_5_d0 = ($signed(sext_ln194_11_fu_1031_p1) + $signed(sext_ln194_10_fu_1027_p1));

assign arr_4_Q_6_address0 = zext_ln193_fu_828_p1;

assign arr_4_Q_6_d0 = ($signed(sext_ln194_13_fu_1046_p1) + $signed(sext_ln194_12_fu_1042_p1));

assign arr_4_Q_7_address0 = zext_ln193_fu_828_p1;

assign arr_4_Q_7_d0 = ($signed(sext_ln194_15_fu_1061_p1) + $signed(sext_ln194_14_fu_1057_p1));

assign arr_4_Q_address0 = zext_ln193_fu_828_p1;

assign arr_4_Q_d0 = ($signed(sext_ln194_1_fu_896_p1) + $signed(sext_ln194_fu_892_p1));

assign icmp_ln191_fu_770_p2 = ((or_ln191_fu_764_p2 < 9'd280) ? 1'b1 : 1'b0);

assign lshr_ln_fu_724_p4 = {{ap_sig_allocacmp_i_10[8:3]}};

assign or_ln191_1_fu_776_p2 = (lshr_ln_fu_724_p4 | 6'd1);

assign or_ln191_fu_764_p2 = (ap_sig_allocacmp_i_10 | 9'd8);

assign sext_ln193_10_fu_967_p1 = $signed(arr_3_I_2_q0);

assign sext_ln193_11_fu_971_p1 = $signed(arr_3_I_3_q0);

assign sext_ln193_12_fu_982_p1 = $signed(arr_3_I_4_q0);

assign sext_ln193_13_fu_986_p1 = $signed(arr_3_I_5_q0);

assign sext_ln193_14_fu_997_p1 = $signed(arr_3_I_6_q0);

assign sext_ln193_15_fu_1001_p1 = $signed(arr_3_I_7_q0);

assign sext_ln193_1_fu_817_p1 = $signed(arr_3_I_1_q1);

assign sext_ln193_2_fu_847_p1 = $signed(arr_3_I_2_q1);

assign sext_ln193_3_fu_851_p1 = $signed(arr_3_I_3_q1);

assign sext_ln193_4_fu_862_p1 = $signed(arr_3_I_4_q1);

assign sext_ln193_5_fu_866_p1 = $signed(arr_3_I_5_q1);

assign sext_ln193_6_fu_877_p1 = $signed(arr_3_I_6_q1);

assign sext_ln193_7_fu_881_p1 = $signed(arr_3_I_7_q1);

assign sext_ln193_8_fu_952_p1 = $signed(arr_3_I_q0);

assign sext_ln193_9_fu_956_p1 = $signed(arr_3_I_1_q0);

assign sext_ln193_fu_813_p1 = $signed(arr_3_I_q1);

assign sext_ln194_10_fu_1027_p1 = $signed(arr_3_Q_2_q0);

assign sext_ln194_11_fu_1031_p1 = $signed(arr_3_Q_3_q0);

assign sext_ln194_12_fu_1042_p1 = $signed(arr_3_Q_4_q0);

assign sext_ln194_13_fu_1046_p1 = $signed(arr_3_Q_5_q0);

assign sext_ln194_14_fu_1057_p1 = $signed(arr_3_Q_6_q0);

assign sext_ln194_15_fu_1061_p1 = $signed(arr_3_Q_7_q0);

assign sext_ln194_1_fu_896_p1 = $signed(arr_3_Q_1_q1);

assign sext_ln194_2_fu_907_p1 = $signed(arr_3_Q_2_q1);

assign sext_ln194_3_fu_911_p1 = $signed(arr_3_Q_3_q1);

assign sext_ln194_4_fu_922_p1 = $signed(arr_3_Q_4_q1);

assign sext_ln194_5_fu_926_p1 = $signed(arr_3_Q_5_q1);

assign sext_ln194_6_fu_937_p1 = $signed(arr_3_Q_6_q1);

assign sext_ln194_7_fu_941_p1 = $signed(arr_3_Q_7_q1);

assign sext_ln194_8_fu_1012_p1 = $signed(arr_3_Q_q0);

assign sext_ln194_9_fu_1016_p1 = $signed(arr_3_Q_1_q0);

assign sext_ln194_fu_892_p1 = $signed(arr_3_Q_q1);

assign zext_ln191_1_fu_782_p1 = or_ln191_1_fu_776_p2;

assign zext_ln191_fu_734_p1 = lshr_ln_fu_724_p4;

assign zext_ln193_fu_828_p1 = lshr_ln1_reg_1089;

endmodule //receiver_receiver_Pipeline_VITIS_LOOP_191_15
