// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module transmitter_transmitter_Pipeline_VITIS_LOOP_214_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dataPulseShapedI_address0,
        dataPulseShapedI_ce0,
        dataPulseShapedI_q0,
        dataPulseShapedI_1_address0,
        dataPulseShapedI_1_ce0,
        dataPulseShapedI_1_q0,
        dataPulseShapedI_2_address0,
        dataPulseShapedI_2_ce0,
        dataPulseShapedI_2_q0,
        dataPulseShapedI_3_address0,
        dataPulseShapedI_3_ce0,
        dataPulseShapedI_3_q0,
        dataPulseShapedI_4_address0,
        dataPulseShapedI_4_ce0,
        dataPulseShapedI_4_q0,
        dataPulseShapedI_5_address0,
        dataPulseShapedI_5_ce0,
        dataPulseShapedI_5_q0,
        dataPulseShapedI_6_address0,
        dataPulseShapedI_6_ce0,
        dataPulseShapedI_6_q0,
        dataPulseShapedI_7_address0,
        dataPulseShapedI_7_ce0,
        dataPulseShapedI_7_q0,
        dataPulseShapedI_8_address0,
        dataPulseShapedI_8_ce0,
        dataPulseShapedI_8_q0,
        dataPulseShapedI_9_address0,
        dataPulseShapedI_9_ce0,
        dataPulseShapedI_9_q0,
        dataPulseShapedI_10_address0,
        dataPulseShapedI_10_ce0,
        dataPulseShapedI_10_q0,
        dataPulseShapedI_11_address0,
        dataPulseShapedI_11_ce0,
        dataPulseShapedI_11_q0,
        dataPulseShapedI_12_address0,
        dataPulseShapedI_12_ce0,
        dataPulseShapedI_12_q0,
        dataPulseShapedI_13_address0,
        dataPulseShapedI_13_ce0,
        dataPulseShapedI_13_q0,
        dataPulseShapedI_14_address0,
        dataPulseShapedI_14_ce0,
        dataPulseShapedI_14_q0,
        dataPulseShapedI_15_address0,
        dataPulseShapedI_15_ce0,
        dataPulseShapedI_15_q0,
        dataPulseShapedQ_address0,
        dataPulseShapedQ_ce0,
        dataPulseShapedQ_q0,
        dataPulseShapedQ_1_address0,
        dataPulseShapedQ_1_ce0,
        dataPulseShapedQ_1_q0,
        dataPulseShapedQ_2_address0,
        dataPulseShapedQ_2_ce0,
        dataPulseShapedQ_2_q0,
        dataPulseShapedQ_3_address0,
        dataPulseShapedQ_3_ce0,
        dataPulseShapedQ_3_q0,
        dataPulseShapedQ_4_address0,
        dataPulseShapedQ_4_ce0,
        dataPulseShapedQ_4_q0,
        dataPulseShapedQ_5_address0,
        dataPulseShapedQ_5_ce0,
        dataPulseShapedQ_5_q0,
        dataPulseShapedQ_6_address0,
        dataPulseShapedQ_6_ce0,
        dataPulseShapedQ_6_q0,
        dataPulseShapedQ_7_address0,
        dataPulseShapedQ_7_ce0,
        dataPulseShapedQ_7_q0,
        dataPulseShapedQ_8_address0,
        dataPulseShapedQ_8_ce0,
        dataPulseShapedQ_8_q0,
        dataPulseShapedQ_9_address0,
        dataPulseShapedQ_9_ce0,
        dataPulseShapedQ_9_q0,
        dataPulseShapedQ_10_address0,
        dataPulseShapedQ_10_ce0,
        dataPulseShapedQ_10_q0,
        dataPulseShapedQ_11_address0,
        dataPulseShapedQ_11_ce0,
        dataPulseShapedQ_11_q0,
        dataPulseShapedQ_12_address0,
        dataPulseShapedQ_12_ce0,
        dataPulseShapedQ_12_q0,
        dataPulseShapedQ_13_address0,
        dataPulseShapedQ_13_ce0,
        dataPulseShapedQ_13_q0,
        dataPulseShapedQ_14_address0,
        dataPulseShapedQ_14_ce0,
        dataPulseShapedQ_14_q0,
        dataPulseShapedQ_15_address0,
        dataPulseShapedQ_15_ce0,
        dataPulseShapedQ_15_q0,
        real_output_address0,
        real_output_ce0,
        real_output_we0,
        real_output_d0,
        grp_fu_16066_p_din0,
        grp_fu_16066_p_din1,
        grp_fu_16066_p_opcode,
        grp_fu_16066_p_dout0,
        grp_fu_16066_p_ce,
        grp_fu_16070_p_din0,
        grp_fu_16070_p_din1,
        grp_fu_16070_p_dout0,
        grp_fu_16070_p_ce,
        grp_fu_16074_p_din0,
        grp_fu_16074_p_din1,
        grp_fu_16074_p_dout0,
        grp_fu_16074_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] dataPulseShapedI_address0;
output   dataPulseShapedI_ce0;
input  [31:0] dataPulseShapedI_q0;
output  [8:0] dataPulseShapedI_1_address0;
output   dataPulseShapedI_1_ce0;
input  [31:0] dataPulseShapedI_1_q0;
output  [8:0] dataPulseShapedI_2_address0;
output   dataPulseShapedI_2_ce0;
input  [31:0] dataPulseShapedI_2_q0;
output  [8:0] dataPulseShapedI_3_address0;
output   dataPulseShapedI_3_ce0;
input  [31:0] dataPulseShapedI_3_q0;
output  [8:0] dataPulseShapedI_4_address0;
output   dataPulseShapedI_4_ce0;
input  [31:0] dataPulseShapedI_4_q0;
output  [8:0] dataPulseShapedI_5_address0;
output   dataPulseShapedI_5_ce0;
input  [31:0] dataPulseShapedI_5_q0;
output  [8:0] dataPulseShapedI_6_address0;
output   dataPulseShapedI_6_ce0;
input  [31:0] dataPulseShapedI_6_q0;
output  [8:0] dataPulseShapedI_7_address0;
output   dataPulseShapedI_7_ce0;
input  [31:0] dataPulseShapedI_7_q0;
output  [8:0] dataPulseShapedI_8_address0;
output   dataPulseShapedI_8_ce0;
input  [31:0] dataPulseShapedI_8_q0;
output  [8:0] dataPulseShapedI_9_address0;
output   dataPulseShapedI_9_ce0;
input  [31:0] dataPulseShapedI_9_q0;
output  [8:0] dataPulseShapedI_10_address0;
output   dataPulseShapedI_10_ce0;
input  [31:0] dataPulseShapedI_10_q0;
output  [8:0] dataPulseShapedI_11_address0;
output   dataPulseShapedI_11_ce0;
input  [31:0] dataPulseShapedI_11_q0;
output  [8:0] dataPulseShapedI_12_address0;
output   dataPulseShapedI_12_ce0;
input  [31:0] dataPulseShapedI_12_q0;
output  [8:0] dataPulseShapedI_13_address0;
output   dataPulseShapedI_13_ce0;
input  [31:0] dataPulseShapedI_13_q0;
output  [8:0] dataPulseShapedI_14_address0;
output   dataPulseShapedI_14_ce0;
input  [31:0] dataPulseShapedI_14_q0;
output  [8:0] dataPulseShapedI_15_address0;
output   dataPulseShapedI_15_ce0;
input  [31:0] dataPulseShapedI_15_q0;
output  [8:0] dataPulseShapedQ_address0;
output   dataPulseShapedQ_ce0;
input  [31:0] dataPulseShapedQ_q0;
output  [8:0] dataPulseShapedQ_1_address0;
output   dataPulseShapedQ_1_ce0;
input  [31:0] dataPulseShapedQ_1_q0;
output  [8:0] dataPulseShapedQ_2_address0;
output   dataPulseShapedQ_2_ce0;
input  [31:0] dataPulseShapedQ_2_q0;
output  [8:0] dataPulseShapedQ_3_address0;
output   dataPulseShapedQ_3_ce0;
input  [31:0] dataPulseShapedQ_3_q0;
output  [8:0] dataPulseShapedQ_4_address0;
output   dataPulseShapedQ_4_ce0;
input  [31:0] dataPulseShapedQ_4_q0;
output  [8:0] dataPulseShapedQ_5_address0;
output   dataPulseShapedQ_5_ce0;
input  [31:0] dataPulseShapedQ_5_q0;
output  [8:0] dataPulseShapedQ_6_address0;
output   dataPulseShapedQ_6_ce0;
input  [31:0] dataPulseShapedQ_6_q0;
output  [8:0] dataPulseShapedQ_7_address0;
output   dataPulseShapedQ_7_ce0;
input  [31:0] dataPulseShapedQ_7_q0;
output  [8:0] dataPulseShapedQ_8_address0;
output   dataPulseShapedQ_8_ce0;
input  [31:0] dataPulseShapedQ_8_q0;
output  [8:0] dataPulseShapedQ_9_address0;
output   dataPulseShapedQ_9_ce0;
input  [31:0] dataPulseShapedQ_9_q0;
output  [8:0] dataPulseShapedQ_10_address0;
output   dataPulseShapedQ_10_ce0;
input  [31:0] dataPulseShapedQ_10_q0;
output  [8:0] dataPulseShapedQ_11_address0;
output   dataPulseShapedQ_11_ce0;
input  [31:0] dataPulseShapedQ_11_q0;
output  [8:0] dataPulseShapedQ_12_address0;
output   dataPulseShapedQ_12_ce0;
input  [31:0] dataPulseShapedQ_12_q0;
output  [8:0] dataPulseShapedQ_13_address0;
output   dataPulseShapedQ_13_ce0;
input  [31:0] dataPulseShapedQ_13_q0;
output  [8:0] dataPulseShapedQ_14_address0;
output   dataPulseShapedQ_14_ce0;
input  [31:0] dataPulseShapedQ_14_q0;
output  [8:0] dataPulseShapedQ_15_address0;
output   dataPulseShapedQ_15_ce0;
input  [31:0] dataPulseShapedQ_15_q0;
output  [12:0] real_output_address0;
output   real_output_ce0;
output   real_output_we0;
output  [15:0] real_output_d0;
output  [31:0] grp_fu_16066_p_din0;
output  [31:0] grp_fu_16066_p_din1;
output  [1:0] grp_fu_16066_p_opcode;
input  [31:0] grp_fu_16066_p_dout0;
output   grp_fu_16066_p_ce;
output  [31:0] grp_fu_16070_p_din0;
output  [31:0] grp_fu_16070_p_din1;
input  [31:0] grp_fu_16070_p_dout0;
output   grp_fu_16070_p_ce;
output  [31:0] grp_fu_16074_p_din0;
output  [31:0] grp_fu_16074_p_din1;
input  [31:0] grp_fu_16074_p_dout0;
output   grp_fu_16074_p_ce;

reg ap_idle;
reg dataPulseShapedI_ce0;
reg dataPulseShapedI_1_ce0;
reg dataPulseShapedI_2_ce0;
reg dataPulseShapedI_3_ce0;
reg dataPulseShapedI_4_ce0;
reg dataPulseShapedI_5_ce0;
reg dataPulseShapedI_6_ce0;
reg dataPulseShapedI_7_ce0;
reg dataPulseShapedI_8_ce0;
reg dataPulseShapedI_9_ce0;
reg dataPulseShapedI_10_ce0;
reg dataPulseShapedI_11_ce0;
reg dataPulseShapedI_12_ce0;
reg dataPulseShapedI_13_ce0;
reg dataPulseShapedI_14_ce0;
reg dataPulseShapedI_15_ce0;
reg dataPulseShapedQ_ce0;
reg dataPulseShapedQ_1_ce0;
reg dataPulseShapedQ_2_ce0;
reg dataPulseShapedQ_3_ce0;
reg dataPulseShapedQ_4_ce0;
reg dataPulseShapedQ_5_ce0;
reg dataPulseShapedQ_6_ce0;
reg dataPulseShapedQ_7_ce0;
reg dataPulseShapedQ_8_ce0;
reg dataPulseShapedQ_9_ce0;
reg dataPulseShapedQ_10_ce0;
reg dataPulseShapedQ_11_ce0;
reg dataPulseShapedQ_12_ce0;
reg dataPulseShapedQ_13_ce0;
reg dataPulseShapedQ_14_ce0;
reg dataPulseShapedQ_15_ce0;
reg real_output_ce0;
reg real_output_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_state28_pp0_stage1_iter13;
wire    ap_block_state30_pp0_stage1_iter14;
wire    ap_block_state32_pp0_stage1_iter15;
wire    ap_block_state34_pp0_stage1_iter16;
wire    ap_block_state36_pp0_stage1_iter17;
wire    ap_block_state38_pp0_stage1_iter18;
wire    ap_block_state40_pp0_stage1_iter19;
wire    ap_block_state42_pp0_stage1_iter20;
wire    ap_block_state44_pp0_stage1_iter21;
wire    ap_block_state46_pp0_stage1_iter22;
wire    ap_block_state48_pp0_stage1_iter23;
wire    ap_block_state50_pp0_stage1_iter24;
wire    ap_block_state52_pp0_stage1_iter25;
wire    ap_block_state54_pp0_stage1_iter26;
wire    ap_block_state56_pp0_stage1_iter27;
wire    ap_block_state58_pp0_stage1_iter28;
wire    ap_block_state60_pp0_stage1_iter29;
wire    ap_block_state62_pp0_stage1_iter30;
wire    ap_block_state64_pp0_stage1_iter31;
wire    ap_block_state66_pp0_stage1_iter32;
wire    ap_block_state68_pp0_stage1_iter33;
wire    ap_block_state70_pp0_stage1_iter34;
wire    ap_block_state72_pp0_stage1_iter35;
wire    ap_block_state74_pp0_stage1_iter36;
wire    ap_block_state76_pp0_stage1_iter37;
wire    ap_block_state78_pp0_stage1_iter38;
wire    ap_block_state80_pp0_stage1_iter39;
wire    ap_block_state82_pp0_stage1_iter40;
wire    ap_block_state84_pp0_stage1_iter41;
wire    ap_block_state86_pp0_stage1_iter42;
wire    ap_block_state88_pp0_stage1_iter43;
wire    ap_block_state90_pp0_stage1_iter44;
wire    ap_block_state92_pp0_stage1_iter45;
wire    ap_block_state94_pp0_stage1_iter46;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln214_reg_1115;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [12:0] i_1_reg_1108;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_state29_pp0_stage0_iter14;
wire    ap_block_state31_pp0_stage0_iter15;
wire    ap_block_state33_pp0_stage0_iter16;
wire    ap_block_state35_pp0_stage0_iter17;
wire    ap_block_state37_pp0_stage0_iter18;
wire    ap_block_state39_pp0_stage0_iter19;
wire    ap_block_state41_pp0_stage0_iter20;
wire    ap_block_state43_pp0_stage0_iter21;
wire    ap_block_state45_pp0_stage0_iter22;
wire    ap_block_state47_pp0_stage0_iter23;
wire    ap_block_state49_pp0_stage0_iter24;
wire    ap_block_state51_pp0_stage0_iter25;
wire    ap_block_state53_pp0_stage0_iter26;
wire    ap_block_state55_pp0_stage0_iter27;
wire    ap_block_state57_pp0_stage0_iter28;
wire    ap_block_state59_pp0_stage0_iter29;
wire    ap_block_state61_pp0_stage0_iter30;
wire    ap_block_state63_pp0_stage0_iter31;
wire    ap_block_state65_pp0_stage0_iter32;
wire    ap_block_state67_pp0_stage0_iter33;
wire    ap_block_state69_pp0_stage0_iter34;
wire    ap_block_state71_pp0_stage0_iter35;
wire    ap_block_state73_pp0_stage0_iter36;
wire    ap_block_state75_pp0_stage0_iter37;
wire    ap_block_state77_pp0_stage0_iter38;
wire    ap_block_state79_pp0_stage0_iter39;
wire    ap_block_state81_pp0_stage0_iter40;
wire    ap_block_state83_pp0_stage0_iter41;
wire    ap_block_state85_pp0_stage0_iter42;
wire    ap_block_state87_pp0_stage0_iter43;
wire    ap_block_state89_pp0_stage0_iter44;
wire    ap_block_state91_pp0_stage0_iter45;
wire    ap_block_state93_pp0_stage0_iter46;
wire    ap_block_state95_pp0_stage0_iter47;
wire    ap_block_pp0_stage0_11001;
reg   [12:0] i_1_reg_1108_pp0_iter1_reg;
reg   [12:0] i_1_reg_1108_pp0_iter2_reg;
reg   [12:0] i_1_reg_1108_pp0_iter3_reg;
reg   [12:0] i_1_reg_1108_pp0_iter4_reg;
reg   [12:0] i_1_reg_1108_pp0_iter5_reg;
reg   [12:0] i_1_reg_1108_pp0_iter6_reg;
reg   [12:0] i_1_reg_1108_pp0_iter7_reg;
reg   [12:0] i_1_reg_1108_pp0_iter8_reg;
reg   [12:0] i_1_reg_1108_pp0_iter9_reg;
reg   [12:0] i_1_reg_1108_pp0_iter10_reg;
reg   [12:0] i_1_reg_1108_pp0_iter11_reg;
reg   [12:0] i_1_reg_1108_pp0_iter12_reg;
reg   [12:0] i_1_reg_1108_pp0_iter13_reg;
reg   [12:0] i_1_reg_1108_pp0_iter14_reg;
reg   [12:0] i_1_reg_1108_pp0_iter15_reg;
reg   [12:0] i_1_reg_1108_pp0_iter16_reg;
reg   [12:0] i_1_reg_1108_pp0_iter17_reg;
reg   [12:0] i_1_reg_1108_pp0_iter18_reg;
reg   [12:0] i_1_reg_1108_pp0_iter19_reg;
reg   [12:0] i_1_reg_1108_pp0_iter20_reg;
reg   [12:0] i_1_reg_1108_pp0_iter21_reg;
reg   [12:0] i_1_reg_1108_pp0_iter22_reg;
reg   [12:0] i_1_reg_1108_pp0_iter23_reg;
reg   [12:0] i_1_reg_1108_pp0_iter24_reg;
reg   [12:0] i_1_reg_1108_pp0_iter25_reg;
reg   [12:0] i_1_reg_1108_pp0_iter26_reg;
reg   [12:0] i_1_reg_1108_pp0_iter27_reg;
reg   [12:0] i_1_reg_1108_pp0_iter28_reg;
reg   [12:0] i_1_reg_1108_pp0_iter29_reg;
reg   [12:0] i_1_reg_1108_pp0_iter30_reg;
reg   [12:0] i_1_reg_1108_pp0_iter31_reg;
reg   [12:0] i_1_reg_1108_pp0_iter32_reg;
reg   [12:0] i_1_reg_1108_pp0_iter33_reg;
reg   [12:0] i_1_reg_1108_pp0_iter34_reg;
reg   [12:0] i_1_reg_1108_pp0_iter35_reg;
reg   [12:0] i_1_reg_1108_pp0_iter36_reg;
reg   [12:0] i_1_reg_1108_pp0_iter37_reg;
reg   [12:0] i_1_reg_1108_pp0_iter38_reg;
reg   [12:0] i_1_reg_1108_pp0_iter39_reg;
reg   [12:0] i_1_reg_1108_pp0_iter40_reg;
reg   [12:0] i_1_reg_1108_pp0_iter41_reg;
reg   [12:0] i_1_reg_1108_pp0_iter42_reg;
reg   [12:0] i_1_reg_1108_pp0_iter43_reg;
reg   [12:0] i_1_reg_1108_pp0_iter44_reg;
reg   [12:0] i_1_reg_1108_pp0_iter45_reg;
reg   [12:0] i_1_reg_1108_pp0_iter46_reg;
wire   [0:0] icmp_ln214_fu_653_p2;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter1_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter2_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter3_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter4_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter5_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter6_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter7_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter8_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter9_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter10_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter11_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter12_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter13_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter14_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter15_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter16_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter17_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter18_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter19_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter20_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter21_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter22_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter23_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter24_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter25_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter26_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter27_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter28_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter29_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter30_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter31_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter32_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter33_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter34_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter35_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter36_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter37_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter38_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter39_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter40_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter41_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter42_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter43_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter44_reg;
reg   [0:0] icmp_ln214_reg_1115_pp0_iter45_reg;
wire   [63:0] grp_fu_642_p1;
reg   [63:0] conv_reg_1124;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] grp_fu_637_p2;
reg   [63:0] div_reg_1129;
wire   [31:0] grp_fu_626_p1;
reg   [31:0] t_reg_1134;
reg   [31:0] theta_reg_1139;
wire   [63:0] grp_fu_629_p1;
reg   [63:0] conv3_reg_1144;
wire   [63:0] grp_fu_632_p2;
reg   [63:0] dc_reg_1149;
reg   [0:0] p_Result_s_reg_1154;
wire   [4:0] val_fu_792_p3;
reg   [4:0] val_reg_1159;
wire   [31:0] cos_fu_856_p34;
reg   [31:0] cos_reg_1325;
wire   [31:0] xor_ln223_fu_1000_p2;
reg   [31:0] xor_ln223_reg_1330;
wire   [31:0] tmp_2_fu_1009_p18;
reg   [31:0] tmp_2_reg_1335;
wire   [31:0] tmp_3_fu_1047_p18;
reg   [31:0] tmp_3_reg_1340;
wire   [31:0] sin_fu_1085_p1;
reg   [31:0] modI_reg_1350;
reg   [31:0] modQ_reg_1355;
reg   [31:0] add_reg_1360;
wire   [15:0] trunc_ln227_fu_1093_p1;
reg   [15:0] trunc_ln227_reg_1365;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln224_fu_809_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln214_fu_1097_p1;
reg   [12:0] i_fu_180;
wire   [12:0] add_ln214_fu_659_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_i_1;
reg   [31:0] grp_fu_617_p0;
reg   [31:0] grp_fu_617_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_629_p0;
wire   [31:0] grp_fu_642_p0;
wire   [63:0] data_V_fu_675_p1;
wire   [51:0] p_Result_1_fu_696_p1;
wire   [53:0] mantissa_fu_700_p4;
wire   [10:0] xs_exp_V_fu_686_p4;
wire   [11:0] zext_ln515_fu_714_p1;
wire   [11:0] add_ln515_fu_718_p2;
wire   [10:0] sub_ln1512_fu_732_p2;
wire   [0:0] isNeg_fu_724_p3;
wire  signed [11:0] sext_ln1512_fu_738_p1;
wire   [11:0] ush_fu_742_p3;
wire  signed [31:0] sext_ln1488_fu_750_p1;
wire   [136:0] zext_ln15_fu_710_p1;
wire   [136:0] zext_ln1488_fu_754_p1;
wire   [136:0] r_V_fu_758_p2;
wire   [0:0] tmp_fu_770_p3;
wire   [136:0] r_V_1_fu_764_p2;
wire   [4:0] zext_ln818_fu_778_p1;
wire   [4:0] tmp_1_fu_782_p4;
wire   [8:0] lshr_ln1_fu_800_p4;
wire   [4:0] result_V_1_fu_845_p2;
wire   [4:0] select_ln59_fu_850_p3;
wire   [31:0] tmp_s_fu_926_p34;
wire   [31:0] bitcast_ln223_fu_996_p1;
wire   [3:0] trunc_ln224_fu_1006_p1;
wire   [63:0] bitcast_ln227_fu_1089_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter46_stage0;
reg    ap_idle_pp0_0to45;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to47;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

transmitter_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U6715(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(div_reg_1129),
    .ce(1'b1),
    .dout(grp_fu_626_p1)
);

transmitter_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U6716(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_629_p0),
    .ce(1'b1),
    .dout(grp_fu_629_p1)
);

transmitter_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U6717(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv3_reg_1144),
    .din1(64'd4629700416936869888),
    .ce(1'b1),
    .dout(grp_fu_632_p2)
);

transmitter_ddiv_64ns_64ns_64_59_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_59_no_dsp_1_U6718(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_1124),
    .din1(64'd4683532506232782848),
    .ce(1'b1),
    .dout(grp_fu_637_p2)
);

transmitter_sitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_6_no_dsp_1_U6719(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_642_p0),
    .ce(1'b1),
    .dout(grp_fu_642_p1)
);

transmitter_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U6720(
    .din0(32'd1065353216),
    .din1(32'd1065030842),
    .din2(32'd1064076134),
    .din3(32'd1062525752),
    .din4(32'd1060439287),
    .din5(32'd1057896918),
    .din6(32'd1053028103),
    .din7(32'd1044891052),
    .din8(32'd0),
    .din9(32'd3192374700),
    .din10(32'd3200511751),
    .din11(32'd3205380566),
    .din12(32'd3207922935),
    .din13(32'd3210009400),
    .din14(32'd3211559782),
    .din15(32'd3212514490),
    .din16(32'd3212836864),
    .din17(32'd3212514490),
    .din18(32'd3211559782),
    .din19(32'd3210009400),
    .din20(32'd3207922935),
    .din21(32'd3205380566),
    .din22(32'd3200511751),
    .din23(32'd3192374700),
    .din24(32'd2147483648),
    .din25(32'd1044891052),
    .din26(32'd1053028103),
    .din27(32'd1057896918),
    .din28(32'd1060439287),
    .din29(32'd1062525752),
    .din30(32'd1064076134),
    .din31(32'd1065030842),
    .din32(select_ln59_fu_850_p3),
    .dout(cos_fu_856_p34)
);

transmitter_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U6721(
    .din0(32'd0),
    .din1(32'd3192374700),
    .din2(32'd3200511751),
    .din3(32'd3205380566),
    .din4(32'd3207922935),
    .din5(32'd3210009400),
    .din6(32'd3211559782),
    .din7(32'd3212514490),
    .din8(32'd3212836864),
    .din9(32'd3212514490),
    .din10(32'd3211559782),
    .din11(32'd3210009400),
    .din12(32'd3207922935),
    .din13(32'd3205380566),
    .din14(32'd3200511751),
    .din15(32'd3192374700),
    .din16(32'd2147483648),
    .din17(32'd1044891052),
    .din18(32'd1053028103),
    .din19(32'd1057896918),
    .din20(32'd1060439287),
    .din21(32'd1062525752),
    .din22(32'd1064076134),
    .din23(32'd1065030842),
    .din24(32'd1065353216),
    .din25(32'd1065030842),
    .din26(32'd1064076134),
    .din27(32'd1062525752),
    .din28(32'd1060439287),
    .din29(32'd1057896918),
    .din30(32'd1053028103),
    .din31(32'd1044891052),
    .din32(select_ln59_fu_850_p3),
    .dout(tmp_s_fu_926_p34)
);

transmitter_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U6722(
    .din0(dataPulseShapedI_q0),
    .din1(dataPulseShapedI_1_q0),
    .din2(dataPulseShapedI_2_q0),
    .din3(dataPulseShapedI_3_q0),
    .din4(dataPulseShapedI_4_q0),
    .din5(dataPulseShapedI_5_q0),
    .din6(dataPulseShapedI_6_q0),
    .din7(dataPulseShapedI_7_q0),
    .din8(dataPulseShapedI_8_q0),
    .din9(dataPulseShapedI_9_q0),
    .din10(dataPulseShapedI_10_q0),
    .din11(dataPulseShapedI_11_q0),
    .din12(dataPulseShapedI_12_q0),
    .din13(dataPulseShapedI_13_q0),
    .din14(dataPulseShapedI_14_q0),
    .din15(dataPulseShapedI_15_q0),
    .din16(trunc_ln224_fu_1006_p1),
    .dout(tmp_2_fu_1009_p18)
);

transmitter_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U6723(
    .din0(dataPulseShapedQ_q0),
    .din1(dataPulseShapedQ_1_q0),
    .din2(dataPulseShapedQ_2_q0),
    .din3(dataPulseShapedQ_3_q0),
    .din4(dataPulseShapedQ_4_q0),
    .din5(dataPulseShapedQ_5_q0),
    .din6(dataPulseShapedQ_6_q0),
    .din7(dataPulseShapedQ_7_q0),
    .din8(dataPulseShapedQ_8_q0),
    .din9(dataPulseShapedQ_9_q0),
    .din10(dataPulseShapedQ_10_q0),
    .din11(dataPulseShapedQ_11_q0),
    .din12(dataPulseShapedQ_12_q0),
    .din13(dataPulseShapedQ_13_q0),
    .din14(dataPulseShapedQ_14_q0),
    .din15(dataPulseShapedQ_15_q0),
    .din16(trunc_ln224_fu_1006_p1),
    .dout(tmp_3_fu_1047_p18)
);

transmitter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter46_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter47 == 1'b1))) begin
            ap_enable_reg_pp0_iter47 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter37_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter38_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter39_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter40_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter41_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter42_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter43_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter44_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter45_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter46_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln214_fu_653_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_180 <= add_ln214_fu_659_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_180 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_reg_1360 <= grp_fu_16066_p_dout0;
        div_reg_1129 <= grp_fu_637_p2;
        i_1_reg_1108 <= ap_sig_allocacmp_i_1;
        i_1_reg_1108_pp0_iter10_reg <= i_1_reg_1108_pp0_iter9_reg;
        i_1_reg_1108_pp0_iter11_reg <= i_1_reg_1108_pp0_iter10_reg;
        i_1_reg_1108_pp0_iter12_reg <= i_1_reg_1108_pp0_iter11_reg;
        i_1_reg_1108_pp0_iter13_reg <= i_1_reg_1108_pp0_iter12_reg;
        i_1_reg_1108_pp0_iter14_reg <= i_1_reg_1108_pp0_iter13_reg;
        i_1_reg_1108_pp0_iter15_reg <= i_1_reg_1108_pp0_iter14_reg;
        i_1_reg_1108_pp0_iter16_reg <= i_1_reg_1108_pp0_iter15_reg;
        i_1_reg_1108_pp0_iter17_reg <= i_1_reg_1108_pp0_iter16_reg;
        i_1_reg_1108_pp0_iter18_reg <= i_1_reg_1108_pp0_iter17_reg;
        i_1_reg_1108_pp0_iter19_reg <= i_1_reg_1108_pp0_iter18_reg;
        i_1_reg_1108_pp0_iter1_reg <= i_1_reg_1108;
        i_1_reg_1108_pp0_iter20_reg <= i_1_reg_1108_pp0_iter19_reg;
        i_1_reg_1108_pp0_iter21_reg <= i_1_reg_1108_pp0_iter20_reg;
        i_1_reg_1108_pp0_iter22_reg <= i_1_reg_1108_pp0_iter21_reg;
        i_1_reg_1108_pp0_iter23_reg <= i_1_reg_1108_pp0_iter22_reg;
        i_1_reg_1108_pp0_iter24_reg <= i_1_reg_1108_pp0_iter23_reg;
        i_1_reg_1108_pp0_iter25_reg <= i_1_reg_1108_pp0_iter24_reg;
        i_1_reg_1108_pp0_iter26_reg <= i_1_reg_1108_pp0_iter25_reg;
        i_1_reg_1108_pp0_iter27_reg <= i_1_reg_1108_pp0_iter26_reg;
        i_1_reg_1108_pp0_iter28_reg <= i_1_reg_1108_pp0_iter27_reg;
        i_1_reg_1108_pp0_iter29_reg <= i_1_reg_1108_pp0_iter28_reg;
        i_1_reg_1108_pp0_iter2_reg <= i_1_reg_1108_pp0_iter1_reg;
        i_1_reg_1108_pp0_iter30_reg <= i_1_reg_1108_pp0_iter29_reg;
        i_1_reg_1108_pp0_iter31_reg <= i_1_reg_1108_pp0_iter30_reg;
        i_1_reg_1108_pp0_iter32_reg <= i_1_reg_1108_pp0_iter31_reg;
        i_1_reg_1108_pp0_iter33_reg <= i_1_reg_1108_pp0_iter32_reg;
        i_1_reg_1108_pp0_iter34_reg <= i_1_reg_1108_pp0_iter33_reg;
        i_1_reg_1108_pp0_iter35_reg <= i_1_reg_1108_pp0_iter34_reg;
        i_1_reg_1108_pp0_iter36_reg <= i_1_reg_1108_pp0_iter35_reg;
        i_1_reg_1108_pp0_iter37_reg <= i_1_reg_1108_pp0_iter36_reg;
        i_1_reg_1108_pp0_iter38_reg <= i_1_reg_1108_pp0_iter37_reg;
        i_1_reg_1108_pp0_iter39_reg <= i_1_reg_1108_pp0_iter38_reg;
        i_1_reg_1108_pp0_iter3_reg <= i_1_reg_1108_pp0_iter2_reg;
        i_1_reg_1108_pp0_iter40_reg <= i_1_reg_1108_pp0_iter39_reg;
        i_1_reg_1108_pp0_iter41_reg <= i_1_reg_1108_pp0_iter40_reg;
        i_1_reg_1108_pp0_iter42_reg <= i_1_reg_1108_pp0_iter41_reg;
        i_1_reg_1108_pp0_iter43_reg <= i_1_reg_1108_pp0_iter42_reg;
        i_1_reg_1108_pp0_iter44_reg <= i_1_reg_1108_pp0_iter43_reg;
        i_1_reg_1108_pp0_iter45_reg <= i_1_reg_1108_pp0_iter44_reg;
        i_1_reg_1108_pp0_iter46_reg <= i_1_reg_1108_pp0_iter45_reg;
        i_1_reg_1108_pp0_iter4_reg <= i_1_reg_1108_pp0_iter3_reg;
        i_1_reg_1108_pp0_iter5_reg <= i_1_reg_1108_pp0_iter4_reg;
        i_1_reg_1108_pp0_iter6_reg <= i_1_reg_1108_pp0_iter5_reg;
        i_1_reg_1108_pp0_iter7_reg <= i_1_reg_1108_pp0_iter6_reg;
        i_1_reg_1108_pp0_iter8_reg <= i_1_reg_1108_pp0_iter7_reg;
        i_1_reg_1108_pp0_iter9_reg <= i_1_reg_1108_pp0_iter8_reg;
        icmp_ln214_reg_1115 <= icmp_ln214_fu_653_p2;
        icmp_ln214_reg_1115_pp0_iter10_reg <= icmp_ln214_reg_1115_pp0_iter9_reg;
        icmp_ln214_reg_1115_pp0_iter11_reg <= icmp_ln214_reg_1115_pp0_iter10_reg;
        icmp_ln214_reg_1115_pp0_iter12_reg <= icmp_ln214_reg_1115_pp0_iter11_reg;
        icmp_ln214_reg_1115_pp0_iter13_reg <= icmp_ln214_reg_1115_pp0_iter12_reg;
        icmp_ln214_reg_1115_pp0_iter14_reg <= icmp_ln214_reg_1115_pp0_iter13_reg;
        icmp_ln214_reg_1115_pp0_iter15_reg <= icmp_ln214_reg_1115_pp0_iter14_reg;
        icmp_ln214_reg_1115_pp0_iter16_reg <= icmp_ln214_reg_1115_pp0_iter15_reg;
        icmp_ln214_reg_1115_pp0_iter17_reg <= icmp_ln214_reg_1115_pp0_iter16_reg;
        icmp_ln214_reg_1115_pp0_iter18_reg <= icmp_ln214_reg_1115_pp0_iter17_reg;
        icmp_ln214_reg_1115_pp0_iter19_reg <= icmp_ln214_reg_1115_pp0_iter18_reg;
        icmp_ln214_reg_1115_pp0_iter1_reg <= icmp_ln214_reg_1115;
        icmp_ln214_reg_1115_pp0_iter20_reg <= icmp_ln214_reg_1115_pp0_iter19_reg;
        icmp_ln214_reg_1115_pp0_iter21_reg <= icmp_ln214_reg_1115_pp0_iter20_reg;
        icmp_ln214_reg_1115_pp0_iter22_reg <= icmp_ln214_reg_1115_pp0_iter21_reg;
        icmp_ln214_reg_1115_pp0_iter23_reg <= icmp_ln214_reg_1115_pp0_iter22_reg;
        icmp_ln214_reg_1115_pp0_iter24_reg <= icmp_ln214_reg_1115_pp0_iter23_reg;
        icmp_ln214_reg_1115_pp0_iter25_reg <= icmp_ln214_reg_1115_pp0_iter24_reg;
        icmp_ln214_reg_1115_pp0_iter26_reg <= icmp_ln214_reg_1115_pp0_iter25_reg;
        icmp_ln214_reg_1115_pp0_iter27_reg <= icmp_ln214_reg_1115_pp0_iter26_reg;
        icmp_ln214_reg_1115_pp0_iter28_reg <= icmp_ln214_reg_1115_pp0_iter27_reg;
        icmp_ln214_reg_1115_pp0_iter29_reg <= icmp_ln214_reg_1115_pp0_iter28_reg;
        icmp_ln214_reg_1115_pp0_iter2_reg <= icmp_ln214_reg_1115_pp0_iter1_reg;
        icmp_ln214_reg_1115_pp0_iter30_reg <= icmp_ln214_reg_1115_pp0_iter29_reg;
        icmp_ln214_reg_1115_pp0_iter31_reg <= icmp_ln214_reg_1115_pp0_iter30_reg;
        icmp_ln214_reg_1115_pp0_iter32_reg <= icmp_ln214_reg_1115_pp0_iter31_reg;
        icmp_ln214_reg_1115_pp0_iter33_reg <= icmp_ln214_reg_1115_pp0_iter32_reg;
        icmp_ln214_reg_1115_pp0_iter34_reg <= icmp_ln214_reg_1115_pp0_iter33_reg;
        icmp_ln214_reg_1115_pp0_iter35_reg <= icmp_ln214_reg_1115_pp0_iter34_reg;
        icmp_ln214_reg_1115_pp0_iter36_reg <= icmp_ln214_reg_1115_pp0_iter35_reg;
        icmp_ln214_reg_1115_pp0_iter37_reg <= icmp_ln214_reg_1115_pp0_iter36_reg;
        icmp_ln214_reg_1115_pp0_iter38_reg <= icmp_ln214_reg_1115_pp0_iter37_reg;
        icmp_ln214_reg_1115_pp0_iter39_reg <= icmp_ln214_reg_1115_pp0_iter38_reg;
        icmp_ln214_reg_1115_pp0_iter3_reg <= icmp_ln214_reg_1115_pp0_iter2_reg;
        icmp_ln214_reg_1115_pp0_iter40_reg <= icmp_ln214_reg_1115_pp0_iter39_reg;
        icmp_ln214_reg_1115_pp0_iter41_reg <= icmp_ln214_reg_1115_pp0_iter40_reg;
        icmp_ln214_reg_1115_pp0_iter42_reg <= icmp_ln214_reg_1115_pp0_iter41_reg;
        icmp_ln214_reg_1115_pp0_iter43_reg <= icmp_ln214_reg_1115_pp0_iter42_reg;
        icmp_ln214_reg_1115_pp0_iter44_reg <= icmp_ln214_reg_1115_pp0_iter43_reg;
        icmp_ln214_reg_1115_pp0_iter45_reg <= icmp_ln214_reg_1115_pp0_iter44_reg;
        icmp_ln214_reg_1115_pp0_iter4_reg <= icmp_ln214_reg_1115_pp0_iter3_reg;
        icmp_ln214_reg_1115_pp0_iter5_reg <= icmp_ln214_reg_1115_pp0_iter4_reg;
        icmp_ln214_reg_1115_pp0_iter6_reg <= icmp_ln214_reg_1115_pp0_iter5_reg;
        icmp_ln214_reg_1115_pp0_iter7_reg <= icmp_ln214_reg_1115_pp0_iter6_reg;
        icmp_ln214_reg_1115_pp0_iter8_reg <= icmp_ln214_reg_1115_pp0_iter7_reg;
        icmp_ln214_reg_1115_pp0_iter9_reg <= icmp_ln214_reg_1115_pp0_iter8_reg;
        p_Result_s_reg_1154 <= data_V_fu_675_p1[32'd63];
        t_reg_1134 <= grp_fu_626_p1;
        val_reg_1159 <= val_fu_792_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        conv3_reg_1144 <= grp_fu_629_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_reg_1124 <= grp_fu_642_p1;
        cos_reg_1325 <= cos_fu_856_p34;
        dc_reg_1149 <= grp_fu_632_p2;
        modQ_reg_1355 <= grp_fu_16074_p_dout0;
        tmp_2_reg_1335 <= tmp_2_fu_1009_p18;
        tmp_3_reg_1340 <= tmp_3_fu_1047_p18;
        trunc_ln227_reg_1365 <= trunc_ln227_fu_1093_p1;
        xor_ln223_reg_1330 <= xor_ln223_fu_1000_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        modI_reg_1350 <= grp_fu_16070_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        theta_reg_1139 <= grp_fu_16070_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln214_reg_1115 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln214_reg_1115_pp0_iter45_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        ap_condition_exit_pp0_iter46_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter46_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter46_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to45 = 1'b1;
    end else begin
        ap_idle_pp0_0to45 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to47 = 1'b1;
    end else begin
        ap_idle_pp0_1to47 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_180;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_10_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_11_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_12_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_13_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_14_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_15_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_1_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_2_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_3_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_4_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_5_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_6_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_7_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_8_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_9_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedI_ce0 = 1'b1;
    end else begin
        dataPulseShapedI_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_10_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_11_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_12_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_13_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_14_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_15_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_1_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_2_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_3_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_4_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_5_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_6_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_7_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_8_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_9_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        dataPulseShapedQ_ce0 = 1'b1;
    end else begin
        dataPulseShapedQ_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        grp_fu_617_p0 = tmp_2_reg_1335;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        grp_fu_617_p0 = t_reg_1134;
    end else begin
        grp_fu_617_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        grp_fu_617_p1 = cos_reg_1325;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        grp_fu_617_p1 = 32'd1193033728;
    end else begin
        grp_fu_617_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        grp_fu_629_p0 = add_reg_1360;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        grp_fu_629_p0 = theta_reg_1139;
    end else begin
        grp_fu_629_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter47 == 1'b1))) begin
        real_output_ce0 = 1'b1;
    end else begin
        real_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter47 == 1'b1))) begin
        real_output_we0 = 1'b1;
    end else begin
        real_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter46_stage0) & (ap_idle_pp0_0to45 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to47 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln214_fu_659_p2 = (ap_sig_allocacmp_i_1 + 13'd1);

assign add_ln515_fu_718_p2 = ($signed(zext_ln515_fu_714_p1) + $signed(12'd3073));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage1_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage1_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage1_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage1_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage1_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage1_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage1_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage1_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage1_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage1_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage1_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage1_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage1_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign bitcast_ln223_fu_996_p1 = tmp_s_fu_926_p34;

assign bitcast_ln227_fu_1089_p1 = grp_fu_629_p1;

assign dataPulseShapedI_10_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_11_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_12_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_13_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_14_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_15_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_1_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_2_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_3_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_4_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_5_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_6_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_7_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_8_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_9_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedI_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_10_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_11_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_12_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_13_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_14_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_15_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_1_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_2_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_3_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_4_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_5_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_6_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_7_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_8_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_9_address0 = zext_ln224_fu_809_p1;

assign dataPulseShapedQ_address0 = zext_ln224_fu_809_p1;

assign data_V_fu_675_p1 = dc_reg_1149;

assign grp_fu_16066_p_ce = 1'b1;

assign grp_fu_16066_p_din0 = modI_reg_1350;

assign grp_fu_16066_p_din1 = modQ_reg_1355;

assign grp_fu_16066_p_opcode = 2'd0;

assign grp_fu_16070_p_ce = 1'b1;

assign grp_fu_16070_p_din0 = grp_fu_617_p0;

assign grp_fu_16070_p_din1 = grp_fu_617_p1;

assign grp_fu_16074_p_ce = 1'b1;

assign grp_fu_16074_p_din0 = tmp_3_reg_1340;

assign grp_fu_16074_p_din1 = sin_fu_1085_p1;

assign grp_fu_642_p0 = ap_sig_allocacmp_i_1;

assign icmp_ln214_fu_653_p2 = ((ap_sig_allocacmp_i_1 == 13'd5248) ? 1'b1 : 1'b0);

assign isNeg_fu_724_p3 = add_ln515_fu_718_p2[32'd11];

assign lshr_ln1_fu_800_p4 = {{i_1_reg_1108_pp0_iter39_reg[12:4]}};

assign mantissa_fu_700_p4 = {{{{1'd1}, {p_Result_1_fu_696_p1}}}, {1'd0}};

assign p_Result_1_fu_696_p1 = data_V_fu_675_p1[51:0];

assign r_V_1_fu_764_p2 = zext_ln15_fu_710_p1 << zext_ln1488_fu_754_p1;

assign r_V_fu_758_p2 = zext_ln15_fu_710_p1 >> zext_ln1488_fu_754_p1;

assign real_output_address0 = zext_ln214_fu_1097_p1;

assign real_output_d0 = trunc_ln227_reg_1365;

assign result_V_1_fu_845_p2 = (5'd0 - val_reg_1159);

assign select_ln59_fu_850_p3 = ((p_Result_s_reg_1154[0:0] == 1'b1) ? result_V_1_fu_845_p2 : val_reg_1159);

assign sext_ln1488_fu_750_p1 = $signed(ush_fu_742_p3);

assign sext_ln1512_fu_738_p1 = $signed(sub_ln1512_fu_732_p2);

assign sin_fu_1085_p1 = xor_ln223_reg_1330;

assign sub_ln1512_fu_732_p2 = (11'd1023 - xs_exp_V_fu_686_p4);

assign tmp_1_fu_782_p4 = {{r_V_1_fu_764_p2[57:53]}};

assign tmp_fu_770_p3 = r_V_fu_758_p2[32'd53];

assign trunc_ln224_fu_1006_p1 = i_1_reg_1108_pp0_iter40_reg[3:0];

assign trunc_ln227_fu_1093_p1 = bitcast_ln227_fu_1089_p1[15:0];

assign ush_fu_742_p3 = ((isNeg_fu_724_p3[0:0] == 1'b1) ? sext_ln1512_fu_738_p1 : add_ln515_fu_718_p2);

assign val_fu_792_p3 = ((isNeg_fu_724_p3[0:0] == 1'b1) ? zext_ln818_fu_778_p1 : tmp_1_fu_782_p4);

assign xor_ln223_fu_1000_p2 = (bitcast_ln223_fu_996_p1 ^ 32'd2147483648);

assign xs_exp_V_fu_686_p4 = {{data_V_fu_675_p1[62:52]}};

assign zext_ln1488_fu_754_p1 = $unsigned(sext_ln1488_fu_750_p1);

assign zext_ln15_fu_710_p1 = mantissa_fu_700_p4;

assign zext_ln214_fu_1097_p1 = i_1_reg_1108_pp0_iter46_reg;

assign zext_ln224_fu_809_p1 = lshr_ln1_fu_800_p4;

assign zext_ln515_fu_714_p1 = xs_exp_V_fu_686_p4;

assign zext_ln818_fu_778_p1 = tmp_fu_770_p3;

endmodule //transmitter_transmitter_Pipeline_VITIS_LOOP_214_10
