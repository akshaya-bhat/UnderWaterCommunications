// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="transmitter_transmitter,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.622000,HLS_SYN_LAT=130,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=193,HLS_SYN_LUT=752,HLS_VERSION=2022_2}" *)

module transmitter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_i,
        input_q,
        output_i,
        output_i_ap_vld
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] input_i;
input  [15:0] input_q;
output  [63:0] output_i;
output   output_i_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_i_ap_vld;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] pnGenSequence_address0;
reg    pnGenSequence_ce0;
wire   [0:0] pnGenSequence_q0;
reg   [5:0] pnGenSequence_address1;
reg    pnGenSequence_ce1;
wire   [0:0] pnGenSequence_q1;
reg   [31:0] encoder_state_1;
wire   [4:0] trunc_ln32_fu_526_p1;
reg   [4:0] trunc_ln32_reg_978;
wire   [5:0] trunc_ln29_fu_530_p1;
reg   [5:0] trunc_ln29_reg_983;
reg   [5:0] i_2_reg_988;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln29_fu_542_p1;
reg   [63:0] zext_ln29_reg_1004;
wire   [63:0] zext_ln31_2_fu_553_p1;
reg   [63:0] zext_ln31_2_reg_1015;
wire   [63:0] zext_ln29_1_fu_593_p1;
reg   [63:0] zext_ln29_1_reg_1026;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln29_fu_598_p2;
wire   [63:0] zext_ln31_7_fu_609_p1;
reg   [63:0] zext_ln31_7_reg_1040;
wire   [63:0] zext_ln31_10_fu_663_p1;
reg   [63:0] zext_ln31_10_reg_1065;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln31_13_fu_673_p1;
reg   [63:0] zext_ln31_13_reg_1076;
wire   [63:0] zext_ln31_16_fu_703_p1;
reg   [63:0] zext_ln31_16_reg_1087;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln31_19_fu_713_p1;
reg   [63:0] zext_ln31_19_reg_1098;
wire   [63:0] zext_ln31_22_fu_743_p1;
reg   [63:0] zext_ln31_22_reg_1109;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln31_25_fu_753_p1;
reg   [63:0] zext_ln31_25_reg_1120;
wire   [63:0] zext_ln31_28_fu_783_p1;
reg   [63:0] zext_ln31_28_reg_1131;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln31_31_fu_793_p1;
reg   [63:0] zext_ln31_31_reg_1142;
wire   [63:0] zext_ln31_34_fu_823_p1;
reg   [63:0] zext_ln31_34_reg_1153;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln31_37_fu_833_p1;
reg   [63:0] zext_ln31_37_reg_1164;
wire   [63:0] zext_ln31_40_fu_863_p1;
reg   [63:0] zext_ln31_40_reg_1175;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln31_43_fu_873_p1;
reg   [63:0] zext_ln31_43_reg_1186;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln43_fu_907_p2;
reg   [5:0] scrambledDataI_address0;
reg    scrambledDataI_ce0;
reg    scrambledDataI_we0;
reg   [4:0] scrambledDataI_d0;
wire   [4:0] scrambledDataI_q0;
reg   [5:0] scrambledDataI_address1;
reg    scrambledDataI_ce1;
reg    scrambledDataI_we1;
reg   [4:0] scrambledDataI_d1;
reg   [5:0] scrambledDataQ_address0;
reg    scrambledDataQ_ce0;
reg    scrambledDataQ_we0;
reg   [5:0] scrambledDataQ_d0;
wire   [5:0] scrambledDataQ_q0;
reg   [5:0] scrambledDataQ_address1;
reg    scrambledDataQ_ce1;
reg    scrambledDataQ_we1;
reg   [5:0] scrambledDataQ_d1;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln43_fu_901_p1;
reg   [5:0] i_fu_90;
wire   [5:0] add_ln29_fu_614_p2;
reg   [31:0] and38_i3032_fu_102;
wire   [31:0] zext_ln43_1_fu_962_p1;
wire    ap_CS_fsm_state12;
reg   [5:0] i_1_fu_106;
wire   [5:0] add_ln43_fu_913_p2;
wire   [4:0] xor_ln31_fu_566_p2;
wire   [4:0] zext_ln31_3_fu_578_p1;
wire   [4:0] zext_ln31_5_fu_638_p1;
wire   [4:0] zext_ln31_8_fu_648_p1;
wire   [4:0] zext_ln31_11_fu_678_p1;
wire   [4:0] zext_ln31_14_fu_688_p1;
wire   [4:0] zext_ln31_17_fu_718_p1;
wire   [4:0] zext_ln31_20_fu_728_p1;
wire   [4:0] zext_ln31_23_fu_758_p1;
wire   [4:0] zext_ln31_26_fu_768_p1;
wire   [4:0] zext_ln31_29_fu_798_p1;
wire   [4:0] zext_ln31_32_fu_808_p1;
wire   [4:0] zext_ln31_35_fu_838_p1;
wire   [4:0] zext_ln31_38_fu_848_p1;
wire   [4:0] zext_ln31_41_fu_878_p1;
wire   [4:0] zext_ln31_44_fu_888_p1;
wire   [5:0] xor_ln32_fu_572_p2;
wire   [5:0] zext_ln31_4_fu_583_p1;
wire   [5:0] zext_ln31_6_fu_643_p1;
wire   [5:0] zext_ln31_9_fu_653_p1;
wire   [5:0] zext_ln31_12_fu_683_p1;
wire   [5:0] zext_ln31_15_fu_693_p1;
wire   [5:0] zext_ln31_18_fu_723_p1;
wire   [5:0] zext_ln31_21_fu_733_p1;
wire   [5:0] zext_ln31_24_fu_763_p1;
wire   [5:0] zext_ln31_27_fu_773_p1;
wire   [5:0] zext_ln31_30_fu_803_p1;
wire   [5:0] zext_ln31_33_fu_813_p1;
wire   [5:0] zext_ln31_36_fu_843_p1;
wire   [5:0] zext_ln31_39_fu_853_p1;
wire   [5:0] zext_ln31_42_fu_883_p1;
wire   [5:0] zext_ln31_45_fu_893_p1;
wire   [5:0] or_ln29_fu_547_p2;
wire   [4:0] zext_ln31_fu_558_p1;
wire   [5:0] zext_ln31_1_fu_562_p1;
wire   [5:0] or_ln29_1_fu_588_p2;
wire   [5:0] or_ln29_2_fu_604_p2;
wire   [5:0] or_ln29_3_fu_658_p2;
wire   [5:0] or_ln29_4_fu_668_p2;
wire   [5:0] or_ln29_5_fu_698_p2;
wire   [5:0] or_ln29_6_fu_708_p2;
wire   [5:0] or_ln29_7_fu_738_p2;
wire   [5:0] or_ln29_8_fu_748_p2;
wire   [5:0] or_ln29_9_fu_778_p2;
wire   [5:0] or_ln29_10_fu_788_p2;
wire   [5:0] or_ln29_11_fu_818_p2;
wire   [5:0] or_ln29_12_fu_828_p2;
wire   [5:0] or_ln29_13_fu_858_p2;
wire   [5:0] or_ln29_14_fu_868_p2;
wire   [3:0] trunc_ln220_fu_930_p1;
wire   [4:0] shl_ln_fu_934_p3;
wire   [4:0] or_ln220_fu_942_p2;
wire   [5:0] shl_ln220_1_fu_948_p3;
wire   [5:0] or_ln220_1_fu_956_p2;
reg   [11:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 encoder_state_1 = 32'd0;
end

transmitter_pnGenSequence_ROM_AUTO_1R #(
    .DataWidth( 1 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
pnGenSequence_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pnGenSequence_address0),
    .ce0(pnGenSequence_ce0),
    .q0(pnGenSequence_q0),
    .address1(pnGenSequence_address1),
    .ce1(pnGenSequence_ce1),
    .q1(pnGenSequence_q1)
);

transmitter_scrambledDataI_RAM_AUTO_1R1W #(
    .DataWidth( 5 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
scrambledDataI_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(scrambledDataI_address0),
    .ce0(scrambledDataI_ce0),
    .we0(scrambledDataI_we0),
    .d0(scrambledDataI_d0),
    .q0(scrambledDataI_q0),
    .address1(scrambledDataI_address1),
    .ce1(scrambledDataI_ce1),
    .we1(scrambledDataI_we1),
    .d1(scrambledDataI_d1)
);

transmitter_scrambledDataQ_RAM_AUTO_1R1W #(
    .DataWidth( 6 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
scrambledDataQ_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(scrambledDataQ_address0),
    .ce0(scrambledDataQ_ce0),
    .we0(scrambledDataQ_we0),
    .d0(scrambledDataQ_d0),
    .q0(scrambledDataQ_q0),
    .address1(scrambledDataQ_address1),
    .ce1(scrambledDataQ_ce1),
    .we1(scrambledDataQ_we1),
    .d1(scrambledDataQ_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_598_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        and38_i3032_fu_102 <= encoder_state_1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        and38_i3032_fu_102 <= zext_ln43_1_fu_962_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_598_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_fu_106 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln43_fu_907_p2 == 1'd0))) begin
        i_1_fu_106 <= add_ln43_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_90 <= 6'd0;
    end else if (((icmp_ln29_fu_598_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_fu_90 <= add_ln29_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln43_fu_907_p2 == 1'd1))) begin
        encoder_state_1 <= and38_i3032_fu_102;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_988 <= i_fu_90;
        zext_ln29_reg_1004[5 : 0] <= zext_ln29_fu_542_p1[5 : 0];
        zext_ln31_2_reg_1015[5 : 1] <= zext_ln31_2_fu_553_p1[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln29_reg_983 <= trunc_ln29_fu_530_p1;
        trunc_ln32_reg_978 <= trunc_ln32_fu_526_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln29_1_reg_1026[0] <= zext_ln29_1_fu_593_p1[0];
zext_ln29_1_reg_1026[5 : 2] <= zext_ln29_1_fu_593_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        zext_ln31_10_reg_1065[1 : 0] <= zext_ln31_10_fu_663_p1[1 : 0];
zext_ln31_10_reg_1065[5 : 3] <= zext_ln31_10_fu_663_p1[5 : 3];
        zext_ln31_13_reg_1076[1] <= zext_ln31_13_fu_673_p1[1];
zext_ln31_13_reg_1076[5 : 3] <= zext_ln31_13_fu_673_p1[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        zext_ln31_16_reg_1087[0] <= zext_ln31_16_fu_703_p1[0];
zext_ln31_16_reg_1087[5 : 3] <= zext_ln31_16_fu_703_p1[5 : 3];
        zext_ln31_19_reg_1098[5 : 3] <= zext_ln31_19_fu_713_p1[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        zext_ln31_22_reg_1109[2 : 0] <= zext_ln31_22_fu_743_p1[2 : 0];
zext_ln31_22_reg_1109[5 : 4] <= zext_ln31_22_fu_743_p1[5 : 4];
        zext_ln31_25_reg_1120[2 : 1] <= zext_ln31_25_fu_753_p1[2 : 1];
zext_ln31_25_reg_1120[5 : 4] <= zext_ln31_25_fu_753_p1[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        zext_ln31_28_reg_1131[0] <= zext_ln31_28_fu_783_p1[0];
zext_ln31_28_reg_1131[2] <= zext_ln31_28_fu_783_p1[2];
zext_ln31_28_reg_1131[5 : 4] <= zext_ln31_28_fu_783_p1[5 : 4];
        zext_ln31_31_reg_1142[2] <= zext_ln31_31_fu_793_p1[2];
zext_ln31_31_reg_1142[5 : 4] <= zext_ln31_31_fu_793_p1[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        zext_ln31_34_reg_1153[1 : 0] <= zext_ln31_34_fu_823_p1[1 : 0];
zext_ln31_34_reg_1153[5 : 4] <= zext_ln31_34_fu_823_p1[5 : 4];
        zext_ln31_37_reg_1164[1] <= zext_ln31_37_fu_833_p1[1];
zext_ln31_37_reg_1164[5 : 4] <= zext_ln31_37_fu_833_p1[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        zext_ln31_40_reg_1175[0] <= zext_ln31_40_fu_863_p1[0];
zext_ln31_40_reg_1175[5 : 4] <= zext_ln31_40_fu_863_p1[5 : 4];
        zext_ln31_43_reg_1186[5 : 4] <= zext_ln31_43_fu_873_p1[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_598_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        zext_ln31_7_reg_1040[5 : 2] <= zext_ln31_7_fu_609_p1[5 : 2];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln43_fu_907_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln43_fu_907_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln43_fu_907_p2 == 1'd1))) begin
        output_i_ap_vld = 1'b1;
    end else begin
        output_i_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        pnGenSequence_address0 = zext_ln31_43_fu_873_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        pnGenSequence_address0 = zext_ln31_37_fu_833_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pnGenSequence_address0 = zext_ln31_31_fu_793_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pnGenSequence_address0 = zext_ln31_25_fu_753_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        pnGenSequence_address0 = zext_ln31_19_fu_713_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        pnGenSequence_address0 = zext_ln31_13_fu_673_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pnGenSequence_address0 = zext_ln31_7_fu_609_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pnGenSequence_address0 = zext_ln31_2_fu_553_p1;
    end else begin
        pnGenSequence_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        pnGenSequence_address1 = zext_ln31_40_fu_863_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        pnGenSequence_address1 = zext_ln31_34_fu_823_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pnGenSequence_address1 = zext_ln31_28_fu_783_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pnGenSequence_address1 = zext_ln31_22_fu_743_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        pnGenSequence_address1 = zext_ln31_16_fu_703_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        pnGenSequence_address1 = zext_ln31_10_fu_663_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pnGenSequence_address1 = zext_ln29_1_fu_593_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pnGenSequence_address1 = zext_ln29_fu_542_p1;
    end else begin
        pnGenSequence_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        pnGenSequence_ce0 = 1'b1;
    end else begin
        pnGenSequence_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        pnGenSequence_ce1 = 1'b1;
    end else begin
        pnGenSequence_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        scrambledDataI_address0 = zext_ln43_fu_901_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        scrambledDataI_address0 = zext_ln31_43_reg_1186;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        scrambledDataI_address0 = zext_ln31_37_reg_1164;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        scrambledDataI_address0 = zext_ln31_31_reg_1142;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        scrambledDataI_address0 = zext_ln31_25_reg_1120;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        scrambledDataI_address0 = zext_ln31_19_reg_1098;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        scrambledDataI_address0 = zext_ln31_13_reg_1076;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        scrambledDataI_address0 = zext_ln31_7_reg_1040;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        scrambledDataI_address0 = zext_ln31_2_reg_1015;
    end else begin
        scrambledDataI_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        scrambledDataI_address1 = zext_ln31_40_reg_1175;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        scrambledDataI_address1 = zext_ln31_34_reg_1153;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        scrambledDataI_address1 = zext_ln31_28_reg_1131;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        scrambledDataI_address1 = zext_ln31_22_reg_1109;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        scrambledDataI_address1 = zext_ln31_16_reg_1087;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        scrambledDataI_address1 = zext_ln31_10_reg_1065;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        scrambledDataI_address1 = zext_ln29_1_reg_1026;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        scrambledDataI_address1 = zext_ln29_reg_1004;
    end else begin
        scrambledDataI_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        scrambledDataI_ce0 = 1'b1;
    end else begin
        scrambledDataI_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        scrambledDataI_ce1 = 1'b1;
    end else begin
        scrambledDataI_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        scrambledDataI_d0 = zext_ln31_44_fu_888_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        scrambledDataI_d0 = zext_ln31_38_fu_848_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        scrambledDataI_d0 = zext_ln31_32_fu_808_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        scrambledDataI_d0 = zext_ln31_26_fu_768_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        scrambledDataI_d0 = zext_ln31_20_fu_728_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        scrambledDataI_d0 = zext_ln31_14_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        scrambledDataI_d0 = zext_ln31_8_fu_648_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        scrambledDataI_d0 = zext_ln31_3_fu_578_p1;
    end else begin
        scrambledDataI_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        scrambledDataI_d1 = zext_ln31_41_fu_878_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        scrambledDataI_d1 = zext_ln31_35_fu_838_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        scrambledDataI_d1 = zext_ln31_29_fu_798_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        scrambledDataI_d1 = zext_ln31_23_fu_758_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        scrambledDataI_d1 = zext_ln31_17_fu_718_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        scrambledDataI_d1 = zext_ln31_11_fu_678_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        scrambledDataI_d1 = zext_ln31_5_fu_638_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        scrambledDataI_d1 = xor_ln31_fu_566_p2;
    end else begin
        scrambledDataI_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        scrambledDataI_we0 = 1'b1;
    end else begin
        scrambledDataI_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        scrambledDataI_we1 = 1'b1;
    end else begin
        scrambledDataI_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        scrambledDataQ_address0 = zext_ln43_fu_901_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        scrambledDataQ_address0 = zext_ln31_43_reg_1186;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        scrambledDataQ_address0 = zext_ln31_37_reg_1164;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        scrambledDataQ_address0 = zext_ln31_31_reg_1142;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        scrambledDataQ_address0 = zext_ln31_25_reg_1120;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        scrambledDataQ_address0 = zext_ln31_19_reg_1098;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        scrambledDataQ_address0 = zext_ln31_13_reg_1076;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        scrambledDataQ_address0 = zext_ln31_7_reg_1040;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        scrambledDataQ_address0 = zext_ln31_2_reg_1015;
    end else begin
        scrambledDataQ_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        scrambledDataQ_address1 = zext_ln31_40_reg_1175;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        scrambledDataQ_address1 = zext_ln31_34_reg_1153;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        scrambledDataQ_address1 = zext_ln31_28_reg_1131;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        scrambledDataQ_address1 = zext_ln31_22_reg_1109;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        scrambledDataQ_address1 = zext_ln31_16_reg_1087;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        scrambledDataQ_address1 = zext_ln31_10_reg_1065;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        scrambledDataQ_address1 = zext_ln29_1_reg_1026;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        scrambledDataQ_address1 = zext_ln29_reg_1004;
    end else begin
        scrambledDataQ_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        scrambledDataQ_ce0 = 1'b1;
    end else begin
        scrambledDataQ_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        scrambledDataQ_ce1 = 1'b1;
    end else begin
        scrambledDataQ_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        scrambledDataQ_d0 = zext_ln31_45_fu_893_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        scrambledDataQ_d0 = zext_ln31_39_fu_853_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        scrambledDataQ_d0 = zext_ln31_33_fu_813_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        scrambledDataQ_d0 = zext_ln31_27_fu_773_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        scrambledDataQ_d0 = zext_ln31_21_fu_733_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        scrambledDataQ_d0 = zext_ln31_15_fu_693_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        scrambledDataQ_d0 = zext_ln31_9_fu_653_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        scrambledDataQ_d0 = zext_ln31_4_fu_583_p1;
    end else begin
        scrambledDataQ_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        scrambledDataQ_d1 = zext_ln31_42_fu_883_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        scrambledDataQ_d1 = zext_ln31_36_fu_843_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        scrambledDataQ_d1 = zext_ln31_30_fu_803_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        scrambledDataQ_d1 = zext_ln31_24_fu_763_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        scrambledDataQ_d1 = zext_ln31_18_fu_723_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        scrambledDataQ_d1 = zext_ln31_12_fu_683_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        scrambledDataQ_d1 = zext_ln31_6_fu_643_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        scrambledDataQ_d1 = xor_ln32_fu_572_p2;
    end else begin
        scrambledDataQ_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        scrambledDataQ_we0 = 1'b1;
    end else begin
        scrambledDataQ_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        scrambledDataQ_we1 = 1'b1;
    end else begin
        scrambledDataQ_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln29_fu_598_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln43_fu_907_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln29_fu_614_p2 = (i_fu_90 + 6'd16);

assign add_ln43_fu_913_p2 = (i_1_fu_106 + 6'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign icmp_ln29_fu_598_p2 = ((or_ln29_1_fu_588_p2 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_907_p2 = ((i_1_fu_106 == 6'd50) ? 1'b1 : 1'b0);

assign or_ln220_1_fu_956_p2 = (shl_ln220_1_fu_948_p3 | scrambledDataQ_q0);

assign or_ln220_fu_942_p2 = (shl_ln_fu_934_p3 | scrambledDataI_q0);

assign or_ln29_10_fu_788_p2 = (i_2_reg_988 | 6'd11);

assign or_ln29_11_fu_818_p2 = (i_2_reg_988 | 6'd12);

assign or_ln29_12_fu_828_p2 = (i_2_reg_988 | 6'd13);

assign or_ln29_13_fu_858_p2 = (i_2_reg_988 | 6'd14);

assign or_ln29_14_fu_868_p2 = (i_2_reg_988 | 6'd15);

assign or_ln29_1_fu_588_p2 = (i_fu_90 | 6'd2);

assign or_ln29_2_fu_604_p2 = (i_fu_90 | 6'd3);

assign or_ln29_3_fu_658_p2 = (i_2_reg_988 | 6'd4);

assign or_ln29_4_fu_668_p2 = (i_2_reg_988 | 6'd5);

assign or_ln29_5_fu_698_p2 = (i_2_reg_988 | 6'd6);

assign or_ln29_6_fu_708_p2 = (i_2_reg_988 | 6'd7);

assign or_ln29_7_fu_738_p2 = (i_2_reg_988 | 6'd8);

assign or_ln29_8_fu_748_p2 = (i_2_reg_988 | 6'd9);

assign or_ln29_9_fu_778_p2 = (i_2_reg_988 | 6'd10);

assign or_ln29_fu_547_p2 = (i_fu_90 | 6'd1);

assign output_i = 64'd0;

assign shl_ln220_1_fu_948_p3 = {{or_ln220_fu_942_p2}, {1'd0}};

assign shl_ln_fu_934_p3 = {{trunc_ln220_fu_930_p1}, {1'd0}};

assign trunc_ln220_fu_930_p1 = and38_i3032_fu_102[3:0];

assign trunc_ln29_fu_530_p1 = input_q[5:0];

assign trunc_ln32_fu_526_p1 = input_i[4:0];

assign xor_ln31_fu_566_p2 = (zext_ln31_fu_558_p1 ^ trunc_ln32_reg_978);

assign xor_ln32_fu_572_p2 = (zext_ln31_1_fu_562_p1 ^ trunc_ln29_reg_983);

assign zext_ln29_1_fu_593_p1 = or_ln29_1_fu_588_p2;

assign zext_ln29_fu_542_p1 = i_fu_90;

assign zext_ln31_10_fu_663_p1 = or_ln29_3_fu_658_p2;

assign zext_ln31_11_fu_678_p1 = pnGenSequence_q1;

assign zext_ln31_12_fu_683_p1 = pnGenSequence_q1;

assign zext_ln31_13_fu_673_p1 = or_ln29_4_fu_668_p2;

assign zext_ln31_14_fu_688_p1 = pnGenSequence_q0;

assign zext_ln31_15_fu_693_p1 = pnGenSequence_q0;

assign zext_ln31_16_fu_703_p1 = or_ln29_5_fu_698_p2;

assign zext_ln31_17_fu_718_p1 = pnGenSequence_q1;

assign zext_ln31_18_fu_723_p1 = pnGenSequence_q1;

assign zext_ln31_19_fu_713_p1 = or_ln29_6_fu_708_p2;

assign zext_ln31_1_fu_562_p1 = pnGenSequence_q1;

assign zext_ln31_20_fu_728_p1 = pnGenSequence_q0;

assign zext_ln31_21_fu_733_p1 = pnGenSequence_q0;

assign zext_ln31_22_fu_743_p1 = or_ln29_7_fu_738_p2;

assign zext_ln31_23_fu_758_p1 = pnGenSequence_q1;

assign zext_ln31_24_fu_763_p1 = pnGenSequence_q1;

assign zext_ln31_25_fu_753_p1 = or_ln29_8_fu_748_p2;

assign zext_ln31_26_fu_768_p1 = pnGenSequence_q0;

assign zext_ln31_27_fu_773_p1 = pnGenSequence_q0;

assign zext_ln31_28_fu_783_p1 = or_ln29_9_fu_778_p2;

assign zext_ln31_29_fu_798_p1 = pnGenSequence_q1;

assign zext_ln31_2_fu_553_p1 = or_ln29_fu_547_p2;

assign zext_ln31_30_fu_803_p1 = pnGenSequence_q1;

assign zext_ln31_31_fu_793_p1 = or_ln29_10_fu_788_p2;

assign zext_ln31_32_fu_808_p1 = pnGenSequence_q0;

assign zext_ln31_33_fu_813_p1 = pnGenSequence_q0;

assign zext_ln31_34_fu_823_p1 = or_ln29_11_fu_818_p2;

assign zext_ln31_35_fu_838_p1 = pnGenSequence_q1;

assign zext_ln31_36_fu_843_p1 = pnGenSequence_q1;

assign zext_ln31_37_fu_833_p1 = or_ln29_12_fu_828_p2;

assign zext_ln31_38_fu_848_p1 = pnGenSequence_q0;

assign zext_ln31_39_fu_853_p1 = pnGenSequence_q0;

assign zext_ln31_3_fu_578_p1 = pnGenSequence_q0;

assign zext_ln31_40_fu_863_p1 = or_ln29_13_fu_858_p2;

assign zext_ln31_41_fu_878_p1 = pnGenSequence_q1;

assign zext_ln31_42_fu_883_p1 = pnGenSequence_q1;

assign zext_ln31_43_fu_873_p1 = or_ln29_14_fu_868_p2;

assign zext_ln31_44_fu_888_p1 = pnGenSequence_q0;

assign zext_ln31_45_fu_893_p1 = pnGenSequence_q0;

assign zext_ln31_4_fu_583_p1 = pnGenSequence_q0;

assign zext_ln31_5_fu_638_p1 = pnGenSequence_q1;

assign zext_ln31_6_fu_643_p1 = pnGenSequence_q1;

assign zext_ln31_7_fu_609_p1 = or_ln29_2_fu_604_p2;

assign zext_ln31_8_fu_648_p1 = pnGenSequence_q0;

assign zext_ln31_9_fu_653_p1 = pnGenSequence_q0;

assign zext_ln31_fu_558_p1 = pnGenSequence_q1;

assign zext_ln43_1_fu_962_p1 = or_ln220_1_fu_956_p2;

assign zext_ln43_fu_901_p1 = i_1_fu_106;

always @ (posedge ap_clk) begin
    zext_ln29_reg_1004[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_2_reg_1015[0] <= 1'b1;
    zext_ln31_2_reg_1015[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln29_1_reg_1026[1] <= 1'b1;
    zext_ln29_1_reg_1026[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_7_reg_1040[1:0] <= 2'b11;
    zext_ln31_7_reg_1040[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_10_reg_1065[2] <= 1'b1;
    zext_ln31_10_reg_1065[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_13_reg_1076[0] <= 1'b1;
    zext_ln31_13_reg_1076[2:2] <= 1'b1;
    zext_ln31_13_reg_1076[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_16_reg_1087[2:1] <= 2'b11;
    zext_ln31_16_reg_1087[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_19_reg_1098[2:0] <= 3'b111;
    zext_ln31_19_reg_1098[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_22_reg_1109[3] <= 1'b1;
    zext_ln31_22_reg_1109[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_25_reg_1120[0] <= 1'b1;
    zext_ln31_25_reg_1120[3:3] <= 1'b1;
    zext_ln31_25_reg_1120[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_28_reg_1131[1] <= 1'b1;
    zext_ln31_28_reg_1131[3:3] <= 1'b1;
    zext_ln31_28_reg_1131[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_31_reg_1142[1:0] <= 2'b11;
    zext_ln31_31_reg_1142[3:3] <= 1'b1;
    zext_ln31_31_reg_1142[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_34_reg_1153[3:2] <= 2'b11;
    zext_ln31_34_reg_1153[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_37_reg_1164[0] <= 1'b1;
    zext_ln31_37_reg_1164[3:2] <= 2'b11;
    zext_ln31_37_reg_1164[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_40_reg_1175[3:1] <= 3'b111;
    zext_ln31_40_reg_1175[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_43_reg_1186[3:0] <= 4'b1111;
    zext_ln31_43_reg_1186[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //transmitter
