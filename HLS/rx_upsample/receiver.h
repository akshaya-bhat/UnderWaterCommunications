/*
	Filename: receiver.hpp
		Header file
		Underwater Ultrasonic Receiver written for WES capstone project
*/
#ifndef RECEIVER_H_
#define RECEIVER_H_

//using namespace std;

#include <ap_fixed.h>
#include <ap_int.h>
#include <iostream>
#include <cstring>
#include "hls_stream.h"
#include "ap_axi_sdata.h"


typedef ap_fixed<20,2> sample_t;
typedef ap_fixed<24,6> matched_t;

union fp_int
{
	int i;
	float fp;

	fp_int() {std::memset( this, 0, sizeof( fp_int) ); }
};



typedef ap_axis<16,2,5,6> transPkt_16;
typedef ap_axis<32,2,5,6> transPkt_32;

typedef int	coef_t;
//typedef ap_fixed<12,2> data_t;
//typedef ap_fixed<32,15> corr_t;


/**
 * Parameters
 */
#define CS 23 // length of cos and sin buffers
#define oversample 16 //samples per symbol
#define preambleLen 64
#define preambleLenHalf 32
#define K 7
#define GOL_LEN 32
#define upsamplePacketSize 3776
#define buffer_len 3916
#define start_sample 140
#define downsamplePacketSize 236
#define filtsize 97
#define presize 1120
#define threshold 50000 // TODO: Change to the actual threshold

//int upsampleSize = oversample*(preambleLen+N); //5248

extern int carrier_pos;
extern int packet_start;
extern sample_t samples_I[buffer_len];
extern sample_t samples_Q[buffer_len];
extern matched_t matched_I[buffer_len];
extern matched_t matched_Q[buffer_len];
extern sample_t delay_line_I[filtsize];
extern sample_t delay_line_Q[filtsize];
extern ap_fixed<24,10> corr_I_prev;
extern ap_fixed<24,10> corr_Q_prev;
extern double corr_abs_prev;
extern ap_fixed<24,10> corr_I;
extern ap_fixed<24,10> corr_Q;
extern double corr_abs;
extern int since_packet;
extern bool wrote_packet;




//PULSE SHAPING
const sample_t h[filtsize] = {0.00075802,-0.00057418,-0.0019114,-0.0031321,-0.0041138,-0.0047435,-0.0049286,-0.0046062,-0.003752,-0.0023862,-0.00057678,0.0015609,0.0038678,0.006149,0.0081854,0.0097475,0.010612,0.010581,0.0094986,0.007268,0.0038678,-0.00063817,-0.0060933,-0.012247,-0.01876,-0.025213,-0.031125,-0.035972,-0.039218,-0.040337,-0.03885,-0.034349,-0.026531,-0.015217,-0.00037652,0.017865,0.039218,0.063234,0.089316,0.11674,0.14468,0.17226,0.19854,0.22263,0.24367,0.2609,0.27368,0.28155,0.28421,0.28155,0.27368,0.2609,0.24367,0.22263,0.19854,0.17226,0.14468,0.11674,0.089316,0.063234,0.039218,0.017865,-0.00037652,-0.015217,-0.026531,-0.034349,-0.03885,-0.040337,-0.039218,-0.035972,-0.031125,-0.025213,-0.01876,-0.012247,-0.0060933,-0.00063817,0.0038678,0.007268,0.0094986,0.010581,0.010612,0.0097475,0.0081854,0.006149,0.0038678,0.0015609,-0.00057678,-0.0023862,-0.003752,-0.0046062,-0.0049286,-0.0047435,-0.0041138,-0.0031321,-0.0019114,-0.00057418,0.00075802};

const sample_t preamble_upsampled[presize] = {0.001072,-0.00081201,-0.0027032,-0.0044295,-0.0058177,-0.0067083,-0.00697,-0.0065141,-0.0053061,-0.0033746,-0.00081569,0.0022074,0.0054698,0.0086961,0.011576,0.013785,0.01608,0.014152,0.01073,0.005849,-0.00034791,-0.0076108,-0.015587,-0.023834,-0.031837,-0.039031,-0.044833,-0.048665,-0.049993,-0.048349,-0.043366,-0.034792,-0.02144,-0.0073682,0.010197,0.031114,0.055115,0.081815,0.11072,0.14126,0.17278,0.20458,0.23595,0.26618,0.29461,0.32062,0.34368,0.36338,0.38049,0.39081,0.39724,0.40008,0.39971,0.39666,0.3915,0.38487,0.37739,0.36967,0.36226,0.35561,0.35007,0.34588,0.34315,0.34186,0.34297,0.34223,0.3423,0.34303,0.34425,0.34579,0.34749,0.34921,0.35086,0.35235,0.35364,0.3547,0.35554,0.35616,0.35658,0.35683,0.35583,0.35764,0.35928,0.36059,0.36136,0.36141,0.36061,0.35887,0.35617,0.35259,0.3483,0.34358,0.33878,0.33434,0.33073,0.32844,0.32903,0.32609,0.32701,0.33117,0.33878,0.3498,0.36391,0.38048,0.39862,0.41715,0.43471,0.44974,0.46065,0.46582,0.46376,0.45317,0.43195,0.40068,0.36035,0.31006,0.25043,0.18256,0.10799,0.028676,-0.053061,-0.13463,-0.21326,-0.28611,-0.35042,-0.40359,-0.44337,-0.4679,-0.47697,-0.46864,-0.44167,-0.3979,-0.33878,-0.26647,-0.18371,-0.09371,7.1571e-18,0.09371,0.18371,0.26647,0.33878,0.3979,0.44167,0.46864,0.47697,0.4679,0.44337,0.40359,0.35042,0.28611,0.21326,0.13463,0.053061,-0.028676,-0.10799,-0.18256,-0.25043,-0.31006,-0.36035,-0.40068,-0.4298,-0.45479,-0.46917,-0.47468,-0.47228,-0.46316,-0.44865,-0.43018,-0.40923,-0.38723,-0.36554,-0.34539,-0.32784,-0.31378,-0.30386,-0.29852,-0.29687,-0.30014,-0.30927,-0.32264,-0.33948,-0.3588,-0.37948,-0.40026,-0.41984,-0.43693,-0.45028,-0.45874,-0.46134,-0.45729,-0.44602,-0.42722,-0.39979,-0.37075,-0.33348,-0.2895,-0.23949,-0.18437,-0.12522,-0.063316,-7.1571e-18,0.063316,0.12522,0.18437,0.23949,0.2895,0.33348,0.37075,0.39979,0.42722,0.44602,0.45729,0.46134,0.45874,0.45028,0.43693,0.41984,0.40026,0.37948,0.3588,0.33948,0.32264,0.30927,0.30014,0.29473,0.30014,0.30927,0.32264,0.33948,0.3588,0.37948,0.40026,0.41984,0.43693,0.45028,0.45874,0.46134,0.45729,0.44602,0.42722,0.40193,0.36913,0.32808,0.28064,0.22786,0.17095,0.11128,0.050288,-0.010612,-0.070066,-0.12686,-0.17995,-0.22855,-0.27211,-0.31033,-0.34318,-0.36977,-0.39729,-0.41915,-0.43673,-0.4504,-0.46055,-0.46751,-0.47157,-0.4729,-0.47157,-0.46751,-0.46055,-0.4504,-0.43673,-0.41915,-0.39729,-0.36977,-0.34318,-0.31033,-0.27211,-0.22855,-0.17995,-0.12686,-0.070066,-0.010612,0.050288,0.11128,0.17095,0.22786,0.28064,0.32808,0.36913,0.40193,0.42722,0.44602,0.45729,0.46134,0.45874,0.45028,0.43693,0.41984,0.40026,0.37948,0.3588,0.33948,0.32264,0.30927,0.30014,0.29473,0.30014,0.30927,0.32264,0.33948,0.3588,0.37948,0.40026,0.41984,0.43693,0.45028,0.45874,0.46134,0.45729,0.44602,0.42722,0.40193,0.36913,0.32808,0.28064,0.22786,0.17095,0.11128,0.050288,-0.010612,-0.070066,-0.12686,-0.17995,-0.22855,-0.27211,-0.31033,-0.34318,-0.37191,-0.39567,-0.41374,-0.42787,-0.43877,-0.44713,-0.45357,-0.45854,-0.46229,-0.46482,-0.46588,-0.46496,-0.46134,-0.45412,-0.4423,-0.42486,-0.40193,-0.37148,-0.33179,-0.28381,-0.22786,-0.16473,-0.095681,-0.022397,0.053061,0.12835,0.20095,0.26828,0.32784,0.37734,0.41481,0.43871,0.4491,0.43871,0.41481,0.37734,0.32784,0.26828,0.20095,0.12835,0.053061,-0.022397,-0.095681,-0.16473,-0.22786,-0.28381,-0.33179,-0.37148,-0.40407,-0.42324,-0.4369,-0.44526,-0.44971,-0.45155,-0.45194,-0.45179,-0.45168,-0.45179,-0.45194,-0.45155,-0.44971,-0.44526,-0.4369,-0.42324,-0.40407,-0.37148,-0.33179,-0.28381,-0.22786,-0.16473,-0.095681,-0.022397,0.053061,0.12835,0.20095,0.26828,0.32784,0.37734,0.41481,0.43871,0.44695,0.44033,0.42022,0.3862,0.33948,0.2817,0.21489,0.14138,0.063674,-0.015648,-0.094049,-0.16914,-0.2388,-0.3012,-0.35494,-0.39905,-0.43409,-0.45317,-0.46376,-0.46582,-0.46065,-0.44974,-0.43471,-0.41715,-0.39862,-0.38048,-0.36391,-0.3498,-0.33878,-0.33117,-0.32701,-0.32609,-0.32689,-0.33007,-0.33613,-0.3432,-0.35042,-0.357,-0.36224,-0.36562,-0.36678,-0.36562,-0.36224,-0.357,-0.35042,-0.3432,-0.33613,-0.33007,-0.32689,-0.32609,-0.32701,-0.33117,-0.33878,-0.3498,-0.36391,-0.38048,-0.39862,-0.41715,-0.43471,-0.44974,-0.46065,-0.46582,-0.46376,-0.45317,-0.43195,-0.40068,-0.36035,-0.31006,-0.25043,-0.18256,-0.10799,-0.028676,0.053061,0.13463,0.21326,0.28611,0.35042,0.40359,0.44337,0.4679,0.47483,0.47026,0.44708,0.40676,0.35042,0.27989,0.19765,0.10674,0.010612,-0.086961,-0.18208,-0.27089,-0.34972,-0.41529,-0.46483,-0.49621,-0.50913,-0.49621,-0.46483,-0.41529,-0.34972,-0.27089,-0.18208,-0.086961,0.010612,0.10674,0.19765,0.27989,0.35042,0.40676,0.44708,0.47026,0.47483,0.4679,0.44337,0.40359,0.35042,0.28611,0.21326,0.13463,0.053061,-0.028676,-0.10799,-0.18256,-0.25043,-0.31006,-0.36035,-0.40068,-0.43195,-0.45317,-0.46376,-0.46582,-0.46065,-0.44974,-0.43471,-0.41715,-0.39862,-0.38048,-0.36391,-0.3498,-0.33878,-0.33117,-0.32701,-0.32609,-0.32903,-0.32844,-0.33073,-0.33434,-0.33878,-0.34358,-0.3483,-0.35259,-0.35617,-0.35887,-0.36061,-0.36141,-0.36136,-0.36059,-0.35928,-0.35764,-0.35691,-0.35601,-0.35388,-0.35173,-0.34972,-0.348,-0.34667,-0.34584,-0.34556,-0.34584,-0.34667,-0.348,-0.34972,-0.35173,-0.35388,-0.35601,-0.35691,-0.35764,-0.35928,-0.36059,-0.36136,-0.36141,-0.36061,-0.35887,-0.35617,-0.35259,-0.3483,-0.34358,-0.33878,-0.33434,-0.33073,-0.32844,-0.32903,-0.32609,-0.32701,-0.33117,-0.33878,-0.3498,-0.36391,-0.38048,-0.39862,-0.41715,-0.43471,-0.44974,-0.46065,-0.46582,-0.46376,-0.45317,-0.43195,-0.40068,-0.36035,-0.31006,-0.25043,-0.18256,-0.10799,-0.028676,0.053061,0.13463,0.21326,0.28611,0.35042,0.40359,0.44337,0.4679,0.47697,0.46864,0.44167,0.3979,0.33878,0.26647,0.18371,0.09371,-7.1571e-18,-0.09371,-0.18371,-0.26647,-0.33878,-0.3979,-0.44167,-0.46864,-0.47697,-0.4679,-0.44337,-0.40359,-0.35042,-0.28611,-0.21326,-0.13463,-0.053061,0.028676,0.10799,0.18256,0.25043,0.31006,0.36035,0.40068,0.4298,0.45479,0.46917,0.47468,0.47228,0.46316,0.44865,0.43018,0.40923,0.38723,0.36554,0.34539,0.32784,0.31378,0.30386,0.29852,0.29687,0.30014,0.30927,0.32264,0.33948,0.3588,0.37948,0.40026,0.41984,0.43693,0.45028,0.45874,0.46134,0.45729,0.44602,0.42722,0.39979,0.37075,0.33348,0.2895,0.23949,0.18437,0.12522,0.063316,7.1571e-18,-0.063316,-0.12522,-0.18437,-0.23949,-0.2895,-0.33348,-0.37075,-0.39979,-0.42722,-0.44602,-0.45729,-0.46134,-0.45874,-0.45028,-0.43693,-0.41984,-0.40026,-0.37948,-0.3588,-0.33948,-0.32264,-0.30927,-0.30014,-0.29473,-0.30014,-0.30927,-0.32264,-0.33948,-0.3588,-0.37948,-0.40026,-0.41984,-0.43693,-0.45028,-0.45874,-0.46134,-0.45729,-0.44602,-0.42722,-0.40193,-0.36913,-0.32808,-0.28064,-0.22786,-0.17095,-0.11128,-0.050288,0.010612,0.070066,0.12686,0.17995,0.22855,0.27211,0.31033,0.34318,0.37191,0.39567,0.41374,0.42787,0.43877,0.44713,0.45357,0.45854,0.46229,0.46482,0.46588,0.46496,0.46134,0.45412,0.4423,0.42486,0.40193,0.37148,0.33179,0.28381,0.22786,0.16473,0.095681,0.022397,-0.053061,-0.12835,-0.20095,-0.26828,-0.32784,-0.37734,-0.41481,-0.43871,-0.4491,-0.43871,-0.41481,-0.37734,-0.32784,-0.26828,-0.20095,-0.12835,-0.053061,0.022397,0.095681,0.16473,0.22786,0.28381,0.33179,0.37148,0.40193,0.42486,0.4423,0.45412,0.46134,0.46496,0.46588,0.46482,0.46229,0.45854,0.45357,0.44713,0.43877,0.42787,0.41374,0.39567,0.37406,0.34156,0.30492,0.26325,0.21692,0.16653,0.11292,0.057037,1.019e-17,-0.057037,-0.11292,-0.16653,-0.21692,-0.26325,-0.30492,-0.34156,-0.37406,-0.39567,-0.41374,-0.42787,-0.43877,-0.44713,-0.45357,-0.45854,-0.46229,-0.46482,-0.46588,-0.46496,-0.46134,-0.45412,-0.4423,-0.42486,-0.40193,-0.37148,-0.33179,-0.28381,-0.22786,-0.16473,-0.095681,-0.022397,0.053061,0.12835,0.20095,0.26828,0.32784,0.37734,0.41481,0.43871,0.4491,0.43871,0.41481,0.37734,0.32784,0.26828,0.20095,0.12835,0.053061,-0.022397,-0.095681,-0.16473,-0.22786,-0.28381,-0.33179,-0.37148,-0.40407,-0.42324,-0.4369,-0.44526,-0.44971,-0.45155,-0.45194,-0.45179,-0.45168,-0.45179,-0.45194,-0.45155,-0.44971,-0.44526,-0.4369,-0.42324,-0.40407,-0.37148,-0.33179,-0.28381,-0.22786,-0.16473,-0.095681,-0.022397,0.053061,0.12835,0.20095,0.26828,0.32784,0.37734,0.41481,0.43871,0.44695,0.44033,0.42022,0.3862,0.33948,0.2817,0.21489,0.14138,0.063674,-0.015648,-0.094049,-0.16914,-0.2388,-0.3012,-0.35494,-0.39905,-0.43409,-0.45317,-0.46376,-0.46582,-0.46065,-0.44974,-0.43471,-0.41715,-0.39862,-0.38048,-0.36391,-0.3498,-0.33878,-0.33117,-0.32701,-0.32609,-0.32689,-0.33007,-0.33613,-0.3432,-0.35042,-0.357,-0.36224,-0.36562,-0.36678,-0.36562,-0.36224,-0.357,-0.35042,-0.3432,-0.33613,-0.33007,-0.32689,-0.32609,-0.32701,-0.33117,-0.33878,-0.3498,-0.36391,-0.38048,-0.39862,-0.41715,-0.43471,-0.44974,-0.46065,-0.46582,-0.46376,-0.45317,-0.43195,-0.40068,-0.36035,-0.31006,-0.25043,-0.18256,-0.10799,-0.028676,0.053061,0.13463,0.21326,0.28611,0.35042,0.40359,0.44337,0.4679,0.47483,0.47026,0.44708,0.40676,0.35042,0.27989,0.19765,0.10674,0.010612,-0.086961,-0.18208,-0.27089,-0.34972,-0.41529,-0.46483,-0.49621,-0.50806,-0.49702,-0.46753,-0.41972,-0.35554,-0.2776,-0.18905,-0.093475,0.0053061,0.10336,0.19684,0.2821,0.35589,0.41545,0.45866,0.48405,0.49091,0.48206,0.4541,0.40944,0.35007,0.2785,0.19767,0.1108,0.021225,-0.067707,-0.15282,-0.23123,-0.30042,-0.35841,-0.40372,-0.43547,-0.45339,-0.46054,-0.45356,-0.43471,-0.40553,-0.36793,-0.32398,-0.27589,-0.22584,-0.1759,-0.12796,-0.08362,-0.044175,-0.010557,0.016669,0.037297,0.051456,0.062362,0.066518,0.065741,0.060932,0.05308,0.043201,0.032282,0.021225,0.010806,0.0016472,-0.0058058,-0.011288,-0.014708,-0.016136,-0.015776,-0.013936,-0.013785,-0.011576,-0.0086961,-0.0054698,-0.0022074,0.00081569,0.0033746,0.0053061,0.0065141,0.00697,0.0067083,0.0058177,0.0044295,0.0027032,0.00081201,-0.001072,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

//SIN AND COS LUT
const sample_t cos_coefficients_table[CS]={1,-0.57668,-0.33488,0.96292,-0.77571,-0.068242,0.85442,-0.91721,0.20346,0.68255,-0.99069,0.46007,0.46007,-0.99069,0.68255,0.20346,-0.91721,0.85442,-0.068242,-0.77571,0.96292,-0.33488,-0.57668};

const sample_t sin_coefficients_table[CS]={0,0.81697,-0.94226,0.2698,0.63109,-0.99767,0.51958,0.3984,-0.97908,0.73084,0.13617,-0.88789,0.88789,-0.13617,-0.73084,0.97908,-0.3984,-0.51958,0.99767,-0.63109,-0.2698,0.94226,-0.81697};


//void transmitter (data_t* input_i, data_t* input_q, double* output_i);
//int receiver(corr_t *result_I, corr_t *result_Q, data_t new_sample);
void receiver(hls::stream<transPkt_16> &input, hls::stream<transPkt_32> &output_i, hls::stream<transPkt_32> &output_q);

#endif
